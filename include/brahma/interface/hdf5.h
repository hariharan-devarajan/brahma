
///
/// This file is generated by tools/generate_interfaces.py
/// Generated on: 2025-03-07 16:06:05
///

#ifndef BRAHMA_HDF5_H
#define BRAHMA_HDF5_H
#include <brahma/brahma_config.hpp>
#ifdef BRAHMA_ENABLE_HDF5
#include <brahma/interceptor.h>
#include <brahma/interface/interface.h>
#include <hdf5.h>

namespace brahma {
class HDF5 : public Interface {
 private:
  static std::shared_ptr<HDF5> my_instance;

 public:
  HDF5() : Interface(){};

  virtual ~HDF5(){};

  static std::shared_ptr<HDF5> get_instance();

  static int set_instance(std::shared_ptr<HDF5> instance_i);

  template <typename C>
  size_t bind(const char *name, uint16_t priority);

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5open(void);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5close(void);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5dont_atexit(void);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5garbage_collect(void);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5set_free_list_limits(int reg_global_lim, int reg_list_lim,
                                        int arr_global_lim, int arr_list_lim,
                                        int blk_global_lim, int blk_list_lim);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5get_libversion(unsigned int *majnum, unsigned int *minnum,
                                  unsigned int *relnum);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5check_version(unsigned int majnum, unsigned int minnum,
                                 unsigned int relnum);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5is_library_threadsafe(hbool_t *is_ts);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5free_memory(void *mem);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual void *H5allocate_memory(size_t size, hbool_t clear);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual void *H5resize_memory(void *mem, size_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Iregister(H5I_type_t type, const void *object);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual void *H5Iobject_verify(hid_t id, H5I_type_t type);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual void *H5Iremove_verify(hid_t id, H5I_type_t type);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual H5I_type_t H5Iget_type(hid_t id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Iget_file_id(hid_t id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5Iget_name(hid_t id, char *name, size_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual int H5Iinc_ref(hid_t id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual int H5Idec_ref(hid_t id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual int H5Iget_ref(hid_t id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual H5I_type_t H5Iregister_type(size_t hash_size, unsigned int reserved,
                                      H5I_free_t free_func);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Iclear_type(H5I_type_t type, hbool_t force);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Idestroy_type(H5I_type_t type);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual int H5Iinc_type_ref(H5I_type_t type);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual int H5Idec_type_ref(H5I_type_t type);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual int H5Iget_type_ref(H5I_type_t type);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual void *H5Isearch(H5I_type_t type, H5I_search_func_t func, void *key);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Inmembers(H5I_type_t type, hsize_t *num_members);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Itype_exists(H5I_type_t type);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Iis_valid(hid_t id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Tcreate(H5T_class_t type, size_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Tcopy(hid_t type_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tclose(hid_t type_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Tequal(hid_t type1_id, hid_t type2_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tlock(hid_t type_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tcommit2(hid_t loc_id, const char *name, hid_t type_id,
                            hid_t lcpl_id, hid_t tcpl_id, hid_t tapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Topen2(hid_t loc_id, const char *name, hid_t tapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tcommit_anon(hid_t loc_id, hid_t type_id, hid_t tcpl_id,
                                hid_t tapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Tget_create_plist(hid_t type_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Tcommitted(hid_t type_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tencode(hid_t obj_id, void *buf, size_t *nalloc);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Tdecode(const void *buf);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tinsert(hid_t parent_id, const char *name, size_t offset,
                           hid_t member_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tpack(hid_t type_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Tenum_create(hid_t base_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tenum_insert(hid_t type, const char *name,
                                const void *value);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tenum_nameof(hid_t type, const void *value, char *name,
                                size_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tenum_valueof(hid_t type, const char *name, void *value);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Tvlen_create(hid_t base_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Tarray_create2(hid_t base_id, unsigned int ndims,
                                 const hsize_t dim[]);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual int H5Tget_array_ndims(hid_t type_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual int H5Tget_array_dims2(hid_t type_id, hsize_t dims[]);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tset_tag(hid_t type, const char *tag);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual char *H5Tget_tag(hid_t type);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Tget_super(hid_t type);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual H5T_class_t H5Tget_class(hid_t type_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Tdetect_class(hid_t type_id, H5T_class_t cls);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual size_t H5Tget_size(hid_t type_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual H5T_order_t H5Tget_order(hid_t type_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual size_t H5Tget_precision(hid_t type_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual int H5Tget_offset(hid_t type_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tget_pad(hid_t type_id, H5T_pad_t *lsb, H5T_pad_t *msb);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual H5T_sign_t H5Tget_sign(hid_t type_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tget_fields(hid_t type_id, size_t *spos, size_t *epos,
                               size_t *esize, size_t *mpos, size_t *msize);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual size_t H5Tget_ebias(hid_t type_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual H5T_norm_t H5Tget_norm(hid_t type_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual H5T_pad_t H5Tget_inpad(hid_t type_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual H5T_str_t H5Tget_strpad(hid_t type_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual int H5Tget_nmembers(hid_t type_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual char *H5Tget_member_name(hid_t type_id, unsigned int membno);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual int H5Tget_member_index(hid_t type_id, const char *name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual size_t H5Tget_member_offset(hid_t type_id, unsigned int membno);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual H5T_class_t H5Tget_member_class(hid_t type_id, unsigned int membno);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Tget_member_type(hid_t type_id, unsigned int membno);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tget_member_value(hid_t type_id, unsigned int membno,
                                     void *value);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual H5T_cset_t H5Tget_cset(hid_t type_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Tis_variable_str(hid_t type_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Tget_native_type(hid_t type_id, H5T_direction_t direction);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tset_size(hid_t type_id, size_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tset_order(hid_t type_id, H5T_order_t order);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tset_precision(hid_t type_id, size_t prec);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tset_offset(hid_t type_id, size_t offset);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tset_pad(hid_t type_id, H5T_pad_t lsb, H5T_pad_t msb);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tset_sign(hid_t type_id, H5T_sign_t sign);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tset_fields(hid_t type_id, size_t spos, size_t epos,
                               size_t esize, size_t mpos, size_t msize);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tset_ebias(hid_t type_id, size_t ebias);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tset_norm(hid_t type_id, H5T_norm_t norm);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tset_inpad(hid_t type_id, H5T_pad_t pad);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tset_cset(hid_t type_id, H5T_cset_t cset);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tset_strpad(hid_t type_id, H5T_str_t strpad);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tregister(H5T_pers_t pers, const char *name, hid_t src_id,
                             hid_t dst_id, H5T_conv_t func);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tunregister(H5T_pers_t pers, const char *name, hid_t src_id,
                               hid_t dst_id, H5T_conv_t func);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual H5T_conv_t H5Tfind(hid_t src_id, hid_t dst_id, H5T_cdata_t **pcdata);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Tcompiler_conv(hid_t src_id, hid_t dst_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tconvert(hid_t src_id, hid_t dst_id, size_t nelmts,
                            void *buf, void *background, hid_t plist_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tcommit1(hid_t loc_id, const char *name, hid_t type_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Topen1(hid_t loc_id, const char *name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Tarray_create1(hid_t base_id, int ndims, const hsize_t dim[],
                                 const int perm[]);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual int H5Tget_array_dims1(hid_t type_id, hsize_t dims[], int perm[]);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Lmove(hid_t src_loc, const char *src_name, hid_t dst_loc,
                         const char *dst_name, hid_t lcpl_id, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Lcopy(hid_t src_loc, const char *src_name, hid_t dst_loc,
                         const char *dst_name, hid_t lcpl_id, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Lcreate_hard(hid_t cur_loc, const char *cur_name,
                                hid_t dst_loc, const char *dst_name,
                                hid_t lcpl_id, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Lcreate_soft(const char *link_target, hid_t link_loc_id,
                                const char *link_name, hid_t lcpl_id,
                                hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Ldelete(hid_t loc_id, const char *name, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Ldelete_by_idx(hid_t loc_id, const char *group_name,
                                  H5_index_t idx_type, H5_iter_order_t order,
                                  hsize_t n, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Lget_val(hid_t loc_id, const char *name, void *buf,
                            size_t size, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Lget_val_by_idx(hid_t loc_id, const char *group_name,
                                   H5_index_t idx_type, H5_iter_order_t order,
                                   hsize_t n, void *buf, size_t size,
                                   hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Lexists(hid_t loc_id, const char *name, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual herr_t H5Lget_info(hid_t loc_id, const char *name, H5L_info_t *linfo,
                             hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual herr_t H5Lget_info_by_idx(hid_t loc_id, const char *group_name,
                                    H5_index_t idx_type, H5_iter_order_t order,
                                    hsize_t n, H5L_info_t *linfo,
                                    hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5Lget_name_by_idx(hid_t loc_id, const char *group_name,
                                     H5_index_t idx_type, H5_iter_order_t order,
                                     hsize_t n, char *name, size_t size,
                                     hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual herr_t H5Literate(hid_t grp_id, H5_index_t idx_type,
                            H5_iter_order_t order, hsize_t *idx,
                            H5L_iterate_t op, void *op_data);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual herr_t H5Literate_by_name(hid_t loc_id, const char *group_name,
                                    H5_index_t idx_type, H5_iter_order_t order,
                                    hsize_t *idx, H5L_iterate_t op,
                                    void *op_data, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual herr_t H5Lvisit(hid_t grp_id, H5_index_t idx_type,
                          H5_iter_order_t order, H5L_iterate_t op,
                          void *op_data);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual herr_t H5Lvisit_by_name(hid_t loc_id, const char *group_name,
                                  H5_index_t idx_type, H5_iter_order_t order,
                                  H5L_iterate_t op, void *op_data,
                                  hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Lcreate_ud(hid_t link_loc_id, const char *link_name,
                              H5L_type_t link_type, const void *udata,
                              size_t udata_size, hid_t lcpl_id, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Lregister(const H5L_class_t *cls);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Lunregister(H5L_type_t id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Lis_registered(H5L_type_t id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Lunpack_elink_val(const void *ext_linkval, size_t link_size,
                                     unsigned int *flags, const char **filename,
                                     const char **obj_path);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Lcreate_external(const char *file_name, const char *obj_name,
                                    hid_t link_loc_id, const char *link_name,
                                    hid_t lcpl_id, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Oopen(hid_t loc_id, const char *name, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Oopen_by_addr(hid_t loc_id, haddr_t addr);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Oopen_by_idx(hid_t loc_id, const char *group_name,
                               H5_index_t idx_type, H5_iter_order_t order,
                               hsize_t n, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Oexists_by_name(hid_t loc_id, const char *name,
                                   hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual herr_t H5Oget_info(hid_t loc_id, H5O_info_t *oinfo);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual herr_t H5Oget_info_by_name(hid_t loc_id, const char *name,
                                     H5O_info_t *oinfo, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual herr_t H5Oget_info_by_idx(hid_t loc_id, const char *group_name,
                                    H5_index_t idx_type, H5_iter_order_t order,
                                    hsize_t n, H5O_info_t *oinfo,
                                    hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Olink(hid_t obj_id, hid_t new_loc_id, const char *new_name,
                         hid_t lcpl_id, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Oincr_refcount(hid_t object_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Odecr_refcount(hid_t object_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Ocopy(hid_t src_loc_id, const char *src_name,
                         hid_t dst_loc_id, const char *dst_name,
                         hid_t ocpypl_id, hid_t lcpl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Oset_comment(hid_t obj_id, const char *comment);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Oset_comment_by_name(hid_t loc_id, const char *name,
                                        const char *comment, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5Oget_comment(hid_t obj_id, char *comment, size_t bufsize);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5Oget_comment_by_name(hid_t loc_id, const char *name,
                                         char *comment, size_t bufsize,
                                         hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual herr_t H5Ovisit(hid_t obj_id, H5_index_t idx_type,
                          H5_iter_order_t order, H5O_iterate_t op,
                          void *op_data);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual herr_t H5Ovisit_by_name(hid_t loc_id, const char *obj_name,
                                  H5_index_t idx_type, H5_iter_order_t order,
                                  H5O_iterate_t op, void *op_data,
                                  hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Oclose(hid_t object_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Aclose(hid_t attr_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Acreate2(hid_t loc_id, const char *attr_name, hid_t type_id,
                           hid_t space_id, hid_t acpl_id, hid_t aapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Acreate_by_name(hid_t loc_id, const char *obj_name,
                                  const char *attr_name, hid_t type_id,
                                  hid_t space_id, hid_t acpl_id, hid_t aapl_id,
                                  hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Adelete(hid_t loc_id, const char *attr_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Adelete_by_idx(hid_t loc_id, const char *obj_name,
                                  H5_index_t idx_type, H5_iter_order_t order,
                                  hsize_t n, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Adelete_by_name(hid_t loc_id, const char *obj_name,
                                   const char *attr_name, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Aexists(hid_t obj_id, const char *attr_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Aexists_by_name(hid_t obj_id, const char *obj_name,
                                   const char *attr_name, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Aget_create_plist(hid_t attr_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Aget_info(hid_t attr_id, H5A_info_t *ainfo);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Aget_info_by_idx(hid_t loc_id, const char *obj_name,
                                    H5_index_t idx_type, H5_iter_order_t order,
                                    hsize_t n, H5A_info_t *ainfo,
                                    hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Aget_info_by_name(hid_t loc_id, const char *obj_name,
                                     const char *attr_name, H5A_info_t *ainfo,
                                     hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5Aget_name(hid_t attr_id, size_t buf_size, char *buf);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5Aget_name_by_idx(hid_t loc_id, const char *obj_name,
                                     H5_index_t idx_type, H5_iter_order_t order,
                                     hsize_t n, char *name, size_t size,
                                     hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Aget_space(hid_t attr_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hsize_t H5Aget_storage_size(hid_t attr_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Aget_type(hid_t attr_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Aiterate2(hid_t loc_id, H5_index_t idx_type,
                             H5_iter_order_t order, hsize_t *idx,
                             H5A_operator2_t op, void *op_data);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Aiterate_by_name(hid_t loc_id, const char *obj_name,
                                    H5_index_t idx_type, H5_iter_order_t order,
                                    hsize_t *idx, H5A_operator2_t op,
                                    void *op_data, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Aopen(hid_t obj_id, const char *attr_name, hid_t aapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Aopen_by_idx(hid_t loc_id, const char *obj_name,
                               H5_index_t idx_type, H5_iter_order_t order,
                               hsize_t n, hid_t aapl_id, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Aopen_by_name(hid_t loc_id, const char *obj_name,
                                const char *attr_name, hid_t aapl_id,
                                hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Aread(hid_t attr_id, hid_t type_id, void *buf);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Arename(hid_t loc_id, const char *old_name,
                           const char *new_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Awrite(hid_t attr_id, hid_t type_id, const void *buf);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Arename_by_name(hid_t loc_id, const char *obj_name,
                                   const char *old_attr_name,
                                   const char *new_attr_name, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Acreate1(hid_t loc_id, const char *name, hid_t type_id,
                           hid_t space_id, hid_t acpl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual int H5Aget_num_attrs(hid_t loc_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Aiterate1(hid_t loc_id, unsigned int *idx,
                             H5A_operator1_t op, void *op_data);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Aopen_idx(hid_t loc_id, unsigned int idx);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Aopen_name(hid_t loc_id, const char *name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Dcreate2(hid_t loc_id, const char *name, hid_t type_id,
                           hid_t space_id, hid_t lcpl_id, hid_t dcpl_id,
                           hid_t dapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Dcreate_anon(hid_t loc_id, hid_t type_id, hid_t space_id,
                               hid_t dcpl_id, hid_t dapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Dopen2(hid_t loc_id, const char *name, hid_t dapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Dget_space(hid_t dset_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Dget_space_status(hid_t dset_id,
                                     H5D_space_status_t *allocation);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Dget_type(hid_t dset_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Dget_create_plist(hid_t dset_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Dget_access_plist(hid_t dset_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hsize_t H5Dget_storage_size(hid_t dset_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Dget_chunk_storage_size(hid_t dset_id, const hsize_t *offset,
                                           hsize_t *chunk_bytes);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual haddr_t H5Dget_offset(hid_t dset_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Dread(hid_t dset_id, hid_t mem_type_id, hid_t mem_space_id,
                         hid_t file_space_id, hid_t dxpl_id, void *buf);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Dwrite(hid_t dset_id, hid_t mem_type_id, hid_t mem_space_id,
                          hid_t file_space_id, hid_t dxpl_id, const void *buf);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Diterate(void *buf, hid_t type_id, hid_t space_id,
                            H5D_operator_t op, void *operator_data);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Dvlen_reclaim(hid_t type_id, hid_t space_id, hid_t dxpl_id,
                                 void *buf);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Dvlen_get_buf_size(hid_t dset_id, hid_t type_id,
                                      hid_t space_id, hsize_t *size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Dfill(const void *fill, hid_t fill_type_id, void *buf,
                         hid_t buf_type_id, hid_t space_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Dset_extent(hid_t dset_id, const hsize_t size[]);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Dscatter(H5D_scatter_func_t op, void *op_data, hid_t type_id,
                            hid_t dst_space_id, void *dst_buf);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Dgather(hid_t src_space_id, const void *src_buf,
                           hid_t type_id, size_t dst_buf_size, void *dst_buf,
                           H5D_gather_func_t op, void *op_data);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Dclose(hid_t dset_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Ddebug(hid_t dset_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Dcreate1(hid_t loc_id, const char *name, hid_t type_id,
                           hid_t space_id, hid_t dcpl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Dopen1(hid_t loc_id, const char *name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Dextend(hid_t dset_id, const hsize_t size[]);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Eregister_class(const char *cls_name, const char *lib_name,
                                  const char *version);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Eunregister_class(hid_t class_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Eclose_msg(hid_t err_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Ecreate_msg(hid_t cls, H5E_type_t msg_type, const char *msg);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Ecreate_stack(void);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Eget_current_stack(void);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Eclose_stack(hid_t stack_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5Eget_class_name(hid_t class_id, char *name, size_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Eset_current_stack(hid_t err_stack_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Epush2(hid_t err_stack, const char *file, const char *func,
                          unsigned int line, hid_t cls_id, hid_t maj_id,
                          hid_t min_id, const char *msg);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Epop(hid_t err_stack, size_t count);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Eprint2(hid_t err_stack, FILE *stream);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Ewalk2(hid_t err_stack, H5E_direction_t direction,
                          H5E_walk2_t func, void *client_data);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Eget_auto2(hid_t estack_id, H5E_auto2_t *func,
                              void **client_data);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Eset_auto2(hid_t estack_id, H5E_auto2_t func,
                              void *client_data);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Eclear2(hid_t err_stack);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Eauto_is_v2(hid_t err_stack, unsigned int *is_stack);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5Eget_msg(hid_t msg_id, H5E_type_t *type, char *msg,
                             size_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5Eget_num(hid_t error_stack_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Eclear1(void);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Eget_auto1(H5E_auto1_t *func, void **client_data);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Epush1(const char *file, const char *func, unsigned int line,
                          H5E_major_t maj, H5E_minor_t min, const char *str);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Eprint1(FILE *stream);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Eset_auto1(H5E_auto1_t func, void *client_data);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Ewalk1(H5E_direction_t direction, H5E_walk1_t func,
                          void *client_data);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual char *H5Eget_major(H5E_major_t maj);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual char *H5Eget_minor(H5E_minor_t min);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual htri_t H5Fis_hdf5(const char *filename);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Fcreate(const char *filename, unsigned int flags,
                          hid_t fcpl_id, hid_t fapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Fopen(const char *filename, unsigned int flags,
                        hid_t fapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Freopen(hid_t file_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fflush(hid_t object_id, H5F_scope_t scope);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fclose(hid_t file_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Fget_create_plist(hid_t file_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Fget_access_plist(hid_t file_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fget_intent(hid_t file_id, unsigned int *intent);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5Fget_obj_count(hid_t file_id, unsigned int types);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5Fget_obj_ids(hid_t file_id, unsigned int types,
                                 size_t max_objs, hid_t *obj_id_list);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fget_vfd_handle(hid_t file_id, hid_t fapl,
                                   void **file_handle);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fmount(hid_t loc, const char *name, hid_t child,
                          hid_t plist);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Funmount(hid_t loc, const char *name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hssize_t H5Fget_freespace(hid_t file_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fget_filesize(hid_t file_id, hsize_t *size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5Fget_file_image(hid_t file_id, void *buf_ptr,
                                    size_t buf_len);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fget_mdc_config(hid_t file_id,
                                   H5AC_cache_config_t *config_ptr);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101200
  virtual herr_t H5Fset_mdc_config(hid_t file_id,
                                   H5AC_cache_config_t *config_ptr);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fget_mdc_hit_rate(hid_t file_id, double *hit_rate_ptr);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fget_mdc_size(hid_t file_id, size_t *max_size_ptr,
                                 size_t *min_clean_size_ptr,
                                 size_t *cur_size_ptr,
                                 int *cur_num_entries_ptr);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Freset_mdc_hit_rate_stats(hid_t file_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5Fget_name(hid_t obj_id, char *name, size_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual herr_t H5Fget_info(hid_t obj_id, H5F_info_t *file_info);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fclear_elink_file_cache(hid_t file_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fset_mpi_atomicity(hid_t file_id, hbool_t flag);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fget_mpi_atomicity(hid_t file_id, hbool_t *flag);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5FDregister(const H5FD_class_t *cls);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5FDunregister(hid_t driver_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual H5FD_t *H5FDopen(const char *name, unsigned int flags, hid_t fapl_id,
                           haddr_t maxaddr);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5FDclose(H5FD_t *file);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual int H5FDcmp(const H5FD_t *f1, const H5FD_t *f2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual int H5FDquery(const H5FD_t *f, unsigned long *flags);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual haddr_t H5FDalloc(H5FD_t *file, H5FD_mem_t type, hid_t dxpl_id,
                            hsize_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5FDfree(H5FD_t *file, H5FD_mem_t type, hid_t dxpl_id,
                          haddr_t addr, hsize_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual haddr_t H5FDget_eoa(H5FD_t *file, H5FD_mem_t type);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5FDset_eoa(H5FD_t *file, H5FD_mem_t type, haddr_t eoa);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual haddr_t H5FDget_eof(H5FD_t *file);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5FDget_vfd_handle(H5FD_t *file, hid_t fapl,
                                    void **file_handle);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5FDread(H5FD_t *file, H5FD_mem_t type, hid_t dxpl_id,
                          haddr_t addr, size_t size, void *buf);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5FDwrite(H5FD_t *file, H5FD_mem_t type, hid_t dxpl_id,
                           haddr_t addr, size_t size, const void *buf);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual herr_t H5FDflush(H5FD_t *file, hid_t dxpl_id, unsigned int closing);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5FDtruncate(H5FD_t *file, hid_t dxpl_id, hbool_t closing);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5FDdriver_query(hid_t driver_id, unsigned long *flags);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Gcreate2(hid_t loc_id, const char *name, hid_t lcpl_id,
                           hid_t gcpl_id, hid_t gapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Gcreate_anon(hid_t loc_id, hid_t gcpl_id, hid_t gapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Gopen2(hid_t loc_id, const char *name, hid_t gapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Gget_create_plist(hid_t group_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Gget_info(hid_t loc_id, H5G_info_t *ginfo);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Gget_info_by_name(hid_t loc_id, const char *name,
                                     H5G_info_t *ginfo, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Gget_info_by_idx(hid_t loc_id, const char *group_name,
                                    H5_index_t idx_type, H5_iter_order_t order,
                                    hsize_t n, H5G_info_t *ginfo,
                                    hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Gflush(hid_t group_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Grefresh(hid_t group_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Gclose(hid_t group_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Gcreate1(hid_t loc_id, const char *name, size_t size_hint);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Gopen1(hid_t loc_id, const char *name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Glink(hid_t cur_loc_id, H5L_type_t type,
                         const char *cur_name, const char *new_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Glink2(hid_t cur_loc_id, const char *cur_name,
                          H5L_type_t type, hid_t new_loc_id,
                          const char *new_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Gmove(hid_t src_loc_id, const char *src_name,
                         const char *dst_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Gmove2(hid_t src_loc_id, const char *src_name,
                          hid_t dst_loc_id, const char *dst_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Gunlink(hid_t loc_id, const char *name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Gget_linkval(hid_t loc_id, const char *name, size_t size,
                                char *buf);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Gset_comment(hid_t loc_id, const char *name,
                                const char *comment);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual int H5Gget_comment(hid_t loc_id, const char *name, size_t bufsize,
                             char *buf);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Giterate(hid_t loc_id, const char *name, int *idx,
                            H5G_iterate_t op, void *op_data);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Gget_num_objs(hid_t loc_id, hsize_t *num_objs);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Gget_objinfo(hid_t loc_id, const char *name,
                                hbool_t follow_link, H5G_stat_t *statbuf);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5Gget_objname_by_idx(hid_t loc_id, hsize_t idx, char *name,
                                        size_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual H5G_obj_t H5Gget_objtype_by_idx(hid_t loc_id, hsize_t idx);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Zregister(const void *cls);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Zunregister(H5Z_filter_t id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Zfilter_avail(H5Z_filter_t id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Zget_filter_info(H5Z_filter_t filter,
                                    unsigned int *filter_config_flags);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pclose(hid_t plist_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pclose_class(hid_t plist_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Pcopy(hid_t plist_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pcopy_prop(hid_t dst_id, hid_t src_id, const char *name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Pcreate(hid_t cls_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Pcreate_class(hid_t parent, const char *name,
                                H5P_cls_create_func_t create, void *create_data,
                                H5P_cls_copy_func_t copy, void *copy_data,
                                H5P_cls_close_func_t close, void *close_data);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Pequal(hid_t id1, hid_t id2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Pexist(hid_t plist_id, const char *name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget(hid_t plist_id, const char *name, void *value);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Pget_class(hid_t plist_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual char *H5Pget_class_name(hid_t pclass_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Pget_class_parent(hid_t pclass_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_nprops(hid_t id, size_t *nprops);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_size(hid_t id, const char *name, size_t *size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pinsert2(hid_t plist_id, const char *name, size_t size,
                            void *value, H5P_prp_set_func_t set,
                            H5P_prp_get_func_t get,
                            H5P_prp_delete_func_t prp_del,
                            H5P_prp_copy_func_t copy,
                            H5P_prp_compare_func_t compare,
                            H5P_prp_close_func_t close);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Pisa_class(hid_t plist_id, hid_t pclass_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual int H5Piterate(hid_t id, int *idx, H5P_iterate_t iter_func,
                         void *iter_data);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pregister2(hid_t cls_id, const char *name, size_t size,
                              void *def_value, H5P_prp_create_func_t create,
                              H5P_prp_set_func_t set, H5P_prp_get_func_t get,
                              H5P_prp_delete_func_t prp_del,
                              H5P_prp_copy_func_t copy,
                              H5P_prp_compare_func_t compare,
                              H5P_prp_close_func_t close);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Premove(hid_t plist_id, const char *name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual herr_t H5Pset(hid_t plist_id, const char *name, void *value);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Punregister(hid_t pclass_id, const char *name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Pall_filters_avail(hid_t plist_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_attr_creation_order(hid_t plist_id,
                                            unsigned int *crt_order_flags);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_attr_phase_change(hid_t plist_id,
                                          unsigned int *max_compact,
                                          unsigned int *min_dense);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual H5Z_filter_t H5Pget_filter2(hid_t plist_id, unsigned int idx,
                                      unsigned int *flags, size_t *cd_nelmts,
                                      unsigned int cd_values[], size_t namelen,
                                      char name[], unsigned int *filter_config);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_filter_by_id2(hid_t plist_id, H5Z_filter_t filter_id,
                                      unsigned int *flags, size_t *cd_nelmts,
                                      unsigned int cd_values[], size_t namelen,
                                      char name[], unsigned int *filter_config);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual int H5Pget_nfilters(hid_t plist_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_obj_track_times(hid_t plist_id, hbool_t *track_times);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pmodify_filter(hid_t plist_id, H5Z_filter_t filter,
                                  unsigned int flags, size_t cd_nelmts,
                                  const unsigned int cd_values[]);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Premove_filter(hid_t plist_id, H5Z_filter_t filter);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_attr_creation_order(hid_t plist_id,
                                            unsigned int crt_order_flags);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_attr_phase_change(hid_t plist_id,
                                          unsigned int max_compact,
                                          unsigned int min_dense);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_deflate(hid_t plist_id, unsigned int level);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_filter(hid_t plist_id, H5Z_filter_t filter,
                               unsigned int flags, size_t cd_nelmts,
                               const unsigned int c_values[]);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_fletcher32(hid_t plist_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_obj_track_times(hid_t plist_id, hbool_t track_times);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_istore_k(hid_t plist_id, unsigned int *ik);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_shared_mesg_index(hid_t plist_id,
                                          unsigned int index_num,
                                          unsigned int *mesg_type_flags,
                                          unsigned int *min_mesg_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_shared_mesg_nindexes(hid_t plist_id,
                                             unsigned int *nindexes);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_shared_mesg_phase_change(hid_t plist_id,
                                                 unsigned int *max_list,
                                                 unsigned int *min_btree);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_sizes(hid_t plist_id, size_t *sizeof_addr,
                              size_t *sizeof_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_sym_k(hid_t plist_id, unsigned int *ik,
                              unsigned int *lk);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_userblock(hid_t plist_id, hsize_t *size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_version(hid_t plist_id, unsigned int *boot,
                                unsigned int *freelist, unsigned int *stab,
                                unsigned int *shhdr);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_istore_k(hid_t plist_id, unsigned int ik);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_shared_mesg_index(hid_t plist_id,
                                          unsigned int index_num,
                                          unsigned int mesg_type_flags,
                                          unsigned int min_mesg_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_shared_mesg_nindexes(hid_t plist_id,
                                             unsigned int nindexes);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_shared_mesg_phase_change(hid_t plist_id,
                                                 unsigned int max_list,
                                                 unsigned int min_btree);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_sizes(hid_t plist_id, size_t sizeof_addr,
                              size_t sizeof_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_sym_k(hid_t plist_id, unsigned int ik, unsigned int lk);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_userblock(hid_t plist_id, hsize_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_alignment(hid_t fapl_id, hsize_t *threshold,
                                  hsize_t *alignment);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_cache(hid_t plist_id, int *mdc_nelmts,
                              size_t *rdcc_nslots, size_t *rdcc_nbytes,
                              double *rdcc_w0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_core_write_tracking(hid_t fapl_id, hbool_t *is_enabled,
                                            size_t *page_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Pget_driver(hid_t plist_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual void *H5Pget_driver_info(hid_t plist_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_elink_file_cache_size(hid_t plist_id,
                                              unsigned int *efc_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_family_offset(hid_t fapl_id, hsize_t *offset);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_fclose_degree(hid_t fapl_id,
                                      H5F_close_degree_t *degree);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_file_image(hid_t fapl_id, void **buf_ptr_ptr,
                                   size_t *buf_len_ptr);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_file_image_callbacks(
      hid_t fapl_id, H5FD_file_image_callbacks_t *callbacks_ptr);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_gc_references(hid_t fapl_id, unsigned int *gc_ref);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_libver_bounds(hid_t plist_id, H5F_libver_t *low,
                                      H5F_libver_t *high);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_mdc_config(hid_t plist_id,
                                   H5AC_cache_config_t *config_ptr);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_meta_block_size(hid_t fapl_id, hsize_t *size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_multi_type(hid_t fapl_id, H5FD_mem_t *type);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_sieve_buf_size(hid_t fapl_id, size_t *size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_small_data_block_size(hid_t fapl_id, hsize_t *size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_alignment(hid_t fapl_id, hsize_t threshold,
                                  hsize_t alignment);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_cache(hid_t plist_id, int mdc_nelmts,
                              size_t rdcc_nslots, size_t rdcc_nbytes,
                              double rdcc_w0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_core_write_tracking(hid_t fapl_id, hbool_t is_enabled,
                                            size_t page_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_driver(hid_t plist_id, hid_t driver_id,
                               const void *driver_info);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_elink_file_cache_size(hid_t plist_id,
                                              unsigned int efc_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_family_offset(hid_t fapl_id, hsize_t offset);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_fclose_degree(hid_t fapl_id, H5F_close_degree_t degree);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_file_image(hid_t fapl_id, void *buf_ptr,
                                   size_t buf_len);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_file_image_callbacks(
      hid_t fapl_id, H5FD_file_image_callbacks_t *callbacks_ptr);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_gc_references(hid_t fapl_id, unsigned int gc_ref);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_libver_bounds(hid_t plist_id, H5F_libver_t low,
                                      H5F_libver_t high);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_mdc_config(hid_t plist_id,
                                   H5AC_cache_config_t *config_ptr);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_meta_block_size(hid_t fapl_id, hsize_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_multi_type(hid_t fapl_id, H5FD_mem_t type);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_sieve_buf_size(hid_t fapl_id, size_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_small_data_block_size(hid_t fapl_id, hsize_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pfill_value_defined(hid_t plist, H5D_fill_value_t *status);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_alloc_time(hid_t plist_id,
                                   H5D_alloc_time_t *alloc_time);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual int H5Pget_chunk(hid_t plist_id, int max_ndims, hsize_t dim[]);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_external(hid_t plist_id, unsigned int idx,
                                 size_t name_size, char *name, off_t *offset,
                                 hsize_t *size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual int H5Pget_external_count(hid_t plist_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_fill_time(hid_t plist_id, H5D_fill_time_t *fill_time);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_fill_value(hid_t plist_id, hid_t type_id, void *value);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual H5D_layout_t H5Pget_layout(hid_t plist_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_alloc_time(hid_t plist_id, H5D_alloc_time_t alloc_time);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_chunk(hid_t plist_id, int ndims, const hsize_t dim[]);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_external(hid_t plist_id, const char *name, off_t offset,
                                 hsize_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_fill_time(hid_t plist_id, H5D_fill_time_t fill_time);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_fill_value(hid_t plist_id, hid_t type_id,
                                   const void *value);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_shuffle(hid_t plist_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_layout(hid_t plist_id, H5D_layout_t layout);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_nbit(hid_t plist_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_scaleoffset(hid_t plist_id,
                                    H5Z_SO_scale_type_t scale_type,
                                    int scale_factor);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_szip(hid_t plist_id, unsigned int options_mask,
                             unsigned int pixels_per_block);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_chunk_cache(hid_t dapl_id, size_t *rdcc_nslots,
                                    size_t *rdcc_nbytes, double *rdcc_w0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5Pget_efile_prefix(hid_t dapl_id, char *prefix, size_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_chunk_cache(hid_t dapl_id, size_t rdcc_nslots,
                                    size_t rdcc_nbytes, double rdcc_w0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_efile_prefix(hid_t dapl_id, const char *prefix);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_btree_ratios(hid_t plist_id, double *left,
                                     double *middle, double *right);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual size_t H5Pget_buffer(hid_t plist_id, void **tconv, void **bkg);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5Pget_data_transform(hid_t plist_id, char *expression,
                                        size_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual H5Z_EDC_t H5Pget_edc_check(hid_t plist_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_hyper_vector_size(hid_t fapl_id, size_t *size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual int H5Pget_preserve(hid_t plist_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_type_conv_cb(hid_t dxpl_id, H5T_conv_except_func_t *op,
                                     void **operate_data);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_vlen_mem_manager(hid_t plist_id,
                                         H5MM_allocate_t *alloc_func,
                                         void **alloc_info,
                                         H5MM_free_t *free_func,
                                         void **free_info);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_btree_ratios(hid_t plist_id, double left, double middle,
                                     double right);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_buffer(hid_t plist_id, size_t size, void *tconv,
                               void *bkg);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_data_transform(hid_t plist_id, const char *expression);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_edc_check(hid_t plist_id, H5Z_EDC_t check);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_filter_callback(hid_t plist_id, H5Z_filter_func_t func,
                                        void *op_data);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_hyper_vector_size(hid_t plist_id, size_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_preserve(hid_t plist_id, hbool_t status);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_type_conv_cb(hid_t dxpl_id, H5T_conv_except_func_t op,
                                     void *operate_data);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_vlen_mem_manager(hid_t plist_id,
                                         H5MM_allocate_t alloc_func,
                                         void *alloc_info,
                                         H5MM_free_t free_func,
                                         void *free_info);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_mpio_actual_chunk_opt_mode(
      hid_t plist_id, H5D_mpio_actual_chunk_opt_mode_t *actual_chunk_opt_mode);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_mpio_actual_io_mode(
      hid_t plist_id, H5D_mpio_actual_io_mode_t *actual_io_mode);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_mpio_no_collective_cause(
      hid_t plist_id, uint32_t *local_no_collective_cause,
      uint32_t *global_no_collective_cause);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_create_intermediate_group(hid_t plist_id,
                                                  unsigned int *crt_intmd);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_create_intermediate_group(hid_t plist_id,
                                                  unsigned int crt_intmd);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_est_link_info(hid_t plist_id,
                                      unsigned int *est_num_entries,
                                      unsigned int *est_name_len);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_link_creation_order(hid_t plist_id,
                                            unsigned int *crt_order_flags);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_link_phase_change(hid_t plist_id,
                                          unsigned int *max_compact,
                                          unsigned int *min_dense);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_local_heap_size_hint(hid_t plist_id, size_t *size_hint);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_est_link_info(hid_t plist_id,
                                      unsigned int est_num_entries,
                                      unsigned int est_name_len);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_link_creation_order(hid_t plist_id,
                                            unsigned int crt_order_flags);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_link_phase_change(hid_t plist_id,
                                          unsigned int max_compact,
                                          unsigned int min_dense);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_local_heap_size_hint(hid_t plist_id, size_t size_hint);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_char_encoding(hid_t plist_id, H5T_cset_t *encoding);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_char_encoding(hid_t plist_id, H5T_cset_t encoding);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_elink_acc_flags(hid_t lapl_id, unsigned int *flags);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_elink_cb(hid_t lapl_id, H5L_elink_traverse_t *func,
                                 void **op_data);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Pget_elink_fapl(hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5Pget_elink_prefix(hid_t plist_id, char *prefix,
                                      size_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_nlinks(hid_t plist_id, size_t *nlinks);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_elink_acc_flags(hid_t lapl_id, unsigned int flags);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_elink_cb(hid_t lapl_id, H5L_elink_traverse_t func,
                                 void *op_data);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_elink_fapl(hid_t lapl_id, hid_t fapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_elink_prefix(hid_t plist_id, const char *prefix);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_nlinks(hid_t plist_id, size_t nlinks);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Padd_merge_committed_dtype_path(hid_t plist_id,
                                                   const char *path);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pfree_merge_committed_dtype_paths(hid_t plist_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_copy_object(hid_t plist_id, unsigned int *copy_options);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_mcdt_search_cb(hid_t plist_id,
                                       H5O_mcdt_search_cb_t *func,
                                       void **op_data);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_copy_object(hid_t plist_id, unsigned int copy_options);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_mcdt_search_cb(hid_t plist_id,
                                       H5O_mcdt_search_cb_t func,
                                       void *op_data);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pregister1(hid_t cls_id, const char *name, size_t size,
                              void *def_value, H5P_prp_create_func_t prp_create,
                              H5P_prp_set_func_t prp_set,
                              H5P_prp_get_func_t prp_get,
                              H5P_prp_delete_func_t prp_del,
                              H5P_prp_copy_func_t prp_copy,
                              H5P_prp_close_func_t prp_close);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pinsert1(hid_t plist_id, const char *name, size_t size,
                            void *value, H5P_prp_set_func_t prp_set,
                            H5P_prp_get_func_t prp_get,
                            H5P_prp_delete_func_t prp_delete,
                            H5P_prp_copy_func_t prp_copy,
                            H5P_prp_close_func_t prp_close);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual H5Z_filter_t H5Pget_filter1(hid_t plist_id, unsigned int filter,
                                      unsigned int *flags, size_t *cd_nelmts,
                                      unsigned int cd_values[], size_t namelen,
                                      char name[]);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_filter_by_id1(hid_t plist_id, H5Z_filter_t id,
                                      unsigned int *flags, size_t *cd_nelmts,
                                      unsigned int cd_values[], size_t namelen,
                                      char name[]);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5PLset_loading_state(unsigned int plugin_control_mask);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5PLget_loading_state(unsigned int *plugin_control_mask);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5PLappend(const char *search_path);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5PLprepend(const char *search_path);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5PLreplace(const char *search_path, unsigned int index);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5PLinsert(const char *search_path, unsigned int index);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5PLremove(unsigned int index);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5PLget(unsigned int index, char *path_buf, size_t buf_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5PLsize(unsigned int *num_paths);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Rcreate(void *ref, hid_t loc_id, const char *name,
                           H5R_type_t ref_type, hid_t space_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual hid_t H5Rdereference(hid_t dataset, H5R_type_t ref_type,
                               const void *ref);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Rget_region(hid_t dataset, H5R_type_t ref_type,
                              const void *ref);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual herr_t H5Rget_obj_type2(hid_t id, H5R_type_t ref_type,
                                  const void *_ref, H5O_type_t *obj_type);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5Rget_name(hid_t loc_id, H5R_type_t ref_type,
                              const void *ref, char *name, size_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual H5G_obj_t H5Rget_obj_type1(hid_t id, H5R_type_t ref_type,
                                     const void *ref);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Sclose(hid_t space_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Scopy(hid_t space_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Screate(H5S_class_t type);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Screate_simple(int rank, const hsize_t dims[],
                                 const hsize_t maxdims[]);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Sdecode(const void *buf);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual herr_t H5Sencode(hid_t obj_id, void *buf, size_t *nalloc);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Sextent_copy(hid_t dst_id, hid_t src_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Sextent_equal(hid_t space1_id, hid_t space2_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual int H5Sget_simple_extent_dims(hid_t space_id, hsize_t dims[],
                                        hsize_t maxdims[]);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual int H5Sget_simple_extent_ndims(hid_t space_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hssize_t H5Sget_simple_extent_npoints(hid_t space_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual H5S_class_t H5Sget_simple_extent_type(hid_t space_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Sis_simple(hid_t space_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Sset_extent_none(hid_t space_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Sset_extent_simple(hid_t space_id, int rank,
                                      const hsize_t dims[],
                                      const hsize_t max[]);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Sget_select_bounds(hid_t spaceid, hsize_t start[],
                                      hsize_t end[]);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hssize_t H5Sget_select_elem_npoints(hid_t spaceid);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Sget_select_elem_pointlist(hid_t spaceid, hsize_t startpoint,
                                              hsize_t numpoints, hsize_t buf[]);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Sget_select_hyper_blocklist(hid_t spaceid,
                                               hsize_t startblock,
                                               hsize_t numblocks,
                                               hsize_t buf[]);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hssize_t H5Sget_select_hyper_nblocks(hid_t spaceid);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hssize_t H5Sget_select_npoints(hid_t spaceid);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual H5S_sel_type H5Sget_select_type(hid_t spaceid);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Soffset_simple(hid_t space_id, const hssize_t *offset);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Sselect_all(hid_t spaceid);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Sselect_elements(hid_t space_id, H5S_seloper_t op,
                                    size_t num_elem, const hsize_t *coord);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Sselect_hyperslab(hid_t space_id, H5S_seloper_t op,
                                     const hsize_t start[],
                                     const hsize_t stride[],
                                     const hsize_t count[],
                                     const hsize_t block[]);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Sselect_none(hid_t spaceid);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Sselect_valid(hid_t spaceid);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5FD_core_init(void);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual void H5FD_core_term(void);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_fapl_core(hid_t fapl_id, size_t increment,
                                  hbool_t backing_store);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_fapl_core(hid_t fapl_id, size_t *increment,
                                  hbool_t *backing_store);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5FD_family_init(void);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual void H5FD_family_term(void);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_fapl_family(hid_t fapl_id, hsize_t memb_size,
                                    hid_t memb_fapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_fapl_family(hid_t fapl_id, hsize_t *memb_size,
                                    hid_t *memb_fapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101200
  virtual hid_t H5FD_hdfs_init(void);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual void H5FD_hdfs_term(void);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101200
  virtual herr_t H5Pget_fapl_hdfs(hid_t fapl_id, H5FD_hdfs_fapl_t *fa_out);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101200
  virtual herr_t H5Pset_fapl_hdfs(hid_t fapl_id, H5FD_hdfs_fapl_t *fa);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5FD_log_init(void);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual void H5FD_log_term(void);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_fapl_log(hid_t fapl_id, const char *logfile,
                                 unsigned long long flags, size_t buf_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5FD_mpio_init(void);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual void H5FD_mpio_term(void);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_fapl_mpio(hid_t fapl_id, int comm, int info);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_fapl_mpio(hid_t fapl_id, int *comm, int *info);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_dxpl_mpio(hid_t dxpl_id, H5FD_mpio_xfer_t xfer_mode);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_dxpl_mpio(hid_t dxpl_id, H5FD_mpio_xfer_t *xfer_mode);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_dxpl_mpio_collective_opt(
      hid_t dxpl_id, H5FD_mpio_collective_opt_t opt_mode);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_dxpl_mpio_chunk_opt(hid_t dxpl_id,
                                            H5FD_mpio_chunk_opt_t opt_mode);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_dxpl_mpio_chunk_opt_num(
      hid_t dxpl_id, unsigned int num_chunk_per_proc);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_dxpl_mpio_chunk_opt_ratio(
      hid_t dxpl_id, unsigned int percent_num_proc_per_chunk);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5FD_multi_init(void);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual void H5FD_multi_term(void);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_fapl_multi(hid_t fapl_id, const H5FD_mem_t *memb_map,
                                   const hid_t *memb_fapl,
                                   const char *const *memb_name,
                                   const haddr_t *memb_addr, hbool_t relax);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_fapl_multi(hid_t fapl_id, H5FD_mem_t *memb_map,
                                   hid_t *memb_fapl, char **memb_name,
                                   haddr_t *memb_addr, hbool_t *relax);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_fapl_split(hid_t fapl, const char *meta_ext,
                                   hid_t meta_plist_id, const char *raw_ext,
                                   hid_t raw_plist_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5FD_sec2_init(void);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual void H5FD_sec2_term(void);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_fapl_sec2(hid_t fapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5FD_stdio_init(void);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  virtual void H5FD_stdio_term(void);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_fapl_stdio(hid_t fapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5get_free_list_sizes(size_t *reg_size, size_t *arr_size,
                                       size_t *blk_size, size_t *fac_size);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5get_alloc_stats(H5_alloc_stats_t *stats);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Iiterate(H5I_type_t type, H5I_iterate_func_t op,
                            void *op_data);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Tflush(hid_t type_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Trefresh(hid_t type_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Treclaim(hid_t type_id, hid_t space_id, hid_t plist_id,
                            void *buf);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Lget_info2(hid_t loc_id, const char *name,
                              H5L_info2_t *linfo, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Lget_info_by_idx2(hid_t loc_id, const char *group_name,
                                     H5_index_t idx_type, H5_iter_order_t order,
                                     hsize_t n, H5L_info2_t *linfo,
                                     hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Literate2(hid_t grp_id, H5_index_t idx_type,
                             H5_iter_order_t order, hsize_t *idx,
                             H5L_iterate2_t op, void *op_data);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Literate_by_name2(hid_t loc_id, const char *group_name,
                                     H5_index_t idx_type, H5_iter_order_t order,
                                     hsize_t *idx, H5L_iterate2_t op,
                                     void *op_data, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Lvisit2(hid_t grp_id, H5_index_t idx_type,
                           H5_iter_order_t order, H5L_iterate2_t op,
                           void *op_data);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Lvisit_by_name2(hid_t loc_id, const char *group_name,
                                   H5_index_t idx_type, H5_iter_order_t order,
                                   H5L_iterate2_t op, void *op_data,
                                   hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Lget_info1(hid_t loc_id, const char *name,
                              H5L_info1_t *linfo, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Lget_info_by_idx1(hid_t loc_id, const char *group_name,
                                     H5_index_t idx_type, H5_iter_order_t order,
                                     hsize_t n, H5L_info1_t *linfo,
                                     hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Literate1(hid_t grp_id, H5_index_t idx_type,
                             H5_iter_order_t order, hsize_t *idx,
                             H5L_iterate1_t op, void *op_data);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Literate_by_name1(hid_t loc_id, const char *group_name,
                                     H5_index_t idx_type, H5_iter_order_t order,
                                     hsize_t *idx, H5L_iterate1_t op,
                                     void *op_data, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Lvisit1(hid_t grp_id, H5_index_t idx_type,
                           H5_iter_order_t order, H5L_iterate1_t op,
                           void *op_data);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Lvisit_by_name1(hid_t loc_id, const char *group_name,
                                   H5_index_t idx_type, H5_iter_order_t order,
                                   H5L_iterate1_t op, void *op_data,
                                   hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Oopen_by_token(hid_t loc_id, H5O_token_t token);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Oget_info3(hid_t loc_id, H5O_info2_t *oinfo,
                              unsigned int fields);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Oget_info_by_name3(hid_t loc_id, const char *name,
                                      H5O_info2_t *oinfo, unsigned int fields,
                                      hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Oget_info_by_idx3(hid_t loc_id, const char *group_name,
                                     H5_index_t idx_type, H5_iter_order_t order,
                                     hsize_t n, H5O_info2_t *oinfo,
                                     unsigned int fields, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Oget_native_info(hid_t loc_id, H5O_native_info_t *oinfo,
                                    unsigned int fields);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Oget_native_info_by_name(hid_t loc_id, const char *name,
                                            H5O_native_info_t *oinfo,
                                            unsigned int fields, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Oget_native_info_by_idx(hid_t loc_id, const char *group_name,
                                           H5_index_t idx_type,
                                           H5_iter_order_t order, hsize_t n,
                                           H5O_native_info_t *oinfo,
                                           unsigned int fields, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Ovisit3(hid_t obj_id, H5_index_t idx_type,
                           H5_iter_order_t order, H5O_iterate2_t op,
                           void *op_data, unsigned int fields);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Ovisit_by_name3(hid_t loc_id, const char *obj_name,
                                   H5_index_t idx_type, H5_iter_order_t order,
                                   H5O_iterate2_t op, void *op_data,
                                   unsigned int fields, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Oflush(hid_t obj_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Orefresh(hid_t oid);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Odisable_mdc_flushes(hid_t object_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Oenable_mdc_flushes(hid_t object_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Oare_mdc_flushes_disabled(hid_t object_id,
                                             hbool_t *are_disabled);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Otoken_cmp(hid_t loc_id, const H5O_token_t *token1,
                              const H5O_token_t *token2, int *cmp_value);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Otoken_to_str(hid_t loc_id, const H5O_token_t *token,
                                 char **token_str);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Otoken_from_str(hid_t loc_id, const char *token_str,
                                   H5O_token_t *token);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Oget_info1(hid_t loc_id, H5O_info1_t *oinfo);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Oget_info_by_name1(hid_t loc_id, const char *name,
                                      H5O_info1_t *oinfo, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Oget_info_by_idx1(hid_t loc_id, const char *group_name,
                                     H5_index_t idx_type, H5_iter_order_t order,
                                     hsize_t n, H5O_info1_t *oinfo,
                                     hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Oget_info2(hid_t loc_id, H5O_info1_t *oinfo,
                              unsigned int fields);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Oget_info_by_name2(hid_t loc_id, const char *name,
                                      H5O_info1_t *oinfo, unsigned int fields,
                                      hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Oget_info_by_idx2(hid_t loc_id, const char *group_name,
                                     H5_index_t idx_type, H5_iter_order_t order,
                                     hsize_t n, H5O_info1_t *oinfo,
                                     unsigned int fields, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Ovisit1(hid_t obj_id, H5_index_t idx_type,
                           H5_iter_order_t order, H5O_iterate1_t op,
                           void *op_data);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Ovisit_by_name1(hid_t loc_id, const char *obj_name,
                                   H5_index_t idx_type, H5_iter_order_t order,
                                   H5O_iterate1_t op, void *op_data,
                                   hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Ovisit2(hid_t obj_id, H5_index_t idx_type,
                           H5_iter_order_t order, H5O_iterate1_t op,
                           void *op_data, unsigned int fields);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Ovisit_by_name2(hid_t loc_id, const char *obj_name,
                                   H5_index_t idx_type, H5_iter_order_t order,
                                   H5O_iterate1_t op, void *op_data,
                                   unsigned int fields, hid_t lapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Dget_num_chunks(hid_t dset_id, hid_t fspace_id,
                                   hsize_t *nchunks);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Dget_chunk_info_by_coord(hid_t dset_id,
                                            const hsize_t *offset,
                                            unsigned int *filter_mask,
                                            haddr_t *addr, hsize_t *size);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Dget_chunk_info(hid_t dset_id, hid_t fspace_id,
                                   hsize_t chk_idx, hsize_t *offset,
                                   unsigned int *filter_mask, haddr_t *addr,
                                   hsize_t *size);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Dwrite_chunk(hid_t dset_id, hid_t dxpl_id, uint32_t filters,
                                const hsize_t *offset, size_t data_size,
                                const void *buf);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Dread_chunk(hid_t dset_id, hid_t dxpl_id,
                               const hsize_t *offset, uint32_t *filters,
                               void *buf);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Dflush(hid_t dset_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Drefresh(hid_t dset_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Dformat_convert(hid_t dset_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Dget_chunk_index_type(hid_t did,
                                         H5D_chunk_index_t *idx_type);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Eappend_stack(hid_t dst_stack_id, hid_t src_stack_id,
                                 hbool_t close_source_stack);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Fis_accessible(const char *container_name, hid_t fapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fdelete(const char *filename, hid_t fapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fget_fileno(hid_t file_id, unsigned long *fileno);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fget_eoa(hid_t file_id, haddr_t *eoa);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fincrement_filesize(hid_t file_id, hsize_t increment);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fget_info2(hid_t obj_id, H5F_info2_t *file_info);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fget_metadata_read_retry_info(hid_t file_id,
                                                 H5F_retry_info_t *info);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fstart_swmr_write(hid_t file_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5Fget_free_sections(hid_t file_id, H5F_mem_t type,
                                       size_t nsects,
                                       H5F_sect_info_t *sect_info);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fset_libver_bounds(hid_t file_id, H5F_libver_t low,
                                      H5F_libver_t high);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fstart_mdc_logging(hid_t file_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fstop_mdc_logging(hid_t file_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fget_mdc_logging_status(hid_t file_id, hbool_t *is_enabled,
                                           hbool_t *is_currently_logging);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fformat_convert(hid_t fid);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Freset_page_buffering_stats(hid_t file_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fget_page_buffering_stats(hid_t file_id,
                                             unsigned int accesses[2],
                                             unsigned int hits[2],
                                             unsigned int misses[2],
                                             unsigned int evictions[2],
                                             unsigned int bypasses[2]);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fget_mdc_image_info(hid_t file_id, haddr_t *image_addr,
                                       hsize_t *image_size);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fget_dset_no_attrs_hint(hid_t file_id, hbool_t *minimize);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fset_dset_no_attrs_hint(hid_t file_id, hbool_t minimize);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fget_info1(hid_t obj_id, H5F_info1_t *file_info);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Fset_latest_format(hid_t file_id, hbool_t latest_format);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Fis_hdf5(const char *file_name);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual haddr_t H5FDget_eof(H5FD_t *file, H5FD_mem_t type);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5FDflush(H5FD_t *file, hid_t dxpl_id, hbool_t closing);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5FDlock(H5FD_t *file, hbool_t rw);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5FDunlock(H5FD_t *file);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Scombine_hyperslab(hid_t space_id, H5S_seloper_t op,
                                     const hsize_t start[],
                                     const hsize_t stride[],
                                     const hsize_t count[],
                                     const hsize_t block[]);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Scombine_select(hid_t space1_id, H5S_seloper_t op,
                                  hid_t space2_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Sencode2(hid_t obj_id, void *buf, size_t *nalloc,
                            hid_t fapl);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Sget_regular_hyperslab(hid_t spaceid, hsize_t start[],
                                          hsize_t stride[], hsize_t count[],
                                          hsize_t block[]);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Sis_regular_hyperslab(hid_t spaceid);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Smodify_select(hid_t space1_id, H5S_seloper_t op,
                                  hid_t space2_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Ssel_iter_close(hid_t sel_iter_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Ssel_iter_create(hid_t spaceid, size_t elmt_size,
                                   unsigned int flags);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5Ssel_iter_get_seq_list(hid_t sel_iter_id, size_t maxseq,
                                          size_t maxbytes, size_t *nseq,
                                          size_t *nbytes, hsize_t *off,
                                          size_t *len);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Ssel_iter_reset(hid_t sel_iter_id, hid_t space_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Sselect_adjust(hid_t spaceid, const hssize_t *offset);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Sselect_copy(hid_t dst_id, hid_t src_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Sselect_intersect_block(hid_t space_id, const hsize_t *start,
                                           const hsize_t *end);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Sselect_project_intersection(hid_t src_space_id,
                                               hid_t dst_space_id,
                                               hid_t src_intersect_space_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Sselect_shape_same(hid_t space1_id, hid_t space2_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Sencode1(hid_t obj_id, void *buf, size_t *nalloc);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Pdecode(const void *buf);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pencode2(hid_t plist_id, void *buf, size_t *nalloc,
                            hid_t fapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset(hid_t plist_id, const char *name, const void *value);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_file_space_page_size(hid_t plist_id, hsize_t *fsp_size);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_file_space_strategy(hid_t plist_id,
                                            H5F_fspace_strategy_t *strategy,
                                            hbool_t *persist,
                                            hsize_t *threshold);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_file_space_page_size(hid_t plist_id, hsize_t fsp_size);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_file_space_strategy(hid_t plist_id,
                                            H5F_fspace_strategy_t strategy,
                                            hbool_t persist, hsize_t threshold);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual const void *H5Pget_driver_info(hid_t plist_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_evict_on_close(hid_t fapl_id, hbool_t *evict_on_close);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_file_locking(hid_t fapl_id, hbool_t *use_file_locking,
                                     hbool_t *ignore_when_disabled);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_mdc_image_config(hid_t plist_id,
                                         H5AC_cache_image_config_t *config_ptr);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_mdc_log_options(hid_t plist_id, hbool_t *is_enabled,
                                        char *location, size_t *location_size,
                                        hbool_t *start_on_access);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_metadata_read_attempts(hid_t plist_id,
                                               unsigned int *attempts);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_object_flush_cb(hid_t plist_id, H5F_flush_cb_t *func,
                                        void **udata);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_page_buffer_size(hid_t plist_id, size_t *buf_size,
                                         unsigned int *min_meta_perc,
                                         unsigned int *min_raw_perc);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_vol_id(hid_t plist_id, hid_t *vol_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_vol_info(hid_t plist_id, void **vol_info);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_evict_on_close(hid_t fapl_id, hbool_t evict_on_close);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_file_locking(hid_t fapl_id, hbool_t use_file_locking,
                                     hbool_t ignore_when_disabled);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_mdc_log_options(hid_t plist_id, hbool_t is_enabled,
                                        const char *location,
                                        hbool_t start_on_access);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_metadata_read_attempts(hid_t plist_id,
                                               unsigned int attempts);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_object_flush_cb(hid_t plist_id, H5F_flush_cb_t func,
                                        void *udata);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_vol(hid_t plist_id, hid_t new_vol_id,
                            const void *new_vol_info);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_all_coll_metadata_ops(hid_t plist_id,
                                              hbool_t is_collective);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_all_coll_metadata_ops(hid_t plist_id,
                                              hbool_t *is_collective);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_coll_metadata_write(hid_t plist_id,
                                            hbool_t is_collective);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_coll_metadata_write(hid_t plist_id,
                                            hbool_t *is_collective);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_mpi_params(hid_t fapl_id, int *comm, int *info);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_mpi_params(hid_t fapl_id, int comm, int info);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_mdc_image_config(hid_t plist_id,
                                         H5AC_cache_image_config_t *config_ptr);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_page_buffer_size(hid_t plist_id, size_t buf_size,
                                         unsigned int min_meta_per,
                                         unsigned int min_raw_per);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_chunk_opts(hid_t plist_id, unsigned int *opts);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_dset_no_attrs_hint(hid_t dcpl_id, hbool_t *minimize);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_virtual_count(hid_t dcpl_id, size_t *count);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5Pget_virtual_dsetname(hid_t dcpl_id, size_t index,
                                          char *name, size_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5Pget_virtual_filename(hid_t dcpl_id, size_t index,
                                          char *name, size_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Pget_virtual_srcspace(hid_t dcpl_id, size_t index);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Pget_virtual_vspace(hid_t dcpl_id, size_t index);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_chunk_opts(hid_t plist_id, unsigned int opts);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_dset_no_attrs_hint(hid_t dcpl_id, hbool_t minimize);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_virtual(hid_t dcpl_id, hid_t vspace_id,
                                const char *src_file_name,
                                const char *src_dset_name, hid_t src_space_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_append_flush(hid_t dapl_id, unsigned int dims,
                                     hsize_t boundary[], H5D_append_cb_t *func,
                                     void **udata);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5Pget_virtual_prefix(hid_t dapl_id, char *prefix,
                                        size_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_virtual_printf_gap(hid_t dapl_id, hsize_t *gap_size);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_virtual_view(hid_t dapl_id, H5D_vds_view_t *view);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_append_flush(hid_t dapl_id, unsigned int ndims,
                                     const hsize_t boundary[],
                                     H5D_append_cb_t func, void *udata);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_virtual_prefix(hid_t dapl_id, const char *prefix);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_virtual_printf_gap(hid_t dapl_id, hsize_t gap_size);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_virtual_view(hid_t dapl_id, H5D_vds_view_t view);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pencode1(hid_t plist_id, void *buf, size_t *nalloc);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_file_space(hid_t plist_id,
                                   H5F_file_space_type_t strategy,
                                   hsize_t threshold);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_file_space(hid_t plist_id,
                                   H5F_file_space_type_t *strategy,
                                   hsize_t *threshold);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Rcreate_object(hid_t loc_id, const char *name, hid_t oapl_id,
                                  H5R_ref_t *ref_ptr);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Rcreate_region(hid_t loc_id, const char *name,
                                  hid_t space_id, hid_t oapl_id,
                                  H5R_ref_t *ref_ptr);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Rcreate_attr(hid_t loc_id, const char *name,
                                const char *attr_name, hid_t oapl_id,
                                H5R_ref_t *ref_ptr);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Rdestroy(H5R_ref_t *ref_ptr);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual H5R_type_t H5Rget_type(const H5R_ref_t *ref_ptr);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5Requal(const H5R_ref_t *ref1_ptr, const H5R_ref_t *ref2_ptr);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Rcopy(const H5R_ref_t *src_ref_ptr, H5R_ref_t *dst_ref_ptr);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Ropen_object(H5R_ref_t *ref_ptr, hid_t rapl_id,
                               hid_t oapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Ropen_region(H5R_ref_t *ref_ptr, hid_t rapl_id,
                               hid_t oapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Ropen_attr(H5R_ref_t *ref_ptr, hid_t rapl_id, hid_t aapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Rget_obj_type3(H5R_ref_t *ref_ptr, hid_t rapl_id,
                                  H5O_type_t *obj_type);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5Rget_file_name(const H5R_ref_t *ref_ptr, char *name,
                                   size_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5Rget_obj_name(H5R_ref_t *ref_ptr, hid_t rapl_id, char *name,
                                  size_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5Rget_attr_name(const H5R_ref_t *ref_ptr, char *name,
                                   size_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Rdereference1(hid_t obj_id, H5R_type_t ref_type,
                                const void *ref);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Rget_obj_type2(hid_t id, H5R_type_t ref_type,
                                  const void *ref, H5O_type_t *obj_type);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5Rdereference2(hid_t obj_id, hid_t oapl_id,
                                H5R_type_t ref_type, const void *ref);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5VLregister_connector_by_name(const char *connector_name,
                                               hid_t vipl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5VLregister_connector_by_value(
      H5VL_class_value_t connector_value, hid_t vipl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5VLis_connector_registered_by_name(const char *name);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual htri_t H5VLis_connector_registered_by_value(
      H5VL_class_value_t connector_value);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5VLget_connector_id(hid_t obj_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5VLget_connector_id_by_name(const char *name);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5VLget_connector_id_by_value(
      H5VL_class_value_t connector_value);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual ssize_t H5VLget_connector_name(hid_t id, char *name, size_t size);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLclose(hid_t connector_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLunregister_connector(hid_t connector_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLquery_optional(hid_t obj_id, H5VL_subclass_t subcls,
                                    int opt_type, hbool_t *supported);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLobject_is_native(hid_t obj_id, hbool_t *is_native);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5VLregister_connector(const H5VL_class_t *cls, hid_t vipl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual void *H5VLobject(hid_t obj_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5VLget_file_type(void *file_obj, hid_t connector_id,
                                  hid_t dtype_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5VLpeek_connector_id_by_name(const char *name);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5VLpeek_connector_id_by_value(H5VL_class_value_t value);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLcmp_connector_cls(int *cmp, hid_t connector_id1,
                                       hid_t connector_id2);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5VLwrap_register(void *obj, H5I_type_t type);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLretrieve_lib_state(void **state);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLrestore_lib_state(const void *state);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLreset_lib_state(void);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLfree_lib_state(void *state);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual void *H5VLget_object(void *obj, hid_t connector_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLget_wrap_ctx(void *obj, hid_t connector_id,
                                  void **wrap_ctx);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual void *H5VLwrap_object(void *obj, H5I_type_t obj_type,
                                hid_t connector_id, void *wrap_ctx);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual void *H5VLunwrap_object(void *obj, hid_t connector_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLfree_wrap_ctx(void *wrap_ctx, hid_t connector_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLinitialize(hid_t connector_id, hid_t vipl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLterminate(hid_t connector_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLget_cap_flags(hid_t connector_id, unsigned int *cap_flags);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLget_value(hid_t connector_id,
                               H5VL_class_value_t *conn_value);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLcopy_connector_info(hid_t connector_id,
                                         void **dst_vol_info,
                                         void *src_vol_info);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLcmp_connector_info(int *cmp, hid_t connector_id,
                                        const void *info1, const void *info2);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLfree_connector_info(hid_t connector_id, void *vol_info);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLconnector_info_to_str(const void *info, hid_t connector_id,
                                           char **str);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLconnector_str_to_info(const char *str, hid_t connector_id,
                                           void **info);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual void *H5VLattr_create(void *obj, const H5VL_loc_params_t *loc_params,
                                hid_t connector_id, const char *attr_name,
                                hid_t type_id, hid_t space_id, hid_t acpl_id,
                                hid_t aapl_id, hid_t dxpl_id, void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual void *H5VLattr_open(void *obj, const H5VL_loc_params_t *loc_params,
                              hid_t connector_id, const char *name,
                              hid_t aapl_id, hid_t dxpl_id, void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLattr_read(void *attr, hid_t connector_id, hid_t dtype_id,
                               void *buf, hid_t dxpl_id, void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLattr_write(void *attr, hid_t connector_id, hid_t dtype_id,
                                const void *buf, hid_t dxpl_id, void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLattr_get(void *obj, hid_t connector_id,
                              H5VL_attr_get_t get_type, hid_t dxpl_id,
                              void **req, va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLattr_specific(void *obj,
                                   const H5VL_loc_params_t *loc_params,
                                   hid_t connector_id,
                                   H5VL_attr_specific_t specific_type,
                                   hid_t dxpl_id, void **req,
                                   va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLattr_optional(void *obj, hid_t connector_id,
                                   H5VL_attr_optional_t opt_type, hid_t dxpl_id,
                                   void **req, va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLattr_close(void *attr, hid_t connector_id, hid_t dxpl_id,
                                void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual void *H5VLdataset_create(void *obj,
                                   const H5VL_loc_params_t *loc_params,
                                   hid_t connector_id, const char *name,
                                   hid_t lcpl_id, hid_t type_id, hid_t space_id,
                                   hid_t dcpl_id, hid_t dapl_id, hid_t dxpl_id,
                                   void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual void *H5VLdataset_open(void *obj, const H5VL_loc_params_t *loc_params,
                                 hid_t connector_id, const char *name,
                                 hid_t dapl_id, hid_t dxpl_id, void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLdataset_read(void *dset, hid_t connector_id,
                                  hid_t mem_type_id, hid_t mem_space_id,
                                  hid_t file_space_id, hid_t plist_id,
                                  void *buf, void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLdataset_write(void *dset, hid_t connector_id,
                                   hid_t mem_type_id, hid_t mem_space_id,
                                   hid_t file_space_id, hid_t plist_id,
                                   const void *buf, void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLdataset_get(void *dset, hid_t connector_id,
                                 H5VL_dataset_get_t get_type, hid_t dxpl_id,
                                 void **req, va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLdataset_specific(void *obj, hid_t connector_id,
                                      H5VL_dataset_specific_t specific_type,
                                      hid_t dxpl_id, void **req,
                                      va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLdataset_optional(void *obj, hid_t connector_id,
                                      H5VL_dataset_optional_t opt_type,
                                      hid_t dxpl_id, void **req,
                                      va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLdataset_close(void *dset, hid_t connector_id,
                                   hid_t dxpl_id, void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual void *H5VLdatatype_commit(void *obj,
                                    const H5VL_loc_params_t *loc_params,
                                    hid_t connector_id, const char *name,
                                    hid_t type_id, hid_t lcpl_id, hid_t tcpl_id,
                                    hid_t tapl_id, hid_t dxpl_id, void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual void *H5VLdatatype_open(void *obj,
                                  const H5VL_loc_params_t *loc_params,
                                  hid_t connector_id, const char *name,
                                  hid_t tapl_id, hid_t dxpl_id, void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLdatatype_get(void *dt, hid_t connector_id,
                                  H5VL_datatype_get_t get_type, hid_t dxpl_id,
                                  void **req, va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLdatatype_specific(void *obj, hid_t connector_id,
                                       H5VL_datatype_specific_t specific_type,
                                       hid_t dxpl_id, void **req,
                                       va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLdatatype_optional(void *obj, hid_t connector_id,
                                       H5VL_datatype_optional_t opt_type,
                                       hid_t dxpl_id, void **req,
                                       va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLdatatype_close(void *dt, hid_t connector_id, hid_t dxpl_id,
                                    void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual void *H5VLfile_create(const char *name, unsigned int flags,
                                hid_t fcpl_id, hid_t fapl_id, hid_t dxpl_id,
                                void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual void *H5VLfile_open(const char *name, unsigned int flags,
                              hid_t fapl_id, hid_t dxpl_id, void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLfile_get(void *file, hid_t connector_id,
                              H5VL_file_get_t get_type, hid_t dxpl_id,
                              void **req, va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLfile_specific(void *obj, hid_t connector_id,
                                   H5VL_file_specific_t specific_type,
                                   hid_t dxpl_id, void **req,
                                   va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLfile_optional(void *obj, hid_t connector_id,
                                   H5VL_file_optional_t opt_type, hid_t dxpl_id,
                                   void **req, va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLfile_close(void *file, hid_t connector_id, hid_t dxpl_id,
                                void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual void *H5VLgroup_create(void *obj, const H5VL_loc_params_t *loc_params,
                                 hid_t connector_id, const char *name,
                                 hid_t lcpl_id, hid_t gcpl_id, hid_t gapl_id,
                                 hid_t dxpl_id, void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual void *H5VLgroup_open(void *obj, const H5VL_loc_params_t *loc_params,
                               hid_t connector_id, const char *name,
                               hid_t gapl_id, hid_t dxpl_id, void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLgroup_get(void *obj, hid_t connector_id,
                               H5VL_group_get_t get_type, hid_t dxpl_id,
                               void **req, va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLgroup_specific(void *obj, hid_t connector_id,
                                    H5VL_group_specific_t specific_type,
                                    hid_t dxpl_id, void **req,
                                    va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLgroup_optional(void *obj, hid_t connector_id,
                                    H5VL_group_optional_t opt_type,
                                    hid_t dxpl_id, void **req,
                                    va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLgroup_close(void *grp, hid_t connector_id, hid_t dxpl_id,
                                 void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLlink_create(H5VL_link_create_type_t create_type, void *obj,
                                 const H5VL_loc_params_t *loc_params,
                                 hid_t connector_id, hid_t lcpl_id,
                                 hid_t lapl_id, hid_t dxpl_id, void **req,
                                 va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLlink_copy(void *src_obj,
                               const H5VL_loc_params_t *loc_params1,
                               void *dst_obj,
                               const H5VL_loc_params_t *loc_params2,
                               hid_t connector_id, hid_t lcpl_id, hid_t lapl_id,
                               hid_t dxpl_id, void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLlink_move(void *src_obj,
                               const H5VL_loc_params_t *loc_params1,
                               void *dst_obj,
                               const H5VL_loc_params_t *loc_params2,
                               hid_t connector_id, hid_t lcpl_id, hid_t lapl_id,
                               hid_t dxpl_id, void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLlink_get(void *obj, const H5VL_loc_params_t *loc_params,
                              hid_t connector_id, H5VL_link_get_t get_type,
                              hid_t dxpl_id, void **req, va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLlink_specific(void *obj,
                                   const H5VL_loc_params_t *loc_params,
                                   hid_t connector_id,
                                   H5VL_link_specific_t specific_type,
                                   hid_t dxpl_id, void **req,
                                   va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLlink_optional(void *obj, hid_t connector_id,
                                   H5VL_link_optional_t opt_type, hid_t dxpl_id,
                                   void **req, va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual void *H5VLobject_open(void *obj, const H5VL_loc_params_t *loc_params,
                                hid_t connector_id, H5I_type_t *opened_type,
                                hid_t dxpl_id, void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLobject_copy(void *src_obj,
                                 const H5VL_loc_params_t *loc_params1,
                                 const char *src_name, void *dst_obj,
                                 const H5VL_loc_params_t *loc_params2,
                                 const char *dst_name, hid_t connector_id,
                                 hid_t ocpypl_id, hid_t lcpl_id, hid_t dxpl_id,
                                 void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLobject_get(void *obj, const H5VL_loc_params_t *loc_params,
                                hid_t connector_id, H5VL_object_get_t get_type,
                                hid_t dxpl_id, void **req, va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLobject_specific(void *obj,
                                     const H5VL_loc_params_t *loc_params,
                                     hid_t connector_id,
                                     H5VL_object_specific_t specific_type,
                                     hid_t dxpl_id, void **req,
                                     va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLobject_optional(void *obj, hid_t connector_id,
                                     H5VL_object_optional_t opt_type,
                                     hid_t dxpl_id, void **req,
                                     va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLintrospect_get_conn_cls(void *obj, hid_t connector_id,
                                             H5VL_get_conn_lvl_t lvl,
                                             const H5VL_class_t **conn_cls);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLintrospect_opt_query(void *obj, hid_t connector_id,
                                          H5VL_subclass_t subcls, int opt_type,
                                          hbool_t *supported);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLrequest_wait(void *req, hid_t connector_id,
                                  uint64_t timeout, H5ES_status_t *status);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLrequest_notify(void *req, hid_t connector_id,
                                    H5VL_request_notify_t cb, void *ctx);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLrequest_cancel(void *req, hid_t connector_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLrequest_specific(void *req, hid_t connector_id,
                                      H5VL_request_specific_t specific_type,
                                      va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLrequest_optional(void *req, hid_t connector_id,
                                      H5VL_request_optional_t opt_type,
                                      va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLrequest_free(void *req, hid_t connector_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLblob_put(void *obj, hid_t connector_id, const void *buf,
                              size_t size, void *blob_id, void *ctx);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLblob_get(void *obj, hid_t connector_id,
                              const void *blob_id, void *buf, size_t size,
                              void *ctx);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLblob_specific(void *obj, hid_t connector_id, void *blob_id,
                                   H5VL_blob_specific_t specific_type,
                                   va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLblob_optional(void *obj, hid_t connector_id, void *blob_id,
                                   H5VL_blob_optional_t opt_type,
                                   va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLtoken_cmp(void *obj, hid_t connector_id,
                               const H5O_token_t *token1,
                               const H5O_token_t *token2, int *cmp_value);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLtoken_to_str(void *obj, H5I_type_t obj_type,
                                  hid_t connector_id, const H5O_token_t *token,
                                  char **token_str);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLtoken_from_str(void *obj, H5I_type_t obj_type,
                                    hid_t connector_id, const char *token_str,
                                    H5O_token_t *token);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  virtual herr_t H5VLoptional(void *obj, hid_t connector_id, int op_type,
                              hid_t dxpl_id, void **req, va_list arguments);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLnative_addr_to_token(hid_t loc_id, haddr_t addr,
                                          H5O_token_t *token);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5VLnative_token_to_addr(hid_t loc_id, H5O_token_t token,
                                          haddr_t *addr);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5VL_native_register(void);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5FD_splitter_init(void);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pset_fapl_splitter(hid_t fapl_id,
                                      H5FD_splitter_vfd_config_t *config_ptr);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual herr_t H5Pget_fapl_splitter(hid_t fapl_id,
                                      H5FD_splitter_vfd_config_t *config_ptr);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  virtual hid_t H5VL_pass_through_register(void);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5atclose(H5_atclose_func_t func, void *ctx);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5is_library_terminating(hbool_t *is_terminating);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual hid_t H5Oopen_async(const char *app_file, const char *app_func,
                              unsigned int app_line, hid_t loc_id,
                              const char *name, hid_t lapl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual hid_t H5Oopen_by_idx_async(const char *app_file, const char *app_func,
                                     unsigned int app_line, hid_t loc_id,
                                     const char *group_name,
                                     H5_index_t idx_type, H5_iter_order_t order,
                                     hsize_t n, hid_t lapl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Oget_info_by_name_async(const char *app_file,
                                           const char *app_func,
                                           unsigned int app_line, hid_t loc_id,
                                           const char *name, H5O_info2_t *oinfo,
                                           unsigned int fields, hid_t lapl_id,
                                           hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Ocopy_async(const char *app_file, const char *app_func,
                               unsigned int app_line, hid_t src_loc_id,
                               const char *src_name, hid_t dst_loc_id,
                               const char *dst_name, hid_t ocpypl_id,
                               hid_t lcpl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Oclose_async(const char *app_file, const char *app_func,
                                unsigned int app_line, hid_t object_id,
                                hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Oflush_async(const char *app_file, const char *app_func,
                                unsigned int app_line, hid_t obj_id,
                                hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Orefresh_async(const char *app_file, const char *app_func,
                                  unsigned int app_line, hid_t oid,
                                  hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Tclose_async(const char *app_file, const char *app_func,
                                unsigned int app_line, hid_t type_id,
                                hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Tcommit_async(const char *app_file, const char *app_func,
                                 unsigned int app_line, hid_t loc_id,
                                 const char *name, hid_t type_id, hid_t lcpl_id,
                                 hid_t tcpl_id, hid_t tapl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual hid_t H5Topen_async(const char *app_file, const char *app_func,
                              unsigned int app_line, hid_t loc_id,
                              const char *name, hid_t tapl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Aclose_async(const char *app_file, const char *app_func,
                                unsigned int app_line, hid_t attr_id,
                                hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual hid_t H5Acreate_async(const char *app_file, const char *app_func,
                                unsigned int app_line, hid_t loc_id,
                                const char *attr_name, hid_t type_id,
                                hid_t space_id, hid_t acpl_id, hid_t aapl_id,
                                hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual hid_t H5Acreate_by_name_async(
      const char *app_file, const char *app_func, unsigned int app_line,
      hid_t loc_id, const char *obj_name, const char *attr_name, hid_t type_id,
      hid_t space_id, hid_t acpl_id, hid_t aapl_id, hid_t lapl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Aexists_async(const char *app_file, const char *app_func,
                                 unsigned int app_line, hid_t obj_id,
                                 const char *attr_name, hbool_t *exists,
                                 hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Aexists_by_name_async(const char *app_file,
                                         const char *app_func,
                                         unsigned int app_line, hid_t loc_id,
                                         const char *obj_name,
                                         const char *attr_name, hbool_t *exists,
                                         hid_t lapl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual hid_t H5Aopen_async(const char *app_file, const char *app_func,
                              unsigned int app_line, hid_t obj_id,
                              const char *attr_name, hid_t aapl_id,
                              hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual hid_t H5Aopen_by_idx_async(const char *app_file, const char *app_func,
                                     unsigned int app_line, hid_t loc_id,
                                     const char *obj_name, H5_index_t idx_type,
                                     H5_iter_order_t order, hsize_t n,
                                     hid_t aapl_id, hid_t lapl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual hid_t H5Aopen_by_name_async(const char *app_file,
                                      const char *app_func,
                                      unsigned int app_line, hid_t loc_id,
                                      const char *obj_name,
                                      const char *attr_name, hid_t aapl_id,
                                      hid_t lapl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Aread_async(const char *app_file, const char *app_func,
                               unsigned int app_line, hid_t attr_id,
                               hid_t dtype_id, void *buf, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Arename_async(const char *app_file, const char *app_func,
                                 unsigned int app_line, hid_t loc_id,
                                 const char *old_name, const char *new_name,
                                 hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Arename_by_name_async(
      const char *app_file, const char *app_func, unsigned int app_line,
      hid_t loc_id, const char *obj_name, const char *old_attr_name,
      const char *new_attr_name, hid_t lapl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Awrite_async(const char *app_file, const char *app_func,
                                unsigned int app_line, hid_t attr_id,
                                hid_t type_id, const void *buf, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual hid_t H5Dcreate_async(const char *app_file, const char *app_func,
                                unsigned int app_line, hid_t loc_id,
                                const char *name, hid_t type_id, hid_t space_id,
                                hid_t lcpl_id, hid_t dcpl_id, hid_t dapl_id,
                                hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual hid_t H5Dopen_async(const char *app_file, const char *app_func,
                              unsigned int app_line, hid_t loc_id,
                              const char *name, hid_t dapl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual hid_t H5Dget_space_async(const char *app_file, const char *app_func,
                                   unsigned int app_line, hid_t dset_id,
                                   hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Dchunk_iter(hid_t dset_id, hid_t dxpl_id,
                               H5D_chunk_iter_op_t cb, void *op_data);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Dread_multi(size_t count, hid_t dset_id[],
                               hid_t mem_type_id[], hid_t mem_space_id[],
                               hid_t file_space_id[], hid_t dxpl_id,
                               void *buf[]);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Dread_async(const char *app_file, const char *app_func,
                               unsigned int app_line, hid_t dset_id,
                               hid_t mem_type_id, hid_t mem_space_id,
                               hid_t file_space_id, hid_t dxpl_id, void *buf,
                               hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Dread_multi_async(const char *app_file, const char *app_func,
                                     unsigned int app_line, size_t count,
                                     hid_t dset_id[], hid_t mem_type_id[],
                                     hid_t mem_space_id[],
                                     hid_t file_space_id[], hid_t dxpl_id,
                                     void *buf[], hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Dwrite_multi(size_t count, hid_t dset_id[],
                                hid_t mem_type_id[], hid_t mem_space_id[],
                                hid_t file_space_id[], hid_t dxpl_id,
                                const void *buf[]);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Dwrite_async(const char *app_file, const char *app_func,
                                unsigned int app_line, hid_t dset_id,
                                hid_t mem_type_id, hid_t mem_space_id,
                                hid_t file_space_id, hid_t dxpl_id,
                                const void *buf, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Dwrite_multi_async(
      const char *app_file, const char *app_func, unsigned int app_line,
      size_t count, hid_t dset_id[], hid_t mem_type_id[], hid_t mem_space_id[],
      hid_t file_space_id[], hid_t dxpl_id, const void *buf[], hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Dset_extent_async(const char *app_file, const char *app_func,
                                     unsigned int app_line, hid_t dset_id,
                                     const hsize_t size[], hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Dclose_async(const char *app_file, const char *app_func,
                                unsigned int app_line, hid_t dset_id,
                                hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual hid_t H5EScreate(void);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5ESwait(hid_t es_id, uint64_t timeout,
                          size_t *num_in_progress, hbool_t *err_occurred);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5EScancel(hid_t es_id, size_t *num_not_canceled,
                            hbool_t *err_occurred);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5ESget_count(hid_t es_id, size_t *count);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5ESget_op_counter(hid_t es_id, uint64_t *counter);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5ESget_err_status(hid_t es_id, hbool_t *err_occurred);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5ESget_err_count(hid_t es_id, size_t *num_errs);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5ESget_err_info(hid_t es_id, size_t num_err_info,
                                  H5ES_err_info_t err_info[],
                                  size_t *err_cleared);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5ESfree_err_info(size_t num_err_info,
                                   H5ES_err_info_t err_info[]);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5ESregister_insert_func(hid_t es_id,
                                          H5ES_event_insert_func_t func,
                                          void *ctx);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5ESregister_complete_func(hid_t es_id,
                                            H5ES_event_complete_func_t func,
                                            void *ctx);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5ESclose(hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual hid_t H5Fcreate_async(const char *app_file, const char *app_func,
                                unsigned int app_line, const char *filename,
                                unsigned int flags, hid_t fcpl_id,
                                hid_t fapl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual hid_t H5Fopen_async(const char *app_file, const char *app_func,
                              unsigned int app_line, const char *filename,
                              unsigned int flags, hid_t access_plist,
                              hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual hid_t H5Freopen_async(const char *app_file, const char *app_func,
                                unsigned int app_line, hid_t file_id,
                                hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Fflush_async(const char *app_file, const char *app_func,
                                unsigned int app_line, hid_t object_id,
                                H5F_scope_t scope, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Fclose_async(const char *app_file, const char *app_func,
                                unsigned int app_line, hid_t file_id,
                                hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Fset_mdc_config(hid_t file_id,
                                   const H5AC_cache_config_t *config_ptr);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Lcreate_hard_async(const char *app_file,
                                      const char *app_func,
                                      unsigned int app_line, hid_t cur_loc_id,
                                      const char *cur_name, hid_t new_loc_id,
                                      const char *new_name, hid_t lcpl_id,
                                      hid_t lapl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Lcreate_soft_async(
      const char *app_file, const char *app_func, unsigned int app_line,
      const char *link_target, hid_t link_loc_id, const char *link_name,
      hid_t lcpl_id, hid_t lapl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Ldelete_async(const char *app_file, const char *app_func,
                                 unsigned int app_line, hid_t loc_id,
                                 const char *name, hid_t lapl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Ldelete_by_idx_async(
      const char *app_file, const char *app_func, unsigned int app_line,
      hid_t loc_id, const char *group_name, H5_index_t idx_type,
      H5_iter_order_t order, hsize_t n, hid_t lapl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Lexists_async(const char *app_file, const char *app_func,
                                 unsigned int app_line, hid_t loc_id,
                                 const char *name, hbool_t *exists,
                                 hid_t lapl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Literate_async(const char *app_file, const char *app_func,
                                  unsigned int app_line, hid_t group_id,
                                  H5_index_t idx_type, H5_iter_order_t order,
                                  hsize_t *idx_p, H5L_iterate2_t op,
                                  void *op_data, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual hid_t H5Gcreate_async(const char *app_file, const char *app_func,
                                unsigned int app_line, hid_t loc_id,
                                const char *name, hid_t lcpl_id, hid_t gcpl_id,
                                hid_t gapl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual hid_t H5Gopen_async(const char *app_file, const char *app_func,
                              unsigned int app_line, hid_t loc_id,
                              const char *name, hid_t gapl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Gget_info_async(const char *app_file, const char *app_func,
                                   unsigned int app_line, hid_t loc_id,
                                   H5G_info_t *ginfo, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Gget_info_by_name_async(const char *app_file,
                                           const char *app_func,
                                           unsigned int app_line, hid_t loc_id,
                                           const char *name, H5G_info_t *ginfo,
                                           hid_t lapl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Gget_info_by_idx_async(
      const char *app_file, const char *app_func, unsigned int app_line,
      hid_t loc_id, const char *group_name, H5_index_t idx_type,
      H5_iter_order_t order, hsize_t n, H5G_info_t *ginfo, hid_t lapl_id,
      hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Gclose_async(const char *app_file, const char *app_func,
                                unsigned int app_line, hid_t group_id,
                                hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLquery_optional(hid_t obj_id, H5VL_subclass_t subcls,
                                    int opt_type, uint64_t *flags);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual hid_t H5Ropen_object_async(const char *app_file, const char *app_func,
                                     unsigned int app_line, H5R_ref_t *ref_ptr,
                                     hid_t rapl_id, hid_t oapl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual hid_t H5Ropen_region_async(const char *app_file, const char *app_func,
                                     unsigned int app_line, H5R_ref_t *ref_ptr,
                                     hid_t rapl_id, hid_t oapl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual hid_t H5Ropen_attr_async(const char *app_file, const char *app_func,
                                   unsigned int app_line, H5R_ref_t *ref_ptr,
                                   hid_t rapl_id, hid_t aapl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLregister_opt_operation(H5VL_subclass_t subcls,
                                            const char *op_name, int *op_val);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLfind_opt_operation(H5VL_subclass_t subcls,
                                        const char *op_name, int *op_val);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLunregister_opt_operation(H5VL_subclass_t subcls,
                                              const char *op_name);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLattr_optional_op(const char *app_file,
                                      const char *app_func,
                                      unsigned int app_line, hid_t attr_id,
                                      H5VL_optional_args_t *args, hid_t dxpl_id,
                                      hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLdataset_optional_op(const char *app_file,
                                         const char *app_func,
                                         unsigned int app_line, hid_t dset_id,
                                         H5VL_optional_args_t *args,
                                         hid_t dxpl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLdatatype_optional_op(const char *app_file,
                                          const char *app_func,
                                          unsigned int app_line, hid_t type_id,
                                          H5VL_optional_args_t *args,
                                          hid_t dxpl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLfile_optional_op(const char *app_file,
                                      const char *app_func,
                                      unsigned int app_line, hid_t file_id,
                                      H5VL_optional_args_t *args, hid_t dxpl_id,
                                      hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLgroup_optional_op(const char *app_file,
                                       const char *app_func,
                                       unsigned int app_line, hid_t group_id,
                                       H5VL_optional_args_t *args,
                                       hid_t dxpl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLlink_optional_op(const char *app_file,
                                      const char *app_func,
                                      unsigned int app_line, hid_t loc_id,
                                      const char *name, hid_t lapl_id,
                                      H5VL_optional_args_t *args, hid_t dxpl_id,
                                      hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLobject_optional_op(const char *app_file,
                                        const char *app_func,
                                        unsigned int app_line, hid_t loc_id,
                                        const char *name, hid_t lapl_id,
                                        H5VL_optional_args_t *args,
                                        hid_t dxpl_id, hid_t es_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLrequest_optional_op(void *req, hid_t connector_id,
                                         H5VL_optional_args_t *args);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Ssel_iter_get_seq_list(hid_t sel_iter_id, size_t maxseq,
                                          size_t maxelmts, size_t *nseq,
                                          size_t *nelmts, hsize_t *off,
                                          size_t *len);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual ssize_t H5Pget_driver_config_str(hid_t fapl_id, char *config_buf,
                                           size_t buf_size);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Pset_driver_by_name(hid_t plist_id, const char *driver_name,
                                       const char *driver_config);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Pset_driver_by_value(hid_t plist_id,
                                        H5FD_class_value_t driver_value,
                                        const char *driver_config);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Pget_vol_cap_flags(hid_t plist_id, uint64_t *cap_flags);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Pset_dataset_io_hyperslab_selection(
      hid_t plist_id, unsigned int rank, H5S_seloper_t op,
      const hsize_t start[], const hsize_t stride[], const hsize_t count[],
      const hsize_t block[]);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Pset_selection_io(hid_t plist_id,
                                     H5D_selection_io_mode_t selection_io_mode);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Pget_selection_io(
      hid_t plist_id, H5D_selection_io_mode_t *selection_io_mode);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Pget_no_selection_io_cause(hid_t plist_id,
                                              uint32_t *no_selection_io_cause);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Pget_actual_selection_io_mode(
      hid_t plist_id, uint32_t *actual_selection_io_mode);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Pset_modify_write_buf(hid_t plist_id,
                                         hbool_t modify_write_buf);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Pget_modify_write_buf(hid_t plist_id,
                                         hbool_t *modify_write_buf);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5ESinsert_request(hid_t es_id, hid_t connector_id,
                                    void *request);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5ESget_requests(hid_t es_id, H5_iter_order_t order,
                                  hid_t *connector_ids, void **requests,
                                  size_t array_len, size_t *count);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual hid_t H5FDperform_init(H5FD_init_t op);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual htri_t H5FDis_driver_registered_by_name(const char *driver_name);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual htri_t H5FDis_driver_registered_by_value(
      H5FD_class_value_t driver_value);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5FDread_vector(H5FD_t *file, hid_t dxpl_id, uint32_t count,
                                 H5FD_mem_t types[], haddr_t addrs[],
                                 size_t sizes[], void *bufs[]);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5FDwrite_vector(H5FD_t *file, hid_t dxpl_id, uint32_t count,
                                  H5FD_mem_t types[], haddr_t addrs[],
                                  size_t sizes[], const void *bufs[]);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5FDread_selection(H5FD_t *file, H5FD_mem_t type,
                                    hid_t dxpl_id, uint32_t count,
                                    hid_t mem_spaces[], hid_t file_spaces[],
                                    haddr_t offsets[], size_t element_sizes[],
                                    void *bufs[]);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5FDwrite_selection(H5FD_t *file, H5FD_mem_t type,
                                     hid_t dxpl_id, uint32_t count,
                                     hid_t mem_spaces[], hid_t file_spaces[],
                                     haddr_t offsets[], size_t element_sizes[],
                                     const void *bufs[]);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5FDread_vector_from_selection(
      H5FD_t *file, H5FD_mem_t type, hid_t dxpl_id, uint32_t count,
      hid_t mem_spaces[], hid_t file_spaces[], haddr_t offsets[],
      size_t element_sizes[], void *bufs[]);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5FDwrite_vector_from_selection(
      H5FD_t *file, H5FD_mem_t type, hid_t dxpl_id, uint32_t count,
      hid_t mem_spaces[], hid_t file_spaces[], haddr_t offsets[],
      size_t element_sizes[], const void *bufs[]);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5FDread_from_selection(H5FD_t *file, H5FD_mem_t type,
                                         hid_t dxpl_id, uint32_t count,
                                         hid_t mem_space_ids[],
                                         hid_t file_space_ids[],
                                         haddr_t offsets[],
                                         size_t element_sizes[], void *bufs[]);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5FDwrite_from_selection(
      H5FD_t *file, H5FD_mem_t type, hid_t dxpl_id, uint32_t count,
      hid_t mem_space_ids[], hid_t file_space_ids[], haddr_t offsets[],
      size_t element_sizes[], const void *bufs[]);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5FDdelete(const char *name, hid_t fapl_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5FDctl(H5FD_t *file, uint64_t op_code, uint64_t flags,
                         const void *input, void **output);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual hid_t H5Iregister_future(H5I_type_t type, const void *object,
                                   H5I_future_realize_func_t realize_cb,
                                   H5I_future_discard_func_t discard_cb);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5TSmutex_acquire(unsigned int lock_count, _Bool *acquired);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5TSmutex_release(unsigned int *lock_count);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5TSmutex_get_attempt_count(unsigned int *count);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLstart_lib_state(void);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLfinish_lib_state(void);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLget_cap_flags(hid_t connector_id, uint64_t *cap_flags);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLattr_get(void *obj, hid_t connector_id,
                              H5VL_attr_get_args_t *args, hid_t dxpl_id,
                              void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLattr_specific(void *obj,
                                   const H5VL_loc_params_t *loc_params,
                                   hid_t connector_id,
                                   H5VL_attr_specific_args_t *args,
                                   hid_t dxpl_id, void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLattr_optional(void *obj, hid_t connector_id,
                                   H5VL_optional_args_t *args, hid_t dxpl_id,
                                   void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLdataset_read(size_t count, void *dset[],
                                  hid_t connector_id, hid_t mem_type_id[],
                                  hid_t mem_space_id[], hid_t file_space_id[],
                                  hid_t plist_id, void *buf[], void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLdataset_write(size_t count, void *dset[],
                                   hid_t connector_id, hid_t mem_type_id[],
                                   hid_t mem_space_id[], hid_t file_space_id[],
                                   hid_t plist_id, const void *buf[],
                                   void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLdataset_get(void *dset, hid_t connector_id,
                                 H5VL_dataset_get_args_t *args, hid_t dxpl_id,
                                 void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLdataset_specific(void *obj, hid_t connector_id,
                                      H5VL_dataset_specific_args_t *args,
                                      hid_t dxpl_id, void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLdataset_optional(void *obj, hid_t connector_id,
                                      H5VL_optional_args_t *args, hid_t dxpl_id,
                                      void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLdatatype_get(void *dt, hid_t connector_id,
                                  H5VL_datatype_get_args_t *args, hid_t dxpl_id,
                                  void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLdatatype_specific(void *obj, hid_t connector_id,
                                       H5VL_datatype_specific_args_t *args,
                                       hid_t dxpl_id, void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLdatatype_optional(void *obj, hid_t connector_id,
                                       H5VL_optional_args_t *args,
                                       hid_t dxpl_id, void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLfile_get(void *file, hid_t connector_id,
                              H5VL_file_get_args_t *args, hid_t dxpl_id,
                              void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLfile_specific(void *obj, hid_t connector_id,
                                   H5VL_file_specific_args_t *args,
                                   hid_t dxpl_id, void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLfile_optional(void *obj, hid_t connector_id,
                                   H5VL_optional_args_t *args, hid_t dxpl_id,
                                   void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLgroup_get(void *obj, hid_t connector_id,
                               H5VL_group_get_args_t *args, hid_t dxpl_id,
                               void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLgroup_specific(void *obj, hid_t connector_id,
                                    H5VL_group_specific_args_t *args,
                                    hid_t dxpl_id, void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLgroup_optional(void *obj, hid_t connector_id,
                                    H5VL_optional_args_t *args, hid_t dxpl_id,
                                    void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLlink_create(H5VL_link_create_args_t *args, void *obj,
                                 const H5VL_loc_params_t *loc_params,
                                 hid_t connector_id, hid_t lcpl_id,
                                 hid_t lapl_id, hid_t dxpl_id, void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLlink_get(void *obj, const H5VL_loc_params_t *loc_params,
                              hid_t connector_id, H5VL_link_get_args_t *args,
                              hid_t dxpl_id, void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLlink_specific(void *obj,
                                   const H5VL_loc_params_t *loc_params,
                                   hid_t connector_id,
                                   H5VL_link_specific_args_t *args,
                                   hid_t dxpl_id, void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLlink_optional(void *obj,
                                   const H5VL_loc_params_t *loc_params,
                                   hid_t connector_id,
                                   H5VL_optional_args_t *args, hid_t dxpl_id,
                                   void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLobject_get(void *obj, const H5VL_loc_params_t *loc_params,
                                hid_t connector_id,
                                H5VL_object_get_args_t *args, hid_t dxpl_id,
                                void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLobject_specific(void *obj,
                                     const H5VL_loc_params_t *loc_params,
                                     hid_t connector_id,
                                     H5VL_object_specific_args_t *args,
                                     hid_t dxpl_id, void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLobject_optional(void *obj,
                                     const H5VL_loc_params_t *loc_params,
                                     hid_t connector_id,
                                     H5VL_optional_args_t *args, hid_t dxpl_id,
                                     void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLintrospect_get_cap_flags(const void *info,
                                              hid_t connector_id,
                                              uint64_t *cap_flags);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLintrospect_opt_query(void *obj, hid_t connector_id,
                                          H5VL_subclass_t subcls, int opt_type,
                                          uint64_t *flags);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLrequest_wait(void *req, hid_t connector_id,
                                  uint64_t timeout,
                                  H5VL_request_status_t *status);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLrequest_cancel(void *req, hid_t connector_id,
                                    H5VL_request_status_t *status);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLrequest_specific(void *req, hid_t connector_id,
                                      H5VL_request_specific_args_t *args);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLrequest_optional(void *req, hid_t connector_id,
                                      H5VL_optional_args_t *args);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLblob_specific(void *obj, hid_t connector_id, void *blob_id,
                                   H5VL_blob_specific_args_t *args);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLblob_optional(void *obj, hid_t connector_id, void *blob_id,
                                   H5VL_optional_args_t *args);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5VLoptional(void *obj, hid_t connector_id,
                              H5VL_optional_args_t *args, hid_t dxpl_id,
                              void **req);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual hid_t H5FD_onion_init(void);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Pget_fapl_onion(hid_t fapl_id,
                                   H5FD_onion_fapl_info_t *fa_out);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5Pset_fapl_onion(hid_t fapl_id,
                                   const H5FD_onion_fapl_info_t *fa);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  virtual herr_t H5FDonion_get_revision_count(const char *filename,
                                              hid_t fapl_id,
                                              uint64_t *revision_count);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5open);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5close);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5dont_atexit);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5garbage_collect);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5set_free_list_limits);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5get_libversion);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5check_version);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5is_library_threadsafe);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5free_memory);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5allocate_memory);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5resize_memory);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Iregister);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Iobject_verify);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Iremove_verify);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Iget_type);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Iget_file_id);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Iget_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Iinc_ref);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Idec_ref);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Iget_ref);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Iregister_type);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Iclear_type);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Idestroy_type);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Iinc_type_ref);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Idec_type_ref);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Iget_type_ref);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Isearch);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Inmembers);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Itype_exists);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Iis_valid);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tcreate);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tcopy);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tclose);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tequal);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tlock);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tcommit2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Topen2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tcommit_anon);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_create_plist);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tcommitted);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tencode);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tdecode);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tinsert);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tpack);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tenum_create);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tenum_insert);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tenum_nameof);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tenum_valueof);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tvlen_create);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tarray_create2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_array_ndims);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_array_dims2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tset_tag);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_tag);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_super);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_class);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tdetect_class);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_order);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_precision);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_offset);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_pad);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_sign);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_fields);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_ebias);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_norm);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_inpad);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_strpad);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_nmembers);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_member_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_member_index);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_member_offset);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_member_class);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_member_type);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_member_value);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_cset);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tis_variable_str);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_native_type);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tset_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tset_order);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tset_precision);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tset_offset);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tset_pad);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tset_sign);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tset_fields);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tset_ebias);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tset_norm);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tset_inpad);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tset_cset);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tset_strpad);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tregister);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tunregister);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tfind);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tcompiler_conv);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tconvert);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tcommit1);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Topen1);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tarray_create1);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tget_array_dims1);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Lmove);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Lcopy);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Lcreate_hard);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Lcreate_soft);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Ldelete);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Ldelete_by_idx);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Lget_val);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Lget_val_by_idx);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Lexists);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5Lget_info);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5Lget_info_by_idx);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Lget_name_by_idx);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5Literate);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5Literate_by_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5Lvisit);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5Lvisit_by_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Lcreate_ud);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Lregister);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Lunregister);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Lis_registered);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Lunpack_elink_val);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Lcreate_external);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Oopen);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Oopen_by_addr);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Oopen_by_idx);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Oexists_by_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5Oget_info);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5Oget_info_by_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5Oget_info_by_idx);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Olink);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Oincr_refcount);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Odecr_refcount);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Ocopy);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Oset_comment);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Oset_comment_by_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Oget_comment);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Oget_comment_by_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5Ovisit);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5Ovisit_by_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Oclose);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Aclose);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Acreate2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Acreate_by_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Adelete);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Adelete_by_idx);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Adelete_by_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Aexists);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Aexists_by_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Aget_create_plist);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Aget_info);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Aget_info_by_idx);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Aget_info_by_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Aget_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Aget_name_by_idx);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Aget_space);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Aget_storage_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Aget_type);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Aiterate2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Aiterate_by_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Aopen);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Aopen_by_idx);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Aopen_by_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Aread);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Arename);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Awrite);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Arename_by_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Acreate1);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Aget_num_attrs);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Aiterate1);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Aopen_idx);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Aopen_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dcreate2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dcreate_anon);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dopen2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dget_space);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dget_space_status);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dget_type);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dget_create_plist);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dget_access_plist);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dget_storage_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dget_chunk_storage_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dget_offset);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dread);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dwrite);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Diterate);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dvlen_reclaim);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dvlen_get_buf_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dfill);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dset_extent);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dscatter);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dgather);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dclose);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Ddebug);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dcreate1);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dopen1);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dextend);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Eregister_class);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Eunregister_class);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Eclose_msg);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Ecreate_msg);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Ecreate_stack);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Eget_current_stack);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Eclose_stack);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Eget_class_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Eset_current_stack);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Epush2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Epop);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Eprint2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Ewalk2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Eget_auto2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Eset_auto2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Eclear2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Eauto_is_v2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Eget_msg);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Eget_num);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Eclear1);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Eget_auto1);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Epush1);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Eprint1);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Eset_auto1);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Ewalk1);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Eget_major);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Eget_minor);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5Fis_hdf5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fcreate);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fopen);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Freopen);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fflush);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fclose);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fget_create_plist);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fget_access_plist);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fget_intent);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fget_obj_count);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fget_obj_ids);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fget_vfd_handle);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fmount);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Funmount);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fget_freespace);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fget_filesize);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fget_file_image);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fget_mdc_config);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101200
  GOTCHA_MACRO_VAR(H5Fset_mdc_config);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fget_mdc_hit_rate);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fget_mdc_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Freset_mdc_hit_rate_stats);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fget_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5Fget_info);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fclear_elink_file_cache);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fset_mpi_atomicity);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fget_mpi_atomicity);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FDregister);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FDunregister);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FDopen);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FDclose);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FDcmp);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FDquery);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FDalloc);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FDfree);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FDget_eoa);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FDset_eoa);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5FDget_eof);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FDget_vfd_handle);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FDread);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FDwrite);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5FDflush);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FDtruncate);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FDdriver_query);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Gcreate2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Gcreate_anon);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Gopen2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Gget_create_plist);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Gget_info);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Gget_info_by_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Gget_info_by_idx);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Gflush);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Grefresh);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Gclose);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Gcreate1);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Gopen1);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Glink);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Glink2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Gmove);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Gmove2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Gunlink);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Gget_linkval);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Gset_comment);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Gget_comment);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Giterate);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Gget_num_objs);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Gget_objinfo);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Gget_objname_by_idx);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Gget_objtype_by_idx);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Zregister);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Zunregister);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Zfilter_avail);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Zget_filter_info);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pclose);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pclose_class);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pcopy);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pcopy_prop);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pcreate);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pcreate_class);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pequal);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pexist);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_class);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_class_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_class_parent);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_nprops);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pinsert2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pisa_class);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Piterate);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pregister2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Premove);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5Pset);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Punregister);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pall_filters_avail);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_attr_creation_order);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_attr_phase_change);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_filter2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_filter_by_id2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_nfilters);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_obj_track_times);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pmodify_filter);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Premove_filter);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_attr_creation_order);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_attr_phase_change);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_deflate);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_filter);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_fletcher32);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_obj_track_times);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_istore_k);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_shared_mesg_index);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_shared_mesg_nindexes);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_shared_mesg_phase_change);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_sizes);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_sym_k);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_userblock);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_version);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_istore_k);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_shared_mesg_index);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_shared_mesg_nindexes);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_shared_mesg_phase_change);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_sizes);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_sym_k);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_userblock);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_alignment);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_cache);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_core_write_tracking);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_driver);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5Pget_driver_info);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_elink_file_cache_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_family_offset);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_fclose_degree);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_file_image);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_file_image_callbacks);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_gc_references);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_libver_bounds);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_mdc_config);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_meta_block_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_multi_type);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_sieve_buf_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_small_data_block_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_alignment);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_cache);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_core_write_tracking);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_driver);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_elink_file_cache_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_family_offset);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_fclose_degree);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_file_image);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_file_image_callbacks);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_gc_references);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_libver_bounds);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_mdc_config);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_meta_block_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_multi_type);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_sieve_buf_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_small_data_block_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pfill_value_defined);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_alloc_time);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_chunk);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_external);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_external_count);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_fill_time);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_fill_value);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_layout);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_alloc_time);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_chunk);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_external);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_fill_time);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_fill_value);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_shuffle);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_layout);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_nbit);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_scaleoffset);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_szip);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_chunk_cache);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_efile_prefix);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_chunk_cache);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_efile_prefix);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_btree_ratios);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_buffer);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_data_transform);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_edc_check);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_hyper_vector_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_preserve);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_type_conv_cb);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_vlen_mem_manager);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_btree_ratios);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_buffer);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_data_transform);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_edc_check);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_filter_callback);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_hyper_vector_size);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_preserve);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_type_conv_cb);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_vlen_mem_manager);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_mpio_actual_chunk_opt_mode);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_mpio_actual_io_mode);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_mpio_no_collective_cause);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_create_intermediate_group);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_create_intermediate_group);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_est_link_info);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_link_creation_order);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_link_phase_change);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_local_heap_size_hint);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_est_link_info);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_link_creation_order);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_link_phase_change);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_local_heap_size_hint);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_char_encoding);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_char_encoding);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_elink_acc_flags);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_elink_cb);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_elink_fapl);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_elink_prefix);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_nlinks);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_elink_acc_flags);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_elink_cb);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_elink_fapl);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_elink_prefix);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_nlinks);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Padd_merge_committed_dtype_path);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pfree_merge_committed_dtype_paths);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_copy_object);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_mcdt_search_cb);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_copy_object);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_mcdt_search_cb);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pregister1);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pinsert1);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_filter1);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_filter_by_id1);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5PLset_loading_state);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5PLget_loading_state);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5PLappend);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5PLprepend);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5PLreplace);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5PLinsert);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5PLremove);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5PLget);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5PLsize);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Rcreate);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5Rdereference);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Rget_region);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5Rget_obj_type2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Rget_name);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Rget_obj_type1);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sclose);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Scopy);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Screate);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Screate_simple);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sdecode);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5Sencode);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sextent_copy);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sextent_equal);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sget_simple_extent_dims);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sget_simple_extent_ndims);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sget_simple_extent_npoints);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sget_simple_extent_type);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sis_simple);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sset_extent_none);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sset_extent_simple);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sget_select_bounds);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sget_select_elem_npoints);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sget_select_elem_pointlist);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sget_select_hyper_blocklist);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sget_select_hyper_nblocks);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sget_select_npoints);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sget_select_type);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Soffset_simple);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sselect_all);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sselect_elements);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sselect_hyperslab);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sselect_none);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sselect_valid);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FD_core_init);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5FD_core_term);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_fapl_core);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_fapl_core);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FD_family_init);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5FD_family_term);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_fapl_family);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_fapl_family);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101200
  GOTCHA_MACRO_VAR(H5FD_hdfs_init);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5FD_hdfs_term);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101200
  GOTCHA_MACRO_VAR(H5Pget_fapl_hdfs);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101200
  GOTCHA_MACRO_VAR(H5Pset_fapl_hdfs);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FD_log_init);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5FD_log_term);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_fapl_log);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FD_mpio_init);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5FD_mpio_term);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_fapl_mpio);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_fapl_mpio);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_dxpl_mpio);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_dxpl_mpio);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_dxpl_mpio_collective_opt);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_dxpl_mpio_chunk_opt);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_dxpl_mpio_chunk_opt_num);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_dxpl_mpio_chunk_opt_ratio);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FD_multi_init);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5FD_multi_term);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_fapl_multi);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_fapl_multi);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_fapl_split);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FD_sec2_init);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5FD_sec2_term);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_fapl_sec2);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FD_stdio_init);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_MACRO_VAR(H5FD_stdio_term);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_fapl_stdio);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5get_free_list_sizes);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5get_alloc_stats);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Iiterate);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Tflush);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Trefresh);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Treclaim);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Lget_info2);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Lget_info_by_idx2);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Literate2);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Literate_by_name2);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Lvisit2);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Lvisit_by_name2);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Lget_info1);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Lget_info_by_idx1);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Literate1);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Literate_by_name1);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Lvisit1);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Lvisit_by_name1);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Oopen_by_token);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Oget_info3);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Oget_info_by_name3);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Oget_info_by_idx3);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Oget_native_info);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Oget_native_info_by_name);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Oget_native_info_by_idx);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Ovisit3);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Ovisit_by_name3);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Oflush);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Orefresh);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Odisable_mdc_flushes);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Oenable_mdc_flushes);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Oare_mdc_flushes_disabled);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Otoken_cmp);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Otoken_to_str);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Otoken_from_str);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Oget_info1);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Oget_info_by_name1);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Oget_info_by_idx1);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Oget_info2);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Oget_info_by_name2);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Oget_info_by_idx2);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Ovisit1);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Ovisit_by_name1);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Ovisit2);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Ovisit_by_name2);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dget_num_chunks);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dget_chunk_info_by_coord);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dget_chunk_info);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dwrite_chunk);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dread_chunk);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dflush);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Drefresh);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dformat_convert);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Dget_chunk_index_type);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Eappend_stack);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fis_accessible);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fdelete);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fget_fileno);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fget_eoa);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fincrement_filesize);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fget_info2);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fget_metadata_read_retry_info);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fstart_swmr_write);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fget_free_sections);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fset_libver_bounds);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fstart_mdc_logging);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fstop_mdc_logging);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fget_mdc_logging_status);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fformat_convert);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Freset_page_buffering_stats);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fget_page_buffering_stats);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fget_mdc_image_info);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fget_dset_no_attrs_hint);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fset_dset_no_attrs_hint);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fget_info1);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fset_latest_format);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Fis_hdf5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FDget_eof);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FDflush);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FDlock);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FDunlock);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Scombine_hyperslab);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Scombine_select);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sencode2);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sget_regular_hyperslab);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sis_regular_hyperslab);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Smodify_select);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Ssel_iter_close);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Ssel_iter_create);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5Ssel_iter_get_seq_list);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Ssel_iter_reset);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sselect_adjust);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sselect_copy);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sselect_intersect_block);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sselect_project_intersection);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sselect_shape_same);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Sencode1);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pdecode);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pencode2);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_file_space_page_size);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_file_space_strategy);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_file_space_page_size);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_file_space_strategy);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_driver_info);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_evict_on_close);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_file_locking);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_mdc_image_config);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_mdc_log_options);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_metadata_read_attempts);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_object_flush_cb);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_page_buffer_size);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_vol_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_vol_info);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_evict_on_close);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_file_locking);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_mdc_log_options);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_metadata_read_attempts);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_object_flush_cb);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_vol);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_all_coll_metadata_ops);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_all_coll_metadata_ops);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_coll_metadata_write);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_coll_metadata_write);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_mpi_params);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_mpi_params);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_mdc_image_config);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_page_buffer_size);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_chunk_opts);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_dset_no_attrs_hint);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_virtual_count);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_virtual_dsetname);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_virtual_filename);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_virtual_srcspace);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_virtual_vspace);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_chunk_opts);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_dset_no_attrs_hint);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_virtual);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_append_flush);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_virtual_prefix);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_virtual_printf_gap);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_virtual_view);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_append_flush);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_virtual_prefix);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_virtual_printf_gap);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_virtual_view);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pencode1);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_file_space);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_file_space);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Rcreate_object);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Rcreate_region);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Rcreate_attr);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Rdestroy);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Rget_type);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Requal);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Rcopy);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Ropen_object);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Ropen_region);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Ropen_attr);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Rget_obj_type3);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Rget_file_name);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Rget_obj_name);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Rget_attr_name);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Rdereference1);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Rget_obj_type2);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Rdereference2);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLregister_connector_by_name);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLregister_connector_by_value);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLis_connector_registered_by_name);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLis_connector_registered_by_value);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLget_connector_id);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLget_connector_id_by_name);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLget_connector_id_by_value);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLget_connector_name);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLclose);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLunregister_connector);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLquery_optional);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLobject_is_native);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLregister_connector);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLobject);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLget_file_type);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLpeek_connector_id_by_name);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLpeek_connector_id_by_value);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLcmp_connector_cls);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLwrap_register);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLretrieve_lib_state);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLrestore_lib_state);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLreset_lib_state);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLfree_lib_state);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLget_object);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLget_wrap_ctx);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLwrap_object);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLunwrap_object);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLfree_wrap_ctx);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLinitialize);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLterminate);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLget_cap_flags);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLget_value);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLcopy_connector_info);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLcmp_connector_info);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLfree_connector_info);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLconnector_info_to_str);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLconnector_str_to_info);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLattr_create);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLattr_open);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLattr_read);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLattr_write);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLattr_get);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLattr_specific);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLattr_optional);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLattr_close);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLdataset_create);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLdataset_open);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLdataset_read);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLdataset_write);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLdataset_get);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLdataset_specific);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLdataset_optional);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLdataset_close);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLdatatype_commit);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLdatatype_open);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLdatatype_get);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLdatatype_specific);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLdatatype_optional);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLdatatype_close);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLfile_create);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLfile_open);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLfile_get);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLfile_specific);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLfile_optional);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLfile_close);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLgroup_create);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLgroup_open);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLgroup_get);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLgroup_specific);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLgroup_optional);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLgroup_close);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLlink_create);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLlink_copy);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLlink_move);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLlink_get);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLlink_specific);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLlink_optional);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLobject_open);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLobject_copy);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLobject_get);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLobject_specific);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLobject_optional);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLintrospect_get_conn_cls);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLintrospect_opt_query);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLrequest_wait);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLrequest_notify);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLrequest_cancel);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLrequest_specific);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLrequest_optional);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLrequest_free);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLblob_put);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLblob_get);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLblob_specific);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLblob_optional);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLtoken_cmp);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLtoken_to_str);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLtoken_from_str);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_MACRO_VAR(H5VLoptional);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLnative_addr_to_token);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VLnative_token_to_addr);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VL_native_register);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5FD_splitter_init);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pset_fapl_splitter);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5Pget_fapl_splitter);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_MACRO_VAR(H5VL_pass_through_register);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5atclose);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5is_library_terminating);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Oopen_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Oopen_by_idx_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Oget_info_by_name_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Ocopy_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Oclose_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Oflush_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Orefresh_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Tclose_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Tcommit_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Topen_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Aclose_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Acreate_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Acreate_by_name_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Aexists_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Aexists_by_name_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Aopen_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Aopen_by_idx_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Aopen_by_name_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Aread_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Arename_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Arename_by_name_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Awrite_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Dcreate_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Dopen_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Dget_space_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Dchunk_iter);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Dread_multi);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Dread_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Dread_multi_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Dwrite_multi);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Dwrite_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Dwrite_multi_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Dset_extent_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Dclose_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5EScreate);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5ESwait);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5EScancel);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5ESget_count);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5ESget_op_counter);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5ESget_err_status);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5ESget_err_count);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5ESget_err_info);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5ESfree_err_info);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5ESregister_insert_func);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5ESregister_complete_func);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5ESclose);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Fcreate_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Fopen_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Freopen_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Fflush_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Fclose_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Fset_mdc_config);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Lcreate_hard_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Lcreate_soft_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Ldelete_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Ldelete_by_idx_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Lexists_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Literate_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Gcreate_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Gopen_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Gget_info_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Gget_info_by_name_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Gget_info_by_idx_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Gclose_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLquery_optional);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Ropen_object_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Ropen_region_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Ropen_attr_async);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLregister_opt_operation);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLfind_opt_operation);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLunregister_opt_operation);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLattr_optional_op);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLdataset_optional_op);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLdatatype_optional_op);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLfile_optional_op);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLgroup_optional_op);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLlink_optional_op);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLobject_optional_op);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLrequest_optional_op);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Ssel_iter_get_seq_list);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Pget_driver_config_str);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Pset_driver_by_name);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Pset_driver_by_value);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Pget_vol_cap_flags);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Pset_dataset_io_hyperslab_selection);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Pset_selection_io);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Pget_selection_io);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Pget_no_selection_io_cause);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Pget_actual_selection_io_mode);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Pset_modify_write_buf);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Pget_modify_write_buf);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5ESinsert_request);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5ESget_requests);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5FDperform_init);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5FDis_driver_registered_by_name);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5FDis_driver_registered_by_value);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5FDread_vector);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5FDwrite_vector);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5FDread_selection);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5FDwrite_selection);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5FDread_vector_from_selection);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5FDwrite_vector_from_selection);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5FDread_from_selection);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5FDwrite_from_selection);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5FDdelete);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5FDctl);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Iregister_future);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5TSmutex_acquire);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5TSmutex_release);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5TSmutex_get_attempt_count);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLstart_lib_state);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLfinish_lib_state);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLget_cap_flags);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLattr_get);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLattr_specific);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLattr_optional);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLdataset_read);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLdataset_write);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLdataset_get);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLdataset_specific);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLdataset_optional);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLdatatype_get);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLdatatype_specific);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLdatatype_optional);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLfile_get);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLfile_specific);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLfile_optional);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLgroup_get);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLgroup_specific);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLgroup_optional);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLlink_create);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLlink_get);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLlink_specific);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLlink_optional);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLobject_get);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLobject_specific);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLobject_optional);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLintrospect_get_cap_flags);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLintrospect_opt_query);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLrequest_wait);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLrequest_cancel);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLrequest_specific);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLrequest_optional);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLblob_specific);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLblob_optional);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5VLoptional);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5FD_onion_init);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Pget_fapl_onion);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5Pset_fapl_onion);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_MACRO_VAR(H5FDonion_get_revision_count);
#endif
};
}  // namespace brahma

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5open, herr_t, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5close, herr_t, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5dont_atexit, herr_t, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5garbage_collect, herr_t, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5set_free_list_limits, herr_t,
                     (int reg_global_lim, int reg_list_lim, int arr_global_lim,
                      int arr_list_lim, int blk_global_lim, int blk_list_lim),
                     (reg_global_lim, reg_list_lim, arr_global_lim,
                      arr_list_lim, blk_global_lim, blk_list_lim),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5get_libversion, herr_t,
                     (unsigned int *majnum, unsigned int *minnum,
                      unsigned int *relnum),
                     (majnum, minnum, relnum), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5check_version, herr_t,
                     (unsigned int majnum, unsigned int minnum,
                      unsigned int relnum),
                     (majnum, minnum, relnum), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5is_library_threadsafe, herr_t, (hbool_t * is_ts),
                     (is_ts), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5free_memory, herr_t, (void *mem), (mem), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5allocate_memory, void *, (size_t size, hbool_t clear),
                     (size, clear), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5resize_memory, void *, (void *mem, size_t size),
                     (mem, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Iregister, hid_t, (H5I_type_t type, const void *object),
                     (type, object), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Iobject_verify, void *, (hid_t id, H5I_type_t type),
                     (id, type), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Iremove_verify, void *, (hid_t id, H5I_type_t type),
                     (id, type), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Iget_type, H5I_type_t, (hid_t id), (id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Iget_file_id, hid_t, (hid_t id), (id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Iget_name, ssize_t, (hid_t id, char *name, size_t size),
                     (id, name, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Iinc_ref, int, (hid_t id), (id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Idec_ref, int, (hid_t id), (id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Iget_ref, int, (hid_t id), (id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Iregister_type, H5I_type_t,
                     (size_t hash_size, unsigned int reserved,
                      H5I_free_t free_func),
                     (hash_size, reserved, free_func), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Iclear_type, herr_t, (H5I_type_t type, hbool_t force),
                     (type, force), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Idestroy_type, herr_t, (H5I_type_t type), (type),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Iinc_type_ref, int, (H5I_type_t type), (type),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Idec_type_ref, int, (H5I_type_t type), (type),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Iget_type_ref, int, (H5I_type_t type), (type),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Isearch, void *,
                     (H5I_type_t type, H5I_search_func_t func, void *key),
                     (type, func, key), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Inmembers, herr_t,
                     (H5I_type_t type, hsize_t *num_members),
                     (type, num_members), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Itype_exists, htri_t, (H5I_type_t type), (type),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Iis_valid, htri_t, (hid_t id), (id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tcreate, hid_t, (H5T_class_t type, size_t size),
                     (type, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tcopy, hid_t, (hid_t type_id), (type_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tclose, herr_t, (hid_t type_id), (type_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tequal, htri_t, (hid_t type1_id, hid_t type2_id),
                     (type1_id, type2_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tlock, herr_t, (hid_t type_id), (type_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tcommit2, herr_t,
                     (hid_t loc_id, const char *name, hid_t type_id,
                      hid_t lcpl_id, hid_t tcpl_id, hid_t tapl_id),
                     (loc_id, name, type_id, lcpl_id, tcpl_id, tapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Topen2, hid_t,
                     (hid_t loc_id, const char *name, hid_t tapl_id),
                     (loc_id, name, tapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tcommit_anon, herr_t,
                     (hid_t loc_id, hid_t type_id, hid_t tcpl_id,
                      hid_t tapl_id),
                     (loc_id, type_id, tcpl_id, tapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_create_plist, hid_t, (hid_t type_id), (type_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tcommitted, htri_t, (hid_t type_id), (type_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tencode, herr_t,
                     (hid_t obj_id, void *buf, size_t *nalloc),
                     (obj_id, buf, nalloc), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tdecode, hid_t, (const void *buf), (buf), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tinsert, herr_t,
                     (hid_t parent_id, const char *name, size_t offset,
                      hid_t member_id),
                     (parent_id, name, offset, member_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tpack, herr_t, (hid_t type_id), (type_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tenum_create, hid_t, (hid_t base_id), (base_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tenum_insert, herr_t,
                     (hid_t type, const char *name, const void *value),
                     (type, name, value), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tenum_nameof, herr_t,
                     (hid_t type, const void *value, char *name, size_t size),
                     (type, value, name, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tenum_valueof, herr_t,
                     (hid_t type, const char *name, void *value),
                     (type, name, value), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tvlen_create, hid_t, (hid_t base_id), (base_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tarray_create2, hid_t,
                     (hid_t base_id, unsigned int ndims, const hsize_t dim[]),
                     (base_id, ndims, dim), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_array_ndims, int, (hid_t type_id), (type_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_array_dims2, int, (hid_t type_id, hsize_t dims[]),
                     (type_id, dims), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tset_tag, herr_t, (hid_t type, const char *tag),
                     (type, tag), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_tag, char *, (hid_t type), (type), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_super, hid_t, (hid_t type), (type), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_class, H5T_class_t, (hid_t type_id), (type_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tdetect_class, htri_t, (hid_t type_id, H5T_class_t cls),
                     (type_id, cls), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_size, size_t, (hid_t type_id), (type_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_order, H5T_order_t, (hid_t type_id), (type_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_precision, size_t, (hid_t type_id), (type_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_offset, int, (hid_t type_id), (type_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_pad, herr_t,
                     (hid_t type_id, H5T_pad_t *lsb, H5T_pad_t *msb),
                     (type_id, lsb, msb), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_sign, H5T_sign_t, (hid_t type_id), (type_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_fields, herr_t,
                     (hid_t type_id, size_t *spos, size_t *epos, size_t *esize,
                      size_t *mpos, size_t *msize),
                     (type_id, spos, epos, esize, mpos, msize), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_ebias, size_t, (hid_t type_id), (type_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_norm, H5T_norm_t, (hid_t type_id), (type_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_inpad, H5T_pad_t, (hid_t type_id), (type_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_strpad, H5T_str_t, (hid_t type_id), (type_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_nmembers, int, (hid_t type_id), (type_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_member_name, char *,
                     (hid_t type_id, unsigned int membno), (type_id, membno),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_member_index, int,
                     (hid_t type_id, const char *name), (type_id, name),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_member_offset, size_t,
                     (hid_t type_id, unsigned int membno), (type_id, membno),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_member_class, H5T_class_t,
                     (hid_t type_id, unsigned int membno), (type_id, membno),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_member_type, hid_t,
                     (hid_t type_id, unsigned int membno), (type_id, membno),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_member_value, herr_t,
                     (hid_t type_id, unsigned int membno, void *value),
                     (type_id, membno, value), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_cset, H5T_cset_t, (hid_t type_id), (type_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tis_variable_str, htri_t, (hid_t type_id), (type_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_native_type, hid_t,
                     (hid_t type_id, H5T_direction_t direction),
                     (type_id, direction), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tset_size, herr_t, (hid_t type_id, size_t size),
                     (type_id, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tset_order, herr_t, (hid_t type_id, H5T_order_t order),
                     (type_id, order), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tset_precision, herr_t, (hid_t type_id, size_t prec),
                     (type_id, prec), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tset_offset, herr_t, (hid_t type_id, size_t offset),
                     (type_id, offset), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tset_pad, herr_t,
                     (hid_t type_id, H5T_pad_t lsb, H5T_pad_t msb),
                     (type_id, lsb, msb), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tset_sign, herr_t, (hid_t type_id, H5T_sign_t sign),
                     (type_id, sign), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tset_fields, herr_t,
                     (hid_t type_id, size_t spos, size_t epos, size_t esize,
                      size_t mpos, size_t msize),
                     (type_id, spos, epos, esize, mpos, msize), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tset_ebias, herr_t, (hid_t type_id, size_t ebias),
                     (type_id, ebias), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tset_norm, herr_t, (hid_t type_id, H5T_norm_t norm),
                     (type_id, norm), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tset_inpad, herr_t, (hid_t type_id, H5T_pad_t pad),
                     (type_id, pad), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tset_cset, herr_t, (hid_t type_id, H5T_cset_t cset),
                     (type_id, cset), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tset_strpad, herr_t, (hid_t type_id, H5T_str_t strpad),
                     (type_id, strpad), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tregister, herr_t,
                     (H5T_pers_t pers, const char *name, hid_t src_id,
                      hid_t dst_id, H5T_conv_t func),
                     (pers, name, src_id, dst_id, func), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tunregister, herr_t,
                     (H5T_pers_t pers, const char *name, hid_t src_id,
                      hid_t dst_id, H5T_conv_t func),
                     (pers, name, src_id, dst_id, func), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tfind, H5T_conv_t,
                     (hid_t src_id, hid_t dst_id, H5T_cdata_t **pcdata),
                     (src_id, dst_id, pcdata), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tcompiler_conv, htri_t, (hid_t src_id, hid_t dst_id),
                     (src_id, dst_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tconvert, herr_t,
                     (hid_t src_id, hid_t dst_id, size_t nelmts, void *buf,
                      void *background, hid_t plist_id),
                     (src_id, dst_id, nelmts, buf, background, plist_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tcommit1, herr_t,
                     (hid_t loc_id, const char *name, hid_t type_id),
                     (loc_id, name, type_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Topen1, hid_t, (hid_t loc_id, const char *name),
                     (loc_id, name), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tarray_create1, hid_t,
                     (hid_t base_id, int ndims, const hsize_t dim[],
                      const int perm[]),
                     (base_id, ndims, dim, perm), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tget_array_dims1, int,
                     (hid_t type_id, hsize_t dims[], int perm[]),
                     (type_id, dims, perm), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Lmove, herr_t,
                     (hid_t src_loc, const char *src_name, hid_t dst_loc,
                      const char *dst_name, hid_t lcpl_id, hid_t lapl_id),
                     (src_loc, src_name, dst_loc, dst_name, lcpl_id, lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Lcopy, herr_t,
                     (hid_t src_loc, const char *src_name, hid_t dst_loc,
                      const char *dst_name, hid_t lcpl_id, hid_t lapl_id),
                     (src_loc, src_name, dst_loc, dst_name, lcpl_id, lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Lcreate_hard, herr_t,
                     (hid_t cur_loc, const char *cur_name, hid_t dst_loc,
                      const char *dst_name, hid_t lcpl_id, hid_t lapl_id),
                     (cur_loc, cur_name, dst_loc, dst_name, lcpl_id, lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Lcreate_soft, herr_t,
                     (const char *link_target, hid_t link_loc_id,
                      const char *link_name, hid_t lcpl_id, hid_t lapl_id),
                     (link_target, link_loc_id, link_name, lcpl_id, lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Ldelete, herr_t,
                     (hid_t loc_id, const char *name, hid_t lapl_id),
                     (loc_id, name, lapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Ldelete_by_idx, herr_t,
                     (hid_t loc_id, const char *group_name, H5_index_t idx_type,
                      H5_iter_order_t order, hsize_t n, hid_t lapl_id),
                     (loc_id, group_name, idx_type, order, n, lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Lget_val, herr_t,
                     (hid_t loc_id, const char *name, void *buf, size_t size,
                      hid_t lapl_id),
                     (loc_id, name, buf, size, lapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(
    H5Lget_val_by_idx, herr_t,
    (hid_t loc_id, const char *group_name, H5_index_t idx_type,
     H5_iter_order_t order, hsize_t n, void *buf, size_t size, hid_t lapl_id),
    (loc_id, group_name, idx_type, order, n, buf, size, lapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Lexists, htri_t,
                     (hid_t loc_id, const char *name, hid_t lapl_id),
                     (loc_id, name, lapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5Lget_info, herr_t,
                     (hid_t loc_id, const char *name, H5L_info_t *linfo,
                      hid_t lapl_id),
                     (loc_id, name, linfo, lapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5Lget_info_by_idx, herr_t,
                     (hid_t loc_id, const char *group_name, H5_index_t idx_type,
                      H5_iter_order_t order, hsize_t n, H5L_info_t *linfo,
                      hid_t lapl_id),
                     (loc_id, group_name, idx_type, order, n, linfo, lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Lget_name_by_idx, ssize_t,
                     (hid_t loc_id, const char *group_name, H5_index_t idx_type,
                      H5_iter_order_t order, hsize_t n, char *name, size_t size,
                      hid_t lapl_id),
                     (loc_id, group_name, idx_type, order, n, name, size,
                      lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5Literate, herr_t,
                     (hid_t grp_id, H5_index_t idx_type, H5_iter_order_t order,
                      hsize_t *idx, H5L_iterate_t op, void *op_data),
                     (grp_id, idx_type, order, idx, op, op_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5Literate_by_name, herr_t,
                     (hid_t loc_id, const char *group_name, H5_index_t idx_type,
                      H5_iter_order_t order, hsize_t *idx, H5L_iterate_t op,
                      void *op_data, hid_t lapl_id),
                     (loc_id, group_name, idx_type, order, idx, op, op_data,
                      lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5Lvisit, herr_t,
                     (hid_t grp_id, H5_index_t idx_type, H5_iter_order_t order,
                      H5L_iterate_t op, void *op_data),
                     (grp_id, idx_type, order, op, op_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(
    H5Lvisit_by_name, herr_t,
    (hid_t loc_id, const char *group_name, H5_index_t idx_type,
     H5_iter_order_t order, H5L_iterate_t op, void *op_data, hid_t lapl_id),
    (loc_id, group_name, idx_type, order, op, op_data, lapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Lcreate_ud, herr_t,
                     (hid_t link_loc_id, const char *link_name,
                      H5L_type_t link_type, const void *udata,
                      size_t udata_size, hid_t lcpl_id, hid_t lapl_id),
                     (link_loc_id, link_name, link_type, udata, udata_size,
                      lcpl_id, lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Lregister, herr_t, (const H5L_class_t *cls), (cls),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Lunregister, herr_t, (H5L_type_t id), (id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Lis_registered, htri_t, (H5L_type_t id), (id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Lunpack_elink_val, herr_t,
                     (const void *ext_linkval, size_t link_size,
                      unsigned int *flags, const char **filename,
                      const char **obj_path),
                     (ext_linkval, link_size, flags, filename, obj_path),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Lcreate_external, herr_t,
                     (const char *file_name, const char *obj_name,
                      hid_t link_loc_id, const char *link_name, hid_t lcpl_id,
                      hid_t lapl_id),
                     (file_name, obj_name, link_loc_id, link_name, lcpl_id,
                      lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Oopen, hid_t,
                     (hid_t loc_id, const char *name, hid_t lapl_id),
                     (loc_id, name, lapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Oopen_by_addr, hid_t, (hid_t loc_id, haddr_t addr),
                     (loc_id, addr), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Oopen_by_idx, hid_t,
                     (hid_t loc_id, const char *group_name, H5_index_t idx_type,
                      H5_iter_order_t order, hsize_t n, hid_t lapl_id),
                     (loc_id, group_name, idx_type, order, n, lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Oexists_by_name, htri_t,
                     (hid_t loc_id, const char *name, hid_t lapl_id),
                     (loc_id, name, lapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5Oget_info, herr_t, (hid_t loc_id, H5O_info_t *oinfo),
                     (loc_id, oinfo), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5Oget_info_by_name, herr_t,
                     (hid_t loc_id, const char *name, H5O_info_t *oinfo,
                      hid_t lapl_id),
                     (loc_id, name, oinfo, lapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5Oget_info_by_idx, herr_t,
                     (hid_t loc_id, const char *group_name, H5_index_t idx_type,
                      H5_iter_order_t order, hsize_t n, H5O_info_t *oinfo,
                      hid_t lapl_id),
                     (loc_id, group_name, idx_type, order, n, oinfo, lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Olink, herr_t,
                     (hid_t obj_id, hid_t new_loc_id, const char *new_name,
                      hid_t lcpl_id, hid_t lapl_id),
                     (obj_id, new_loc_id, new_name, lcpl_id, lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Oincr_refcount, herr_t, (hid_t object_id), (object_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Odecr_refcount, herr_t, (hid_t object_id), (object_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Ocopy, herr_t,
                     (hid_t src_loc_id, const char *src_name, hid_t dst_loc_id,
                      const char *dst_name, hid_t ocpypl_id, hid_t lcpl_id),
                     (src_loc_id, src_name, dst_loc_id, dst_name, ocpypl_id,
                      lcpl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Oset_comment, herr_t,
                     (hid_t obj_id, const char *comment), (obj_id, comment),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Oset_comment_by_name, herr_t,
                     (hid_t loc_id, const char *name, const char *comment,
                      hid_t lapl_id),
                     (loc_id, name, comment, lapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Oget_comment, ssize_t,
                     (hid_t obj_id, char *comment, size_t bufsize),
                     (obj_id, comment, bufsize), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Oget_comment_by_name, ssize_t,
                     (hid_t loc_id, const char *name, char *comment,
                      size_t bufsize, hid_t lapl_id),
                     (loc_id, name, comment, bufsize, lapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5Ovisit, herr_t,
                     (hid_t obj_id, H5_index_t idx_type, H5_iter_order_t order,
                      H5O_iterate_t op, void *op_data),
                     (obj_id, idx_type, order, op, op_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5Ovisit_by_name, herr_t,
                     (hid_t loc_id, const char *obj_name, H5_index_t idx_type,
                      H5_iter_order_t order, H5O_iterate_t op, void *op_data,
                      hid_t lapl_id),
                     (loc_id, obj_name, idx_type, order, op, op_data, lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Oclose, herr_t, (hid_t object_id), (object_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Aclose, herr_t, (hid_t attr_id), (attr_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Acreate2, hid_t,
                     (hid_t loc_id, const char *attr_name, hid_t type_id,
                      hid_t space_id, hid_t acpl_id, hid_t aapl_id),
                     (loc_id, attr_name, type_id, space_id, acpl_id, aapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Acreate_by_name, hid_t,
                     (hid_t loc_id, const char *obj_name, const char *attr_name,
                      hid_t type_id, hid_t space_id, hid_t acpl_id,
                      hid_t aapl_id, hid_t lapl_id),
                     (loc_id, obj_name, attr_name, type_id, space_id, acpl_id,
                      aapl_id, lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Adelete, herr_t, (hid_t loc_id, const char *attr_name),
                     (loc_id, attr_name), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Adelete_by_idx, herr_t,
                     (hid_t loc_id, const char *obj_name, H5_index_t idx_type,
                      H5_iter_order_t order, hsize_t n, hid_t lapl_id),
                     (loc_id, obj_name, idx_type, order, n, lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Adelete_by_name, herr_t,
                     (hid_t loc_id, const char *obj_name, const char *attr_name,
                      hid_t lapl_id),
                     (loc_id, obj_name, attr_name, lapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Aexists, htri_t, (hid_t obj_id, const char *attr_name),
                     (obj_id, attr_name), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Aexists_by_name, htri_t,
                     (hid_t obj_id, const char *obj_name, const char *attr_name,
                      hid_t lapl_id),
                     (obj_id, obj_name, attr_name, lapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Aget_create_plist, hid_t, (hid_t attr_id), (attr_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Aget_info, herr_t, (hid_t attr_id, H5A_info_t *ainfo),
                     (attr_id, ainfo), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Aget_info_by_idx, herr_t,
                     (hid_t loc_id, const char *obj_name, H5_index_t idx_type,
                      H5_iter_order_t order, hsize_t n, H5A_info_t *ainfo,
                      hid_t lapl_id),
                     (loc_id, obj_name, idx_type, order, n, ainfo, lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Aget_info_by_name, herr_t,
                     (hid_t loc_id, const char *obj_name, const char *attr_name,
                      H5A_info_t *ainfo, hid_t lapl_id),
                     (loc_id, obj_name, attr_name, ainfo, lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Aget_name, ssize_t,
                     (hid_t attr_id, size_t buf_size, char *buf),
                     (attr_id, buf_size, buf), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(
    H5Aget_name_by_idx, ssize_t,
    (hid_t loc_id, const char *obj_name, H5_index_t idx_type,
     H5_iter_order_t order, hsize_t n, char *name, size_t size, hid_t lapl_id),
    (loc_id, obj_name, idx_type, order, n, name, size, lapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Aget_space, hid_t, (hid_t attr_id), (attr_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Aget_storage_size, hsize_t, (hid_t attr_id), (attr_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Aget_type, hid_t, (hid_t attr_id), (attr_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Aiterate2, herr_t,
                     (hid_t loc_id, H5_index_t idx_type, H5_iter_order_t order,
                      hsize_t *idx, H5A_operator2_t op, void *op_data),
                     (loc_id, idx_type, order, idx, op, op_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Aiterate_by_name, herr_t,
                     (hid_t loc_id, const char *obj_name, H5_index_t idx_type,
                      H5_iter_order_t order, hsize_t *idx, H5A_operator2_t op,
                      void *op_data, hid_t lapl_id),
                     (loc_id, obj_name, idx_type, order, idx, op, op_data,
                      lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Aopen, hid_t,
                     (hid_t obj_id, const char *attr_name, hid_t aapl_id),
                     (obj_id, attr_name, aapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Aopen_by_idx, hid_t,
                     (hid_t loc_id, const char *obj_name, H5_index_t idx_type,
                      H5_iter_order_t order, hsize_t n, hid_t aapl_id,
                      hid_t lapl_id),
                     (loc_id, obj_name, idx_type, order, n, aapl_id, lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Aopen_by_name, hid_t,
                     (hid_t loc_id, const char *obj_name, const char *attr_name,
                      hid_t aapl_id, hid_t lapl_id),
                     (loc_id, obj_name, attr_name, aapl_id, lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Aread, herr_t, (hid_t attr_id, hid_t type_id, void *buf),
                     (attr_id, type_id, buf), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Arename, herr_t,
                     (hid_t loc_id, const char *old_name, const char *new_name),
                     (loc_id, old_name, new_name), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Awrite, herr_t,
                     (hid_t attr_id, hid_t type_id, const void *buf),
                     (attr_id, type_id, buf), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Arename_by_name, herr_t,
                     (hid_t loc_id, const char *obj_name,
                      const char *old_attr_name, const char *new_attr_name,
                      hid_t lapl_id),
                     (loc_id, obj_name, old_attr_name, new_attr_name, lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Acreate1, hid_t,
                     (hid_t loc_id, const char *name, hid_t type_id,
                      hid_t space_id, hid_t acpl_id),
                     (loc_id, name, type_id, space_id, acpl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Aget_num_attrs, int, (hid_t loc_id), (loc_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Aiterate1, herr_t,
                     (hid_t loc_id, unsigned int *idx, H5A_operator1_t op,
                      void *op_data),
                     (loc_id, idx, op, op_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Aopen_idx, hid_t, (hid_t loc_id, unsigned int idx),
                     (loc_id, idx), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Aopen_name, hid_t, (hid_t loc_id, const char *name),
                     (loc_id, name), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(
    H5Dcreate2, hid_t,
    (hid_t loc_id, const char *name, hid_t type_id, hid_t space_id,
     hid_t lcpl_id, hid_t dcpl_id, hid_t dapl_id),
    (loc_id, name, type_id, space_id, lcpl_id, dcpl_id, dapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dcreate_anon, hid_t,
                     (hid_t loc_id, hid_t type_id, hid_t space_id,
                      hid_t dcpl_id, hid_t dapl_id),
                     (loc_id, type_id, space_id, dcpl_id, dapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dopen2, hid_t,
                     (hid_t loc_id, const char *name, hid_t dapl_id),
                     (loc_id, name, dapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dget_space, hid_t, (hid_t dset_id), (dset_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dget_space_status, herr_t,
                     (hid_t dset_id, H5D_space_status_t *allocation),
                     (dset_id, allocation), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dget_type, hid_t, (hid_t dset_id), (dset_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dget_create_plist, hid_t, (hid_t dset_id), (dset_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dget_access_plist, hid_t, (hid_t dset_id), (dset_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dget_storage_size, hsize_t, (hid_t dset_id), (dset_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dget_chunk_storage_size, herr_t,
                     (hid_t dset_id, const hsize_t *offset,
                      hsize_t *chunk_bytes),
                     (dset_id, offset, chunk_bytes), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dget_offset, haddr_t, (hid_t dset_id), (dset_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dread, herr_t,
                     (hid_t dset_id, hid_t mem_type_id, hid_t mem_space_id,
                      hid_t file_space_id, hid_t dxpl_id, void *buf),
                     (dset_id, mem_type_id, mem_space_id, file_space_id,
                      dxpl_id, buf),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dwrite, herr_t,
                     (hid_t dset_id, hid_t mem_type_id, hid_t mem_space_id,
                      hid_t file_space_id, hid_t dxpl_id, const void *buf),
                     (dset_id, mem_type_id, mem_space_id, file_space_id,
                      dxpl_id, buf),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Diterate, herr_t,
                     (void *buf, hid_t type_id, hid_t space_id,
                      H5D_operator_t op, void *operator_data),
                     (buf, type_id, space_id, op, operator_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dvlen_reclaim, herr_t,
                     (hid_t type_id, hid_t space_id, hid_t dxpl_id, void *buf),
                     (type_id, space_id, dxpl_id, buf), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dvlen_get_buf_size, herr_t,
                     (hid_t dset_id, hid_t type_id, hid_t space_id,
                      hsize_t *size),
                     (dset_id, type_id, space_id, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dfill, herr_t,
                     (const void *fill, hid_t fill_type_id, void *buf,
                      hid_t buf_type_id, hid_t space_id),
                     (fill, fill_type_id, buf, buf_type_id, space_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dset_extent, herr_t,
                     (hid_t dset_id, const hsize_t size[]), (dset_id, size),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dscatter, herr_t,
                     (H5D_scatter_func_t op, void *op_data, hid_t type_id,
                      hid_t dst_space_id, void *dst_buf),
                     (op, op_data, type_id, dst_space_id, dst_buf),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dgather, herr_t,
                     (hid_t src_space_id, const void *src_buf, hid_t type_id,
                      size_t dst_buf_size, void *dst_buf, H5D_gather_func_t op,
                      void *op_data),
                     (src_space_id, src_buf, type_id, dst_buf_size, dst_buf, op,
                      op_data),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dclose, herr_t, (hid_t dset_id), (dset_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Ddebug, herr_t, (hid_t dset_id), (dset_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dcreate1, hid_t,
                     (hid_t loc_id, const char *name, hid_t type_id,
                      hid_t space_id, hid_t dcpl_id),
                     (loc_id, name, type_id, space_id, dcpl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dopen1, hid_t, (hid_t loc_id, const char *name),
                     (loc_id, name), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dextend, herr_t, (hid_t dset_id, const hsize_t size[]),
                     (dset_id, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Eregister_class, hid_t,
                     (const char *cls_name, const char *lib_name,
                      const char *version),
                     (cls_name, lib_name, version), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Eunregister_class, herr_t, (hid_t class_id), (class_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Eclose_msg, herr_t, (hid_t err_id), (err_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Ecreate_msg, hid_t,
                     (hid_t cls, H5E_type_t msg_type, const char *msg),
                     (cls, msg_type, msg), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Ecreate_stack, hid_t, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Eget_current_stack, hid_t, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Eclose_stack, herr_t, (hid_t stack_id), (stack_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Eget_class_name, ssize_t,
                     (hid_t class_id, char *name, size_t size),
                     (class_id, name, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Eset_current_stack, herr_t, (hid_t err_stack_id),
                     (err_stack_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Epush2, herr_t,
                     (hid_t err_stack, const char *file, const char *func,
                      unsigned int line, hid_t cls_id, hid_t maj_id,
                      hid_t min_id, const char *msg),
                     (err_stack, file, func, line, cls_id, maj_id, min_id, msg),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Epop, herr_t, (hid_t err_stack, size_t count),
                     (err_stack, count), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Eprint2, herr_t, (hid_t err_stack, FILE *stream),
                     (err_stack, stream), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Ewalk2, herr_t,
                     (hid_t err_stack, H5E_direction_t direction,
                      H5E_walk2_t func, void *client_data),
                     (err_stack, direction, func, client_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Eget_auto2, herr_t,
                     (hid_t estack_id, H5E_auto2_t *func, void **client_data),
                     (estack_id, func, client_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Eset_auto2, herr_t,
                     (hid_t estack_id, H5E_auto2_t func, void *client_data),
                     (estack_id, func, client_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Eclear2, herr_t, (hid_t err_stack), (err_stack),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Eauto_is_v2, herr_t,
                     (hid_t err_stack, unsigned int *is_stack),
                     (err_stack, is_stack), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Eget_msg, ssize_t,
                     (hid_t msg_id, H5E_type_t *type, char *msg, size_t size),
                     (msg_id, type, msg, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Eget_num, ssize_t, (hid_t error_stack_id),
                     (error_stack_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Eclear1, herr_t, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Eget_auto1, herr_t,
                     (H5E_auto1_t * func, void **client_data),
                     (func, client_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Epush1, herr_t,
                     (const char *file, const char *func, unsigned int line,
                      H5E_major_t maj, H5E_minor_t min, const char *str),
                     (file, func, line, maj, min, str), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Eprint1, herr_t, (FILE * stream), (stream),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Eset_auto1, herr_t,
                     (H5E_auto1_t func, void *client_data), (func, client_data),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Ewalk1, herr_t,
                     (H5E_direction_t direction, H5E_walk1_t func,
                      void *client_data),
                     (direction, func, client_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Eget_major, char *, (H5E_major_t maj), (maj),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Eget_minor, char *, (H5E_minor_t min), (min),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5Fis_hdf5, htri_t, (const char *filename), (filename),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fcreate, hid_t,
                     (const char *filename, unsigned int flags, hid_t fcpl_id,
                      hid_t fapl_id),
                     (filename, flags, fcpl_id, fapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fopen, hid_t,
                     (const char *filename, unsigned int flags, hid_t fapl_id),
                     (filename, flags, fapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Freopen, hid_t, (hid_t file_id), (file_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fflush, herr_t, (hid_t object_id, H5F_scope_t scope),
                     (object_id, scope), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fclose, herr_t, (hid_t file_id), (file_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fget_create_plist, hid_t, (hid_t file_id), (file_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fget_access_plist, hid_t, (hid_t file_id), (file_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fget_intent, herr_t,
                     (hid_t file_id, unsigned int *intent), (file_id, intent),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fget_obj_count, ssize_t,
                     (hid_t file_id, unsigned int types), (file_id, types),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fget_obj_ids, ssize_t,
                     (hid_t file_id, unsigned int types, size_t max_objs,
                      hid_t *obj_id_list),
                     (file_id, types, max_objs, obj_id_list), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fget_vfd_handle, herr_t,
                     (hid_t file_id, hid_t fapl, void **file_handle),
                     (file_id, fapl, file_handle), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fmount, herr_t,
                     (hid_t loc, const char *name, hid_t child, hid_t plist),
                     (loc, name, child, plist), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Funmount, herr_t, (hid_t loc, const char *name),
                     (loc, name), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fget_freespace, hssize_t, (hid_t file_id), (file_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fget_filesize, herr_t, (hid_t file_id, hsize_t *size),
                     (file_id, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fget_file_image, ssize_t,
                     (hid_t file_id, void *buf_ptr, size_t buf_len),
                     (file_id, buf_ptr, buf_len), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fget_mdc_config, herr_t,
                     (hid_t file_id, H5AC_cache_config_t *config_ptr),
                     (file_id, config_ptr), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101200
GOTCHA_MACRO_TYPEDEF(H5Fset_mdc_config, herr_t,
                     (hid_t file_id, H5AC_cache_config_t *config_ptr),
                     (file_id, config_ptr), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fget_mdc_hit_rate, herr_t,
                     (hid_t file_id, double *hit_rate_ptr),
                     (file_id, hit_rate_ptr), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fget_mdc_size, herr_t,
                     (hid_t file_id, size_t *max_size_ptr,
                      size_t *min_clean_size_ptr, size_t *cur_size_ptr,
                      int *cur_num_entries_ptr),
                     (file_id, max_size_ptr, min_clean_size_ptr, cur_size_ptr,
                      cur_num_entries_ptr),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Freset_mdc_hit_rate_stats, herr_t, (hid_t file_id),
                     (file_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fget_name, ssize_t,
                     (hid_t obj_id, char *name, size_t size),
                     (obj_id, name, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5Fget_info, herr_t, (hid_t obj_id, H5F_info_t *file_info),
                     (obj_id, file_info), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fclear_elink_file_cache, herr_t, (hid_t file_id),
                     (file_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fset_mpi_atomicity, herr_t,
                     (hid_t file_id, hbool_t flag), (file_id, flag),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fget_mpi_atomicity, herr_t,
                     (hid_t file_id, hbool_t *flag), (file_id, flag),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FDregister, hid_t, (const H5FD_class_t *cls), (cls),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FDunregister, herr_t, (hid_t driver_id), (driver_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FDopen, H5FD_t *,
                     (const char *name, unsigned int flags, hid_t fapl_id,
                      haddr_t maxaddr),
                     (name, flags, fapl_id, maxaddr), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FDclose, herr_t, (H5FD_t * file), (file), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FDcmp, int, (const H5FD_t *f1, const H5FD_t *f2),
                     (f1, f2), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FDquery, int, (const H5FD_t *f, unsigned long *flags),
                     (f, flags), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FDalloc, haddr_t,
                     (H5FD_t * file, H5FD_mem_t type, hid_t dxpl_id,
                      hsize_t size),
                     (file, type, dxpl_id, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FDfree, herr_t,
                     (H5FD_t * file, H5FD_mem_t type, hid_t dxpl_id,
                      haddr_t addr, hsize_t size),
                     (file, type, dxpl_id, addr, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FDget_eoa, haddr_t, (H5FD_t * file, H5FD_mem_t type),
                     (file, type), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FDset_eoa, herr_t,
                     (H5FD_t * file, H5FD_mem_t type, haddr_t eoa),
                     (file, type, eoa), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5FDget_eof, haddr_t, (H5FD_t * file), (file),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FDget_vfd_handle, herr_t,
                     (H5FD_t * file, hid_t fapl, void **file_handle),
                     (file, fapl, file_handle), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FDread, herr_t,
                     (H5FD_t * file, H5FD_mem_t type, hid_t dxpl_id,
                      haddr_t addr, size_t size, void *buf),
                     (file, type, dxpl_id, addr, size, buf), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FDwrite, herr_t,
                     (H5FD_t * file, H5FD_mem_t type, hid_t dxpl_id,
                      haddr_t addr, size_t size, const void *buf),
                     (file, type, dxpl_id, addr, size, buf), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5FDflush, herr_t,
                     (H5FD_t * file, hid_t dxpl_id, unsigned int closing),
                     (file, dxpl_id, closing), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FDtruncate, herr_t,
                     (H5FD_t * file, hid_t dxpl_id, hbool_t closing),
                     (file, dxpl_id, closing), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FDdriver_query, herr_t,
                     (hid_t driver_id, unsigned long *flags),
                     (driver_id, flags), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Gcreate2, hid_t,
                     (hid_t loc_id, const char *name, hid_t lcpl_id,
                      hid_t gcpl_id, hid_t gapl_id),
                     (loc_id, name, lcpl_id, gcpl_id, gapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Gcreate_anon, hid_t,
                     (hid_t loc_id, hid_t gcpl_id, hid_t gapl_id),
                     (loc_id, gcpl_id, gapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Gopen2, hid_t,
                     (hid_t loc_id, const char *name, hid_t gapl_id),
                     (loc_id, name, gapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Gget_create_plist, hid_t, (hid_t group_id), (group_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Gget_info, herr_t, (hid_t loc_id, H5G_info_t *ginfo),
                     (loc_id, ginfo), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Gget_info_by_name, herr_t,
                     (hid_t loc_id, const char *name, H5G_info_t *ginfo,
                      hid_t lapl_id),
                     (loc_id, name, ginfo, lapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Gget_info_by_idx, herr_t,
                     (hid_t loc_id, const char *group_name, H5_index_t idx_type,
                      H5_iter_order_t order, hsize_t n, H5G_info_t *ginfo,
                      hid_t lapl_id),
                     (loc_id, group_name, idx_type, order, n, ginfo, lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Gflush, herr_t, (hid_t group_id), (group_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Grefresh, herr_t, (hid_t group_id), (group_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Gclose, herr_t, (hid_t group_id), (group_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Gcreate1, hid_t,
                     (hid_t loc_id, const char *name, size_t size_hint),
                     (loc_id, name, size_hint), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Gopen1, hid_t, (hid_t loc_id, const char *name),
                     (loc_id, name), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Glink, herr_t,
                     (hid_t cur_loc_id, H5L_type_t type, const char *cur_name,
                      const char *new_name),
                     (cur_loc_id, type, cur_name, new_name), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Glink2, herr_t,
                     (hid_t cur_loc_id, const char *cur_name, H5L_type_t type,
                      hid_t new_loc_id, const char *new_name),
                     (cur_loc_id, cur_name, type, new_loc_id, new_name),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Gmove, herr_t,
                     (hid_t src_loc_id, const char *src_name,
                      const char *dst_name),
                     (src_loc_id, src_name, dst_name), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Gmove2, herr_t,
                     (hid_t src_loc_id, const char *src_name, hid_t dst_loc_id,
                      const char *dst_name),
                     (src_loc_id, src_name, dst_loc_id, dst_name),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Gunlink, herr_t, (hid_t loc_id, const char *name),
                     (loc_id, name), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Gget_linkval, herr_t,
                     (hid_t loc_id, const char *name, size_t size, char *buf),
                     (loc_id, name, size, buf), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Gset_comment, herr_t,
                     (hid_t loc_id, const char *name, const char *comment),
                     (loc_id, name, comment), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Gget_comment, int,
                     (hid_t loc_id, const char *name, size_t bufsize,
                      char *buf),
                     (loc_id, name, bufsize, buf), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Giterate, herr_t,
                     (hid_t loc_id, const char *name, int *idx,
                      H5G_iterate_t op, void *op_data),
                     (loc_id, name, idx, op, op_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Gget_num_objs, herr_t, (hid_t loc_id, hsize_t *num_objs),
                     (loc_id, num_objs), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Gget_objinfo, herr_t,
                     (hid_t loc_id, const char *name, hbool_t follow_link,
                      H5G_stat_t *statbuf),
                     (loc_id, name, follow_link, statbuf), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Gget_objname_by_idx, ssize_t,
                     (hid_t loc_id, hsize_t idx, char *name, size_t size),
                     (loc_id, idx, name, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Gget_objtype_by_idx, H5G_obj_t,
                     (hid_t loc_id, hsize_t idx), (loc_id, idx), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Zregister, herr_t, (const void *cls), (cls),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Zunregister, herr_t, (H5Z_filter_t id), (id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Zfilter_avail, htri_t, (H5Z_filter_t id), (id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Zget_filter_info, herr_t,
                     (H5Z_filter_t filter, unsigned int *filter_config_flags),
                     (filter, filter_config_flags), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pclose, herr_t, (hid_t plist_id), (plist_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pclose_class, herr_t, (hid_t plist_id), (plist_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pcopy, hid_t, (hid_t plist_id), (plist_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pcopy_prop, herr_t,
                     (hid_t dst_id, hid_t src_id, const char *name),
                     (dst_id, src_id, name), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pcreate, hid_t, (hid_t cls_id), (cls_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pcreate_class, hid_t,
                     (hid_t parent, const char *name,
                      H5P_cls_create_func_t create, void *create_data,
                      H5P_cls_copy_func_t copy, void *copy_data,
                      H5P_cls_close_func_t close, void *close_data),
                     (parent, name, create, create_data, copy, copy_data, close,
                      close_data),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pequal, htri_t, (hid_t id1, hid_t id2), (id1, id2),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pexist, htri_t, (hid_t plist_id, const char *name),
                     (plist_id, name), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget, herr_t,
                     (hid_t plist_id, const char *name, void *value),
                     (plist_id, name, value), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_class, hid_t, (hid_t plist_id), (plist_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_class_name, char *, (hid_t pclass_id), (pclass_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_class_parent, hid_t, (hid_t pclass_id), (pclass_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_nprops, herr_t, (hid_t id, size_t *nprops),
                     (id, nprops), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_size, herr_t,
                     (hid_t id, const char *name, size_t *size),
                     (id, name, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pinsert2, herr_t,
                     (hid_t plist_id, const char *name, size_t size,
                      void *value, H5P_prp_set_func_t set,
                      H5P_prp_get_func_t get, H5P_prp_delete_func_t prp_del,
                      H5P_prp_copy_func_t copy, H5P_prp_compare_func_t compare,
                      H5P_prp_close_func_t close),
                     (plist_id, name, size, value, set, get, prp_del, copy,
                      compare, close),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pisa_class, htri_t, (hid_t plist_id, hid_t pclass_id),
                     (plist_id, pclass_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Piterate, int,
                     (hid_t id, int *idx, H5P_iterate_t iter_func,
                      void *iter_data),
                     (id, idx, iter_func, iter_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pregister2, herr_t,
                     (hid_t cls_id, const char *name, size_t size,
                      void *def_value, H5P_prp_create_func_t create,
                      H5P_prp_set_func_t set, H5P_prp_get_func_t get,
                      H5P_prp_delete_func_t prp_del, H5P_prp_copy_func_t copy,
                      H5P_prp_compare_func_t compare,
                      H5P_prp_close_func_t close),
                     (cls_id, name, size, def_value, create, set, get, prp_del,
                      copy, compare, close),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Premove, herr_t, (hid_t plist_id, const char *name),
                     (plist_id, name), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5Pset, herr_t,
                     (hid_t plist_id, const char *name, void *value),
                     (plist_id, name, value), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Punregister, herr_t, (hid_t pclass_id, const char *name),
                     (pclass_id, name), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pall_filters_avail, htri_t, (hid_t plist_id), (plist_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_attr_creation_order, herr_t,
                     (hid_t plist_id, unsigned int *crt_order_flags),
                     (plist_id, crt_order_flags), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_attr_phase_change, herr_t,
                     (hid_t plist_id, unsigned int *max_compact,
                      unsigned int *min_dense),
                     (plist_id, max_compact, min_dense), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_filter2, H5Z_filter_t,
                     (hid_t plist_id, unsigned int idx, unsigned int *flags,
                      size_t *cd_nelmts, unsigned int cd_values[],
                      size_t namelen, char name[], unsigned int *filter_config),
                     (plist_id, idx, flags, cd_nelmts, cd_values, namelen, name,
                      filter_config),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_filter_by_id2, herr_t,
                     (hid_t plist_id, H5Z_filter_t filter_id,
                      unsigned int *flags, size_t *cd_nelmts,
                      unsigned int cd_values[], size_t namelen, char name[],
                      unsigned int *filter_config),
                     (plist_id, filter_id, flags, cd_nelmts, cd_values, namelen,
                      name, filter_config),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_nfilters, int, (hid_t plist_id), (plist_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_obj_track_times, herr_t,
                     (hid_t plist_id, hbool_t *track_times),
                     (plist_id, track_times), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pmodify_filter, herr_t,
                     (hid_t plist_id, H5Z_filter_t filter, unsigned int flags,
                      size_t cd_nelmts, const unsigned int cd_values[]),
                     (plist_id, filter, flags, cd_nelmts, cd_values),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Premove_filter, herr_t,
                     (hid_t plist_id, H5Z_filter_t filter), (plist_id, filter),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_attr_creation_order, herr_t,
                     (hid_t plist_id, unsigned int crt_order_flags),
                     (plist_id, crt_order_flags), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_attr_phase_change, herr_t,
                     (hid_t plist_id, unsigned int max_compact,
                      unsigned int min_dense),
                     (plist_id, max_compact, min_dense), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_deflate, herr_t,
                     (hid_t plist_id, unsigned int level), (plist_id, level),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_filter, herr_t,
                     (hid_t plist_id, H5Z_filter_t filter, unsigned int flags,
                      size_t cd_nelmts, const unsigned int c_values[]),
                     (plist_id, filter, flags, cd_nelmts, c_values),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_fletcher32, herr_t, (hid_t plist_id), (plist_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_obj_track_times, herr_t,
                     (hid_t plist_id, hbool_t track_times),
                     (plist_id, track_times), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_istore_k, herr_t,
                     (hid_t plist_id, unsigned int *ik), (plist_id, ik),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_shared_mesg_index, herr_t,
                     (hid_t plist_id, unsigned int index_num,
                      unsigned int *mesg_type_flags,
                      unsigned int *min_mesg_size),
                     (plist_id, index_num, mesg_type_flags, min_mesg_size),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_shared_mesg_nindexes, herr_t,
                     (hid_t plist_id, unsigned int *nindexes),
                     (plist_id, nindexes), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_shared_mesg_phase_change, herr_t,
                     (hid_t plist_id, unsigned int *max_list,
                      unsigned int *min_btree),
                     (plist_id, max_list, min_btree), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_sizes, herr_t,
                     (hid_t plist_id, size_t *sizeof_addr, size_t *sizeof_size),
                     (plist_id, sizeof_addr, sizeof_size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_sym_k, herr_t,
                     (hid_t plist_id, unsigned int *ik, unsigned int *lk),
                     (plist_id, ik, lk), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_userblock, herr_t, (hid_t plist_id, hsize_t *size),
                     (plist_id, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_version, herr_t,
                     (hid_t plist_id, unsigned int *boot,
                      unsigned int *freelist, unsigned int *stab,
                      unsigned int *shhdr),
                     (plist_id, boot, freelist, stab, shhdr), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_istore_k, herr_t, (hid_t plist_id, unsigned int ik),
                     (plist_id, ik), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_shared_mesg_index, herr_t,
                     (hid_t plist_id, unsigned int index_num,
                      unsigned int mesg_type_flags, unsigned int min_mesg_size),
                     (plist_id, index_num, mesg_type_flags, min_mesg_size),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_shared_mesg_nindexes, herr_t,
                     (hid_t plist_id, unsigned int nindexes),
                     (plist_id, nindexes), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_shared_mesg_phase_change, herr_t,
                     (hid_t plist_id, unsigned int max_list,
                      unsigned int min_btree),
                     (plist_id, max_list, min_btree), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_sizes, herr_t,
                     (hid_t plist_id, size_t sizeof_addr, size_t sizeof_size),
                     (plist_id, sizeof_addr, sizeof_size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_sym_k, herr_t,
                     (hid_t plist_id, unsigned int ik, unsigned int lk),
                     (plist_id, ik, lk), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_userblock, herr_t, (hid_t plist_id, hsize_t size),
                     (plist_id, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_alignment, herr_t,
                     (hid_t fapl_id, hsize_t *threshold, hsize_t *alignment),
                     (fapl_id, threshold, alignment), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_cache, herr_t,
                     (hid_t plist_id, int *mdc_nelmts, size_t *rdcc_nslots,
                      size_t *rdcc_nbytes, double *rdcc_w0),
                     (plist_id, mdc_nelmts, rdcc_nslots, rdcc_nbytes, rdcc_w0),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_core_write_tracking, herr_t,
                     (hid_t fapl_id, hbool_t *is_enabled, size_t *page_size),
                     (fapl_id, is_enabled, page_size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_driver, hid_t, (hid_t plist_id), (plist_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5Pget_driver_info, void *, (hid_t plist_id), (plist_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_elink_file_cache_size, herr_t,
                     (hid_t plist_id, unsigned int *efc_size),
                     (plist_id, efc_size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_family_offset, herr_t,
                     (hid_t fapl_id, hsize_t *offset), (fapl_id, offset),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_fclose_degree, herr_t,
                     (hid_t fapl_id, H5F_close_degree_t *degree),
                     (fapl_id, degree), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_file_image, herr_t,
                     (hid_t fapl_id, void **buf_ptr_ptr, size_t *buf_len_ptr),
                     (fapl_id, buf_ptr_ptr, buf_len_ptr), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_file_image_callbacks, herr_t,
                     (hid_t fapl_id,
                      H5FD_file_image_callbacks_t *callbacks_ptr),
                     (fapl_id, callbacks_ptr), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_gc_references, herr_t,
                     (hid_t fapl_id, unsigned int *gc_ref), (fapl_id, gc_ref),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_libver_bounds, herr_t,
                     (hid_t plist_id, H5F_libver_t *low, H5F_libver_t *high),
                     (plist_id, low, high), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_mdc_config, herr_t,
                     (hid_t plist_id, H5AC_cache_config_t *config_ptr),
                     (plist_id, config_ptr), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_meta_block_size, herr_t,
                     (hid_t fapl_id, hsize_t *size), (fapl_id, size),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_multi_type, herr_t,
                     (hid_t fapl_id, H5FD_mem_t *type), (fapl_id, type),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_sieve_buf_size, herr_t,
                     (hid_t fapl_id, size_t *size), (fapl_id, size),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_small_data_block_size, herr_t,
                     (hid_t fapl_id, hsize_t *size), (fapl_id, size),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_alignment, herr_t,
                     (hid_t fapl_id, hsize_t threshold, hsize_t alignment),
                     (fapl_id, threshold, alignment), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_cache, herr_t,
                     (hid_t plist_id, int mdc_nelmts, size_t rdcc_nslots,
                      size_t rdcc_nbytes, double rdcc_w0),
                     (plist_id, mdc_nelmts, rdcc_nslots, rdcc_nbytes, rdcc_w0),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_core_write_tracking, herr_t,
                     (hid_t fapl_id, hbool_t is_enabled, size_t page_size),
                     (fapl_id, is_enabled, page_size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_driver, herr_t,
                     (hid_t plist_id, hid_t driver_id, const void *driver_info),
                     (plist_id, driver_id, driver_info), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_elink_file_cache_size, herr_t,
                     (hid_t plist_id, unsigned int efc_size),
                     (plist_id, efc_size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_family_offset, herr_t,
                     (hid_t fapl_id, hsize_t offset), (fapl_id, offset),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_fclose_degree, herr_t,
                     (hid_t fapl_id, H5F_close_degree_t degree),
                     (fapl_id, degree), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_file_image, herr_t,
                     (hid_t fapl_id, void *buf_ptr, size_t buf_len),
                     (fapl_id, buf_ptr, buf_len), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_file_image_callbacks, herr_t,
                     (hid_t fapl_id,
                      H5FD_file_image_callbacks_t *callbacks_ptr),
                     (fapl_id, callbacks_ptr), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_gc_references, herr_t,
                     (hid_t fapl_id, unsigned int gc_ref), (fapl_id, gc_ref),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_libver_bounds, herr_t,
                     (hid_t plist_id, H5F_libver_t low, H5F_libver_t high),
                     (plist_id, low, high), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_mdc_config, herr_t,
                     (hid_t plist_id, H5AC_cache_config_t *config_ptr),
                     (plist_id, config_ptr), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_meta_block_size, herr_t,
                     (hid_t fapl_id, hsize_t size), (fapl_id, size),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_multi_type, herr_t,
                     (hid_t fapl_id, H5FD_mem_t type), (fapl_id, type),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_sieve_buf_size, herr_t,
                     (hid_t fapl_id, size_t size), (fapl_id, size),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_small_data_block_size, herr_t,
                     (hid_t fapl_id, hsize_t size), (fapl_id, size),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pfill_value_defined, herr_t,
                     (hid_t plist, H5D_fill_value_t *status), (plist, status),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_alloc_time, herr_t,
                     (hid_t plist_id, H5D_alloc_time_t *alloc_time),
                     (plist_id, alloc_time), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_chunk, int,
                     (hid_t plist_id, int max_ndims, hsize_t dim[]),
                     (plist_id, max_ndims, dim), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_external, herr_t,
                     (hid_t plist_id, unsigned int idx, size_t name_size,
                      char *name, off_t *offset, hsize_t *size),
                     (plist_id, idx, name_size, name, offset, size),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_external_count, int, (hid_t plist_id), (plist_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_fill_time, herr_t,
                     (hid_t plist_id, H5D_fill_time_t *fill_time),
                     (plist_id, fill_time), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_fill_value, herr_t,
                     (hid_t plist_id, hid_t type_id, void *value),
                     (plist_id, type_id, value), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_layout, H5D_layout_t, (hid_t plist_id), (plist_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_alloc_time, herr_t,
                     (hid_t plist_id, H5D_alloc_time_t alloc_time),
                     (plist_id, alloc_time), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_chunk, herr_t,
                     (hid_t plist_id, int ndims, const hsize_t dim[]),
                     (plist_id, ndims, dim), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_external, herr_t,
                     (hid_t plist_id, const char *name, off_t offset,
                      hsize_t size),
                     (plist_id, name, offset, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_fill_time, herr_t,
                     (hid_t plist_id, H5D_fill_time_t fill_time),
                     (plist_id, fill_time), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_fill_value, herr_t,
                     (hid_t plist_id, hid_t type_id, const void *value),
                     (plist_id, type_id, value), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_shuffle, herr_t, (hid_t plist_id), (plist_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_layout, herr_t,
                     (hid_t plist_id, H5D_layout_t layout), (plist_id, layout),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_nbit, herr_t, (hid_t plist_id), (plist_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_scaleoffset, herr_t,
                     (hid_t plist_id, H5Z_SO_scale_type_t scale_type,
                      int scale_factor),
                     (plist_id, scale_type, scale_factor), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_szip, herr_t,
                     (hid_t plist_id, unsigned int options_mask,
                      unsigned int pixels_per_block),
                     (plist_id, options_mask, pixels_per_block), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_chunk_cache, herr_t,
                     (hid_t dapl_id, size_t *rdcc_nslots, size_t *rdcc_nbytes,
                      double *rdcc_w0),
                     (dapl_id, rdcc_nslots, rdcc_nbytes, rdcc_w0),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_efile_prefix, ssize_t,
                     (hid_t dapl_id, char *prefix, size_t size),
                     (dapl_id, prefix, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_chunk_cache, herr_t,
                     (hid_t dapl_id, size_t rdcc_nslots, size_t rdcc_nbytes,
                      double rdcc_w0),
                     (dapl_id, rdcc_nslots, rdcc_nbytes, rdcc_w0),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_efile_prefix, herr_t,
                     (hid_t dapl_id, const char *prefix), (dapl_id, prefix),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_btree_ratios, herr_t,
                     (hid_t plist_id, double *left, double *middle,
                      double *right),
                     (plist_id, left, middle, right), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_buffer, size_t,
                     (hid_t plist_id, void **tconv, void **bkg),
                     (plist_id, tconv, bkg), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_data_transform, ssize_t,
                     (hid_t plist_id, char *expression, size_t size),
                     (plist_id, expression, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_edc_check, H5Z_EDC_t, (hid_t plist_id), (plist_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_hyper_vector_size, herr_t,
                     (hid_t fapl_id, size_t *size), (fapl_id, size),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_preserve, int, (hid_t plist_id), (plist_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_type_conv_cb, herr_t,
                     (hid_t dxpl_id, H5T_conv_except_func_t *op,
                      void **operate_data),
                     (dxpl_id, op, operate_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_vlen_mem_manager, herr_t,
                     (hid_t plist_id, H5MM_allocate_t *alloc_func,
                      void **alloc_info, H5MM_free_t *free_func,
                      void **free_info),
                     (plist_id, alloc_func, alloc_info, free_func, free_info),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_btree_ratios, herr_t,
                     (hid_t plist_id, double left, double middle, double right),
                     (plist_id, left, middle, right), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_buffer, herr_t,
                     (hid_t plist_id, size_t size, void *tconv, void *bkg),
                     (plist_id, size, tconv, bkg), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_data_transform, herr_t,
                     (hid_t plist_id, const char *expression),
                     (plist_id, expression), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_edc_check, herr_t,
                     (hid_t plist_id, H5Z_EDC_t check), (plist_id, check),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_filter_callback, herr_t,
                     (hid_t plist_id, H5Z_filter_func_t func, void *op_data),
                     (plist_id, func, op_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_hyper_vector_size, herr_t,
                     (hid_t plist_id, size_t size), (plist_id, size),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_preserve, herr_t, (hid_t plist_id, hbool_t status),
                     (plist_id, status), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_type_conv_cb, herr_t,
                     (hid_t dxpl_id, H5T_conv_except_func_t op,
                      void *operate_data),
                     (dxpl_id, op, operate_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_vlen_mem_manager, herr_t,
                     (hid_t plist_id, H5MM_allocate_t alloc_func,
                      void *alloc_info, H5MM_free_t free_func, void *free_info),
                     (plist_id, alloc_func, alloc_info, free_func, free_info),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_mpio_actual_chunk_opt_mode, herr_t,
                     (hid_t plist_id,
                      H5D_mpio_actual_chunk_opt_mode_t *actual_chunk_opt_mode),
                     (plist_id, actual_chunk_opt_mode), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_mpio_actual_io_mode, herr_t,
                     (hid_t plist_id,
                      H5D_mpio_actual_io_mode_t *actual_io_mode),
                     (plist_id, actual_io_mode), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_mpio_no_collective_cause, herr_t,
                     (hid_t plist_id, uint32_t *local_no_collective_cause,
                      uint32_t *global_no_collective_cause),
                     (plist_id, local_no_collective_cause,
                      global_no_collective_cause),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_create_intermediate_group, herr_t,
                     (hid_t plist_id, unsigned int *crt_intmd),
                     (plist_id, crt_intmd), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_create_intermediate_group, herr_t,
                     (hid_t plist_id, unsigned int crt_intmd),
                     (plist_id, crt_intmd), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_est_link_info, herr_t,
                     (hid_t plist_id, unsigned int *est_num_entries,
                      unsigned int *est_name_len),
                     (plist_id, est_num_entries, est_name_len), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_link_creation_order, herr_t,
                     (hid_t plist_id, unsigned int *crt_order_flags),
                     (plist_id, crt_order_flags), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_link_phase_change, herr_t,
                     (hid_t plist_id, unsigned int *max_compact,
                      unsigned int *min_dense),
                     (plist_id, max_compact, min_dense), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_local_heap_size_hint, herr_t,
                     (hid_t plist_id, size_t *size_hint), (plist_id, size_hint),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_est_link_info, herr_t,
                     (hid_t plist_id, unsigned int est_num_entries,
                      unsigned int est_name_len),
                     (plist_id, est_num_entries, est_name_len), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_link_creation_order, herr_t,
                     (hid_t plist_id, unsigned int crt_order_flags),
                     (plist_id, crt_order_flags), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_link_phase_change, herr_t,
                     (hid_t plist_id, unsigned int max_compact,
                      unsigned int min_dense),
                     (plist_id, max_compact, min_dense), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_local_heap_size_hint, herr_t,
                     (hid_t plist_id, size_t size_hint), (plist_id, size_hint),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_char_encoding, herr_t,
                     (hid_t plist_id, H5T_cset_t *encoding),
                     (plist_id, encoding), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_char_encoding, herr_t,
                     (hid_t plist_id, H5T_cset_t encoding),
                     (plist_id, encoding), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_elink_acc_flags, herr_t,
                     (hid_t lapl_id, unsigned int *flags), (lapl_id, flags),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_elink_cb, herr_t,
                     (hid_t lapl_id, H5L_elink_traverse_t *func,
                      void **op_data),
                     (lapl_id, func, op_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_elink_fapl, hid_t, (hid_t lapl_id), (lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_elink_prefix, ssize_t,
                     (hid_t plist_id, char *prefix, size_t size),
                     (plist_id, prefix, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_nlinks, herr_t, (hid_t plist_id, size_t *nlinks),
                     (plist_id, nlinks), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_elink_acc_flags, herr_t,
                     (hid_t lapl_id, unsigned int flags), (lapl_id, flags),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_elink_cb, herr_t,
                     (hid_t lapl_id, H5L_elink_traverse_t func, void *op_data),
                     (lapl_id, func, op_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_elink_fapl, herr_t, (hid_t lapl_id, hid_t fapl_id),
                     (lapl_id, fapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_elink_prefix, herr_t,
                     (hid_t plist_id, const char *prefix), (plist_id, prefix),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_nlinks, herr_t, (hid_t plist_id, size_t nlinks),
                     (plist_id, nlinks), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Padd_merge_committed_dtype_path, herr_t,
                     (hid_t plist_id, const char *path), (plist_id, path),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pfree_merge_committed_dtype_paths, herr_t,
                     (hid_t plist_id), (plist_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_copy_object, herr_t,
                     (hid_t plist_id, unsigned int *copy_options),
                     (plist_id, copy_options), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_mcdt_search_cb, herr_t,
                     (hid_t plist_id, H5O_mcdt_search_cb_t *func,
                      void **op_data),
                     (plist_id, func, op_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_copy_object, herr_t,
                     (hid_t plist_id, unsigned int copy_options),
                     (plist_id, copy_options), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_mcdt_search_cb, herr_t,
                     (hid_t plist_id, H5O_mcdt_search_cb_t func, void *op_data),
                     (plist_id, func, op_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pregister1, herr_t,
                     (hid_t cls_id, const char *name, size_t size,
                      void *def_value, H5P_prp_create_func_t prp_create,
                      H5P_prp_set_func_t prp_set, H5P_prp_get_func_t prp_get,
                      H5P_prp_delete_func_t prp_del,
                      H5P_prp_copy_func_t prp_copy,
                      H5P_prp_close_func_t prp_close),
                     (cls_id, name, size, def_value, prp_create, prp_set,
                      prp_get, prp_del, prp_copy, prp_close),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pinsert1, herr_t,
                     (hid_t plist_id, const char *name, size_t size,
                      void *value, H5P_prp_set_func_t prp_set,
                      H5P_prp_get_func_t prp_get,
                      H5P_prp_delete_func_t prp_delete,
                      H5P_prp_copy_func_t prp_copy,
                      H5P_prp_close_func_t prp_close),
                     (plist_id, name, size, value, prp_set, prp_get, prp_delete,
                      prp_copy, prp_close),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_filter1, H5Z_filter_t,
                     (hid_t plist_id, unsigned int filter, unsigned int *flags,
                      size_t *cd_nelmts, unsigned int cd_values[],
                      size_t namelen, char name[]),
                     (plist_id, filter, flags, cd_nelmts, cd_values, namelen,
                      name),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_filter_by_id1, herr_t,
                     (hid_t plist_id, H5Z_filter_t id, unsigned int *flags,
                      size_t *cd_nelmts, unsigned int cd_values[],
                      size_t namelen, char name[]),
                     (plist_id, id, flags, cd_nelmts, cd_values, namelen, name),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5PLset_loading_state, herr_t,
                     (unsigned int plugin_control_mask), (plugin_control_mask),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5PLget_loading_state, herr_t,
                     (unsigned int *plugin_control_mask), (plugin_control_mask),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5PLappend, herr_t, (const char *search_path),
                     (search_path), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5PLprepend, herr_t, (const char *search_path),
                     (search_path), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5PLreplace, herr_t,
                     (const char *search_path, unsigned int index),
                     (search_path, index), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5PLinsert, herr_t,
                     (const char *search_path, unsigned int index),
                     (search_path, index), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5PLremove, herr_t, (unsigned int index), (index),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5PLget, ssize_t,
                     (unsigned int index, char *path_buf, size_t buf_size),
                     (index, path_buf, buf_size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5PLsize, herr_t, (unsigned int *num_paths), (num_paths),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Rcreate, herr_t,
                     (void *ref, hid_t loc_id, const char *name,
                      H5R_type_t ref_type, hid_t space_id),
                     (ref, loc_id, name, ref_type, space_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5Rdereference, hid_t,
                     (hid_t dataset, H5R_type_t ref_type, const void *ref),
                     (dataset, ref_type, ref), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Rget_region, hid_t,
                     (hid_t dataset, H5R_type_t ref_type, const void *ref),
                     (dataset, ref_type, ref), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5Rget_obj_type2, herr_t,
                     (hid_t id, H5R_type_t ref_type, const void *_ref,
                      H5O_type_t *obj_type),
                     (id, ref_type, _ref, obj_type), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Rget_name, ssize_t,
                     (hid_t loc_id, H5R_type_t ref_type, const void *ref,
                      char *name, size_t size),
                     (loc_id, ref_type, ref, name, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Rget_obj_type1, H5G_obj_t,
                     (hid_t id, H5R_type_t ref_type, const void *ref),
                     (id, ref_type, ref), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sclose, herr_t, (hid_t space_id), (space_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Scopy, hid_t, (hid_t space_id), (space_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Screate, hid_t, (H5S_class_t type), (type),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Screate_simple, hid_t,
                     (int rank, const hsize_t dims[], const hsize_t maxdims[]),
                     (rank, dims, maxdims), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sdecode, hid_t, (const void *buf), (buf), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5Sencode, herr_t,
                     (hid_t obj_id, void *buf, size_t *nalloc),
                     (obj_id, buf, nalloc), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sextent_copy, herr_t, (hid_t dst_id, hid_t src_id),
                     (dst_id, src_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sextent_equal, htri_t,
                     (hid_t space1_id, hid_t space2_id), (space1_id, space2_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sget_simple_extent_dims, int,
                     (hid_t space_id, hsize_t dims[], hsize_t maxdims[]),
                     (space_id, dims, maxdims), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sget_simple_extent_ndims, int, (hid_t space_id),
                     (space_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sget_simple_extent_npoints, hssize_t, (hid_t space_id),
                     (space_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sget_simple_extent_type, H5S_class_t, (hid_t space_id),
                     (space_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sis_simple, htri_t, (hid_t space_id), (space_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sset_extent_none, herr_t, (hid_t space_id), (space_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sset_extent_simple, herr_t,
                     (hid_t space_id, int rank, const hsize_t dims[],
                      const hsize_t max[]),
                     (space_id, rank, dims, max), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sget_select_bounds, herr_t,
                     (hid_t spaceid, hsize_t start[], hsize_t end[]),
                     (spaceid, start, end), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sget_select_elem_npoints, hssize_t, (hid_t spaceid),
                     (spaceid), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sget_select_elem_pointlist, herr_t,
                     (hid_t spaceid, hsize_t startpoint, hsize_t numpoints,
                      hsize_t buf[]),
                     (spaceid, startpoint, numpoints, buf), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sget_select_hyper_blocklist, herr_t,
                     (hid_t spaceid, hsize_t startblock, hsize_t numblocks,
                      hsize_t buf[]),
                     (spaceid, startblock, numblocks, buf), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sget_select_hyper_nblocks, hssize_t, (hid_t spaceid),
                     (spaceid), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sget_select_npoints, hssize_t, (hid_t spaceid),
                     (spaceid), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sget_select_type, H5S_sel_type, (hid_t spaceid),
                     (spaceid), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Soffset_simple, herr_t,
                     (hid_t space_id, const hssize_t *offset),
                     (space_id, offset), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sselect_all, herr_t, (hid_t spaceid), (spaceid),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sselect_elements, herr_t,
                     (hid_t space_id, H5S_seloper_t op, size_t num_elem,
                      const hsize_t *coord),
                     (space_id, op, num_elem, coord), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sselect_hyperslab, herr_t,
                     (hid_t space_id, H5S_seloper_t op, const hsize_t start[],
                      const hsize_t stride[], const hsize_t count[],
                      const hsize_t block[]),
                     (space_id, op, start, stride, count, block), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sselect_none, herr_t, (hid_t spaceid), (spaceid),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sselect_valid, htri_t, (hid_t spaceid), (spaceid),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FD_core_init, hid_t, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5FD_core_term, void, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_fapl_core, herr_t,
                     (hid_t fapl_id, size_t increment, hbool_t backing_store),
                     (fapl_id, increment, backing_store), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_fapl_core, herr_t,
                     (hid_t fapl_id, size_t *increment, hbool_t *backing_store),
                     (fapl_id, increment, backing_store), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FD_family_init, hid_t, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5FD_family_term, void, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_fapl_family, herr_t,
                     (hid_t fapl_id, hsize_t memb_size, hid_t memb_fapl_id),
                     (fapl_id, memb_size, memb_fapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_fapl_family, herr_t,
                     (hid_t fapl_id, hsize_t *memb_size, hid_t *memb_fapl_id),
                     (fapl_id, memb_size, memb_fapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101200
GOTCHA_MACRO_TYPEDEF(H5FD_hdfs_init, hid_t, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5FD_hdfs_term, void, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101200
GOTCHA_MACRO_TYPEDEF(H5Pget_fapl_hdfs, herr_t,
                     (hid_t fapl_id, H5FD_hdfs_fapl_t *fa_out),
                     (fapl_id, fa_out), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101200
GOTCHA_MACRO_TYPEDEF(H5Pset_fapl_hdfs, herr_t,
                     (hid_t fapl_id, H5FD_hdfs_fapl_t *fa), (fapl_id, fa),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FD_log_init, hid_t, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5FD_log_term, void, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_fapl_log, herr_t,
                     (hid_t fapl_id, const char *logfile,
                      unsigned long long flags, size_t buf_size),
                     (fapl_id, logfile, flags, buf_size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FD_mpio_init, hid_t, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5FD_mpio_term, void, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_fapl_mpio, herr_t,
                     (hid_t fapl_id, int comm, int info), (fapl_id, comm, info),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_fapl_mpio, herr_t,
                     (hid_t fapl_id, int *comm, int *info),
                     (fapl_id, comm, info), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_dxpl_mpio, herr_t,
                     (hid_t dxpl_id, H5FD_mpio_xfer_t xfer_mode),
                     (dxpl_id, xfer_mode), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_dxpl_mpio, herr_t,
                     (hid_t dxpl_id, H5FD_mpio_xfer_t *xfer_mode),
                     (dxpl_id, xfer_mode), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_dxpl_mpio_collective_opt, herr_t,
                     (hid_t dxpl_id, H5FD_mpio_collective_opt_t opt_mode),
                     (dxpl_id, opt_mode), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_dxpl_mpio_chunk_opt, herr_t,
                     (hid_t dxpl_id, H5FD_mpio_chunk_opt_t opt_mode),
                     (dxpl_id, opt_mode), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_dxpl_mpio_chunk_opt_num, herr_t,
                     (hid_t dxpl_id, unsigned int num_chunk_per_proc),
                     (dxpl_id, num_chunk_per_proc), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_dxpl_mpio_chunk_opt_ratio, herr_t,
                     (hid_t dxpl_id, unsigned int percent_num_proc_per_chunk),
                     (dxpl_id, percent_num_proc_per_chunk), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FD_multi_init, hid_t, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5FD_multi_term, void, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(
    H5Pset_fapl_multi, herr_t,
    (hid_t fapl_id, const H5FD_mem_t *memb_map, const hid_t *memb_fapl,
     const char *const *memb_name, const haddr_t *memb_addr, hbool_t relax),
    (fapl_id, memb_map, memb_fapl, memb_name, memb_addr, relax), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_fapl_multi, herr_t,
                     (hid_t fapl_id, H5FD_mem_t *memb_map, hid_t *memb_fapl,
                      char **memb_name, haddr_t *memb_addr, hbool_t *relax),
                     (fapl_id, memb_map, memb_fapl, memb_name, memb_addr,
                      relax),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_fapl_split, herr_t,
                     (hid_t fapl, const char *meta_ext, hid_t meta_plist_id,
                      const char *raw_ext, hid_t raw_plist_id),
                     (fapl, meta_ext, meta_plist_id, raw_ext, raw_plist_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FD_sec2_init, hid_t, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5FD_sec2_term, void, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_fapl_sec2, herr_t, (hid_t fapl_id), (fapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FD_stdio_init, hid_t, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
GOTCHA_MACRO_TYPEDEF(H5FD_stdio_term, void, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_fapl_stdio, herr_t, (hid_t fapl_id), (fapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5get_free_list_sizes, herr_t,
                     (size_t * reg_size, size_t *arr_size, size_t *blk_size,
                      size_t *fac_size),
                     (reg_size, arr_size, blk_size, fac_size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5get_alloc_stats, herr_t, (H5_alloc_stats_t * stats),
                     (stats), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Iiterate, herr_t,
                     (H5I_type_t type, H5I_iterate_func_t op, void *op_data),
                     (type, op, op_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Tflush, herr_t, (hid_t type_id), (type_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Trefresh, herr_t, (hid_t type_id), (type_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Treclaim, herr_t,
                     (hid_t type_id, hid_t space_id, hid_t plist_id, void *buf),
                     (type_id, space_id, plist_id, buf), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Lget_info2, herr_t,
                     (hid_t loc_id, const char *name, H5L_info2_t *linfo,
                      hid_t lapl_id),
                     (loc_id, name, linfo, lapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Lget_info_by_idx2, herr_t,
                     (hid_t loc_id, const char *group_name, H5_index_t idx_type,
                      H5_iter_order_t order, hsize_t n, H5L_info2_t *linfo,
                      hid_t lapl_id),
                     (loc_id, group_name, idx_type, order, n, linfo, lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Literate2, herr_t,
                     (hid_t grp_id, H5_index_t idx_type, H5_iter_order_t order,
                      hsize_t *idx, H5L_iterate2_t op, void *op_data),
                     (grp_id, idx_type, order, idx, op, op_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Literate_by_name2, herr_t,
                     (hid_t loc_id, const char *group_name, H5_index_t idx_type,
                      H5_iter_order_t order, hsize_t *idx, H5L_iterate2_t op,
                      void *op_data, hid_t lapl_id),
                     (loc_id, group_name, idx_type, order, idx, op, op_data,
                      lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Lvisit2, herr_t,
                     (hid_t grp_id, H5_index_t idx_type, H5_iter_order_t order,
                      H5L_iterate2_t op, void *op_data),
                     (grp_id, idx_type, order, op, op_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(
    H5Lvisit_by_name2, herr_t,
    (hid_t loc_id, const char *group_name, H5_index_t idx_type,
     H5_iter_order_t order, H5L_iterate2_t op, void *op_data, hid_t lapl_id),
    (loc_id, group_name, idx_type, order, op, op_data, lapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Lget_info1, herr_t,
                     (hid_t loc_id, const char *name, H5L_info1_t *linfo,
                      hid_t lapl_id),
                     (loc_id, name, linfo, lapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Lget_info_by_idx1, herr_t,
                     (hid_t loc_id, const char *group_name, H5_index_t idx_type,
                      H5_iter_order_t order, hsize_t n, H5L_info1_t *linfo,
                      hid_t lapl_id),
                     (loc_id, group_name, idx_type, order, n, linfo, lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Literate1, herr_t,
                     (hid_t grp_id, H5_index_t idx_type, H5_iter_order_t order,
                      hsize_t *idx, H5L_iterate1_t op, void *op_data),
                     (grp_id, idx_type, order, idx, op, op_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Literate_by_name1, herr_t,
                     (hid_t loc_id, const char *group_name, H5_index_t idx_type,
                      H5_iter_order_t order, hsize_t *idx, H5L_iterate1_t op,
                      void *op_data, hid_t lapl_id),
                     (loc_id, group_name, idx_type, order, idx, op, op_data,
                      lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Lvisit1, herr_t,
                     (hid_t grp_id, H5_index_t idx_type, H5_iter_order_t order,
                      H5L_iterate1_t op, void *op_data),
                     (grp_id, idx_type, order, op, op_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(
    H5Lvisit_by_name1, herr_t,
    (hid_t loc_id, const char *group_name, H5_index_t idx_type,
     H5_iter_order_t order, H5L_iterate1_t op, void *op_data, hid_t lapl_id),
    (loc_id, group_name, idx_type, order, op, op_data, lapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Oopen_by_token, hid_t, (hid_t loc_id, H5O_token_t token),
                     (loc_id, token), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Oget_info3, herr_t,
                     (hid_t loc_id, H5O_info2_t *oinfo, unsigned int fields),
                     (loc_id, oinfo, fields), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Oget_info_by_name3, herr_t,
                     (hid_t loc_id, const char *name, H5O_info2_t *oinfo,
                      unsigned int fields, hid_t lapl_id),
                     (loc_id, name, oinfo, fields, lapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Oget_info_by_idx3, herr_t,
                     (hid_t loc_id, const char *group_name, H5_index_t idx_type,
                      H5_iter_order_t order, hsize_t n, H5O_info2_t *oinfo,
                      unsigned int fields, hid_t lapl_id),
                     (loc_id, group_name, idx_type, order, n, oinfo, fields,
                      lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Oget_native_info, herr_t,
                     (hid_t loc_id, H5O_native_info_t *oinfo,
                      unsigned int fields),
                     (loc_id, oinfo, fields), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Oget_native_info_by_name, herr_t,
                     (hid_t loc_id, const char *name, H5O_native_info_t *oinfo,
                      unsigned int fields, hid_t lapl_id),
                     (loc_id, name, oinfo, fields, lapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Oget_native_info_by_idx, herr_t,
                     (hid_t loc_id, const char *group_name, H5_index_t idx_type,
                      H5_iter_order_t order, hsize_t n,
                      H5O_native_info_t *oinfo, unsigned int fields,
                      hid_t lapl_id),
                     (loc_id, group_name, idx_type, order, n, oinfo, fields,
                      lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Ovisit3, herr_t,
                     (hid_t obj_id, H5_index_t idx_type, H5_iter_order_t order,
                      H5O_iterate2_t op, void *op_data, unsigned int fields),
                     (obj_id, idx_type, order, op, op_data, fields),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Ovisit_by_name3, herr_t,
                     (hid_t loc_id, const char *obj_name, H5_index_t idx_type,
                      H5_iter_order_t order, H5O_iterate2_t op, void *op_data,
                      unsigned int fields, hid_t lapl_id),
                     (loc_id, obj_name, idx_type, order, op, op_data, fields,
                      lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Oflush, herr_t, (hid_t obj_id), (obj_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Orefresh, herr_t, (hid_t oid), (oid), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Odisable_mdc_flushes, herr_t, (hid_t object_id),
                     (object_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Oenable_mdc_flushes, herr_t, (hid_t object_id),
                     (object_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Oare_mdc_flushes_disabled, herr_t,
                     (hid_t object_id, hbool_t *are_disabled),
                     (object_id, are_disabled), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Otoken_cmp, herr_t,
                     (hid_t loc_id, const H5O_token_t *token1,
                      const H5O_token_t *token2, int *cmp_value),
                     (loc_id, token1, token2, cmp_value), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Otoken_to_str, herr_t,
                     (hid_t loc_id, const H5O_token_t *token, char **token_str),
                     (loc_id, token, token_str), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Otoken_from_str, herr_t,
                     (hid_t loc_id, const char *token_str, H5O_token_t *token),
                     (loc_id, token_str, token), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Oget_info1, herr_t, (hid_t loc_id, H5O_info1_t *oinfo),
                     (loc_id, oinfo), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Oget_info_by_name1, herr_t,
                     (hid_t loc_id, const char *name, H5O_info1_t *oinfo,
                      hid_t lapl_id),
                     (loc_id, name, oinfo, lapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Oget_info_by_idx1, herr_t,
                     (hid_t loc_id, const char *group_name, H5_index_t idx_type,
                      H5_iter_order_t order, hsize_t n, H5O_info1_t *oinfo,
                      hid_t lapl_id),
                     (loc_id, group_name, idx_type, order, n, oinfo, lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Oget_info2, herr_t,
                     (hid_t loc_id, H5O_info1_t *oinfo, unsigned int fields),
                     (loc_id, oinfo, fields), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Oget_info_by_name2, herr_t,
                     (hid_t loc_id, const char *name, H5O_info1_t *oinfo,
                      unsigned int fields, hid_t lapl_id),
                     (loc_id, name, oinfo, fields, lapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Oget_info_by_idx2, herr_t,
                     (hid_t loc_id, const char *group_name, H5_index_t idx_type,
                      H5_iter_order_t order, hsize_t n, H5O_info1_t *oinfo,
                      unsigned int fields, hid_t lapl_id),
                     (loc_id, group_name, idx_type, order, n, oinfo, fields,
                      lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Ovisit1, herr_t,
                     (hid_t obj_id, H5_index_t idx_type, H5_iter_order_t order,
                      H5O_iterate1_t op, void *op_data),
                     (obj_id, idx_type, order, op, op_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Ovisit_by_name1, herr_t,
                     (hid_t loc_id, const char *obj_name, H5_index_t idx_type,
                      H5_iter_order_t order, H5O_iterate1_t op, void *op_data,
                      hid_t lapl_id),
                     (loc_id, obj_name, idx_type, order, op, op_data, lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Ovisit2, herr_t,
                     (hid_t obj_id, H5_index_t idx_type, H5_iter_order_t order,
                      H5O_iterate1_t op, void *op_data, unsigned int fields),
                     (obj_id, idx_type, order, op, op_data, fields),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Ovisit_by_name2, herr_t,
                     (hid_t loc_id, const char *obj_name, H5_index_t idx_type,
                      H5_iter_order_t order, H5O_iterate1_t op, void *op_data,
                      unsigned int fields, hid_t lapl_id),
                     (loc_id, obj_name, idx_type, order, op, op_data, fields,
                      lapl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dget_num_chunks, herr_t,
                     (hid_t dset_id, hid_t fspace_id, hsize_t *nchunks),
                     (dset_id, fspace_id, nchunks), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dget_chunk_info_by_coord, herr_t,
                     (hid_t dset_id, const hsize_t *offset,
                      unsigned int *filter_mask, haddr_t *addr, hsize_t *size),
                     (dset_id, offset, filter_mask, addr, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dget_chunk_info, herr_t,
                     (hid_t dset_id, hid_t fspace_id, hsize_t chk_idx,
                      hsize_t *offset, unsigned int *filter_mask, haddr_t *addr,
                      hsize_t *size),
                     (dset_id, fspace_id, chk_idx, offset, filter_mask, addr,
                      size),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dwrite_chunk, herr_t,
                     (hid_t dset_id, hid_t dxpl_id, uint32_t filters,
                      const hsize_t *offset, size_t data_size, const void *buf),
                     (dset_id, dxpl_id, filters, offset, data_size, buf),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dread_chunk, herr_t,
                     (hid_t dset_id, hid_t dxpl_id, const hsize_t *offset,
                      uint32_t *filters, void *buf),
                     (dset_id, dxpl_id, offset, filters, buf), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dflush, herr_t, (hid_t dset_id), (dset_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Drefresh, herr_t, (hid_t dset_id), (dset_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dformat_convert, herr_t, (hid_t dset_id), (dset_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Dget_chunk_index_type, herr_t,
                     (hid_t did, H5D_chunk_index_t *idx_type), (did, idx_type),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Eappend_stack, herr_t,
                     (hid_t dst_stack_id, hid_t src_stack_id,
                      hbool_t close_source_stack),
                     (dst_stack_id, src_stack_id, close_source_stack),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fis_accessible, htri_t,
                     (const char *container_name, hid_t fapl_id),
                     (container_name, fapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fdelete, herr_t, (const char *filename, hid_t fapl_id),
                     (filename, fapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fget_fileno, herr_t,
                     (hid_t file_id, unsigned long *fileno), (file_id, fileno),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fget_eoa, herr_t, (hid_t file_id, haddr_t *eoa),
                     (file_id, eoa), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fincrement_filesize, herr_t,
                     (hid_t file_id, hsize_t increment), (file_id, increment),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fget_info2, herr_t,
                     (hid_t obj_id, H5F_info2_t *file_info),
                     (obj_id, file_info), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fget_metadata_read_retry_info, herr_t,
                     (hid_t file_id, H5F_retry_info_t *info), (file_id, info),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fstart_swmr_write, herr_t, (hid_t file_id), (file_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fget_free_sections, ssize_t,
                     (hid_t file_id, H5F_mem_t type, size_t nsects,
                      H5F_sect_info_t *sect_info),
                     (file_id, type, nsects, sect_info), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fset_libver_bounds, herr_t,
                     (hid_t file_id, H5F_libver_t low, H5F_libver_t high),
                     (file_id, low, high), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fstart_mdc_logging, herr_t, (hid_t file_id), (file_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fstop_mdc_logging, herr_t, (hid_t file_id), (file_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fget_mdc_logging_status, herr_t,
                     (hid_t file_id, hbool_t *is_enabled,
                      hbool_t *is_currently_logging),
                     (file_id, is_enabled, is_currently_logging), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fformat_convert, herr_t, (hid_t fid), (fid),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Freset_page_buffering_stats, herr_t, (hid_t file_id),
                     (file_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fget_page_buffering_stats, herr_t,
                     (hid_t file_id, unsigned int accesses[2],
                      unsigned int hits[2], unsigned int misses[2],
                      unsigned int evictions[2], unsigned int bypasses[2]),
                     (file_id, accesses, hits, misses, evictions, bypasses),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fget_mdc_image_info, herr_t,
                     (hid_t file_id, haddr_t *image_addr, hsize_t *image_size),
                     (file_id, image_addr, image_size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fget_dset_no_attrs_hint, herr_t,
                     (hid_t file_id, hbool_t *minimize), (file_id, minimize),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fset_dset_no_attrs_hint, herr_t,
                     (hid_t file_id, hbool_t minimize), (file_id, minimize),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fget_info1, herr_t,
                     (hid_t obj_id, H5F_info1_t *file_info),
                     (obj_id, file_info), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fset_latest_format, herr_t,
                     (hid_t file_id, hbool_t latest_format),
                     (file_id, latest_format), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Fis_hdf5, htri_t, (const char *file_name), (file_name),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FDget_eof, haddr_t, (H5FD_t * file, H5FD_mem_t type),
                     (file, type), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FDflush, herr_t,
                     (H5FD_t * file, hid_t dxpl_id, hbool_t closing),
                     (file, dxpl_id, closing), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FDlock, herr_t, (H5FD_t * file, hbool_t rw), (file, rw),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FDunlock, herr_t, (H5FD_t * file), (file), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Scombine_hyperslab, hid_t,
                     (hid_t space_id, H5S_seloper_t op, const hsize_t start[],
                      const hsize_t stride[], const hsize_t count[],
                      const hsize_t block[]),
                     (space_id, op, start, stride, count, block), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Scombine_select, hid_t,
                     (hid_t space1_id, H5S_seloper_t op, hid_t space2_id),
                     (space1_id, op, space2_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sencode2, herr_t,
                     (hid_t obj_id, void *buf, size_t *nalloc, hid_t fapl),
                     (obj_id, buf, nalloc, fapl), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sget_regular_hyperslab, htri_t,
                     (hid_t spaceid, hsize_t start[], hsize_t stride[],
                      hsize_t count[], hsize_t block[]),
                     (spaceid, start, stride, count, block), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sis_regular_hyperslab, htri_t, (hid_t spaceid),
                     (spaceid), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Smodify_select, herr_t,
                     (hid_t space1_id, H5S_seloper_t op, hid_t space2_id),
                     (space1_id, op, space2_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Ssel_iter_close, herr_t, (hid_t sel_iter_id),
                     (sel_iter_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Ssel_iter_create, hid_t,
                     (hid_t spaceid, size_t elmt_size, unsigned int flags),
                     (spaceid, elmt_size, flags), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5Ssel_iter_get_seq_list, herr_t,
                     (hid_t sel_iter_id, size_t maxseq, size_t maxbytes,
                      size_t *nseq, size_t *nbytes, hsize_t *off, size_t *len),
                     (sel_iter_id, maxseq, maxbytes, nseq, nbytes, off, len),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Ssel_iter_reset, herr_t,
                     (hid_t sel_iter_id, hid_t space_id),
                     (sel_iter_id, space_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sselect_adjust, herr_t,
                     (hid_t spaceid, const hssize_t *offset), (spaceid, offset),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sselect_copy, herr_t, (hid_t dst_id, hid_t src_id),
                     (dst_id, src_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sselect_intersect_block, htri_t,
                     (hid_t space_id, const hsize_t *start, const hsize_t *end),
                     (space_id, start, end), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sselect_project_intersection, hid_t,
                     (hid_t src_space_id, hid_t dst_space_id,
                      hid_t src_intersect_space_id),
                     (src_space_id, dst_space_id, src_intersect_space_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sselect_shape_same, htri_t,
                     (hid_t space1_id, hid_t space2_id), (space1_id, space2_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Sencode1, herr_t,
                     (hid_t obj_id, void *buf, size_t *nalloc),
                     (obj_id, buf, nalloc), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pdecode, hid_t, (const void *buf), (buf), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pencode2, herr_t,
                     (hid_t plist_id, void *buf, size_t *nalloc, hid_t fapl_id),
                     (plist_id, buf, nalloc, fapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset, herr_t,
                     (hid_t plist_id, const char *name, const void *value),
                     (plist_id, name, value), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_file_space_page_size, herr_t,
                     (hid_t plist_id, hsize_t *fsp_size), (plist_id, fsp_size),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_file_space_strategy, herr_t,
                     (hid_t plist_id, H5F_fspace_strategy_t *strategy,
                      hbool_t *persist, hsize_t *threshold),
                     (plist_id, strategy, persist, threshold), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_file_space_page_size, herr_t,
                     (hid_t plist_id, hsize_t fsp_size), (plist_id, fsp_size),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_file_space_strategy, herr_t,
                     (hid_t plist_id, H5F_fspace_strategy_t strategy,
                      hbool_t persist, hsize_t threshold),
                     (plist_id, strategy, persist, threshold), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_driver_info, const void *, (hid_t plist_id),
                     (plist_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_evict_on_close, herr_t,
                     (hid_t fapl_id, hbool_t *evict_on_close),
                     (fapl_id, evict_on_close), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_file_locking, herr_t,
                     (hid_t fapl_id, hbool_t *use_file_locking,
                      hbool_t *ignore_when_disabled),
                     (fapl_id, use_file_locking, ignore_when_disabled),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_mdc_image_config, herr_t,
                     (hid_t plist_id, H5AC_cache_image_config_t *config_ptr),
                     (plist_id, config_ptr), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_mdc_log_options, herr_t,
                     (hid_t plist_id, hbool_t *is_enabled, char *location,
                      size_t *location_size, hbool_t *start_on_access),
                     (plist_id, is_enabled, location, location_size,
                      start_on_access),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_metadata_read_attempts, herr_t,
                     (hid_t plist_id, unsigned int *attempts),
                     (plist_id, attempts), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_object_flush_cb, herr_t,
                     (hid_t plist_id, H5F_flush_cb_t *func, void **udata),
                     (plist_id, func, udata), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_page_buffer_size, herr_t,
                     (hid_t plist_id, size_t *buf_size,
                      unsigned int *min_meta_perc, unsigned int *min_raw_perc),
                     (plist_id, buf_size, min_meta_perc, min_raw_perc),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_vol_id, herr_t, (hid_t plist_id, hid_t *vol_id),
                     (plist_id, vol_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_vol_info, herr_t, (hid_t plist_id, void **vol_info),
                     (plist_id, vol_info), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_evict_on_close, herr_t,
                     (hid_t fapl_id, hbool_t evict_on_close),
                     (fapl_id, evict_on_close), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_file_locking, herr_t,
                     (hid_t fapl_id, hbool_t use_file_locking,
                      hbool_t ignore_when_disabled),
                     (fapl_id, use_file_locking, ignore_when_disabled),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_mdc_log_options, herr_t,
                     (hid_t plist_id, hbool_t is_enabled, const char *location,
                      hbool_t start_on_access),
                     (plist_id, is_enabled, location, start_on_access),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_metadata_read_attempts, herr_t,
                     (hid_t plist_id, unsigned int attempts),
                     (plist_id, attempts), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_object_flush_cb, herr_t,
                     (hid_t plist_id, H5F_flush_cb_t func, void *udata),
                     (plist_id, func, udata), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_vol, herr_t,
                     (hid_t plist_id, hid_t new_vol_id,
                      const void *new_vol_info),
                     (plist_id, new_vol_id, new_vol_info), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_all_coll_metadata_ops, herr_t,
                     (hid_t plist_id, hbool_t is_collective),
                     (plist_id, is_collective), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_all_coll_metadata_ops, herr_t,
                     (hid_t plist_id, hbool_t *is_collective),
                     (plist_id, is_collective), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_coll_metadata_write, herr_t,
                     (hid_t plist_id, hbool_t is_collective),
                     (plist_id, is_collective), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_coll_metadata_write, herr_t,
                     (hid_t plist_id, hbool_t *is_collective),
                     (plist_id, is_collective), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_mpi_params, herr_t,
                     (hid_t fapl_id, int *comm, int *info),
                     (fapl_id, comm, info), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_mpi_params, herr_t,
                     (hid_t fapl_id, int comm, int info), (fapl_id, comm, info),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_mdc_image_config, herr_t,
                     (hid_t plist_id, H5AC_cache_image_config_t *config_ptr),
                     (plist_id, config_ptr), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_page_buffer_size, herr_t,
                     (hid_t plist_id, size_t buf_size,
                      unsigned int min_meta_per, unsigned int min_raw_per),
                     (plist_id, buf_size, min_meta_per, min_raw_per),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_chunk_opts, herr_t,
                     (hid_t plist_id, unsigned int *opts), (plist_id, opts),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_dset_no_attrs_hint, herr_t,
                     (hid_t dcpl_id, hbool_t *minimize), (dcpl_id, minimize),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_virtual_count, herr_t,
                     (hid_t dcpl_id, size_t *count), (dcpl_id, count),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_virtual_dsetname, ssize_t,
                     (hid_t dcpl_id, size_t index, char *name, size_t size),
                     (dcpl_id, index, name, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_virtual_filename, ssize_t,
                     (hid_t dcpl_id, size_t index, char *name, size_t size),
                     (dcpl_id, index, name, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_virtual_srcspace, hid_t,
                     (hid_t dcpl_id, size_t index), (dcpl_id, index),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_virtual_vspace, hid_t,
                     (hid_t dcpl_id, size_t index), (dcpl_id, index),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_chunk_opts, herr_t,
                     (hid_t plist_id, unsigned int opts), (plist_id, opts),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_dset_no_attrs_hint, herr_t,
                     (hid_t dcpl_id, hbool_t minimize), (dcpl_id, minimize),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_virtual, herr_t,
                     (hid_t dcpl_id, hid_t vspace_id, const char *src_file_name,
                      const char *src_dset_name, hid_t src_space_id),
                     (dcpl_id, vspace_id, src_file_name, src_dset_name,
                      src_space_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_append_flush, herr_t,
                     (hid_t dapl_id, unsigned int dims, hsize_t boundary[],
                      H5D_append_cb_t *func, void **udata),
                     (dapl_id, dims, boundary, func, udata), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_virtual_prefix, ssize_t,
                     (hid_t dapl_id, char *prefix, size_t size),
                     (dapl_id, prefix, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_virtual_printf_gap, herr_t,
                     (hid_t dapl_id, hsize_t *gap_size), (dapl_id, gap_size),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_virtual_view, herr_t,
                     (hid_t dapl_id, H5D_vds_view_t *view), (dapl_id, view),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_append_flush, herr_t,
                     (hid_t dapl_id, unsigned int ndims,
                      const hsize_t boundary[], H5D_append_cb_t func,
                      void *udata),
                     (dapl_id, ndims, boundary, func, udata), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_virtual_prefix, herr_t,
                     (hid_t dapl_id, const char *prefix), (dapl_id, prefix),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_virtual_printf_gap, herr_t,
                     (hid_t dapl_id, hsize_t gap_size), (dapl_id, gap_size),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_virtual_view, herr_t,
                     (hid_t dapl_id, H5D_vds_view_t view), (dapl_id, view),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pencode1, herr_t,
                     (hid_t plist_id, void *buf, size_t *nalloc),
                     (plist_id, buf, nalloc), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_file_space, herr_t,
                     (hid_t plist_id, H5F_file_space_type_t strategy,
                      hsize_t threshold),
                     (plist_id, strategy, threshold), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_file_space, herr_t,
                     (hid_t plist_id, H5F_file_space_type_t *strategy,
                      hsize_t *threshold),
                     (plist_id, strategy, threshold), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Rcreate_object, herr_t,
                     (hid_t loc_id, const char *name, hid_t oapl_id,
                      H5R_ref_t *ref_ptr),
                     (loc_id, name, oapl_id, ref_ptr), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Rcreate_region, herr_t,
                     (hid_t loc_id, const char *name, hid_t space_id,
                      hid_t oapl_id, H5R_ref_t *ref_ptr),
                     (loc_id, name, space_id, oapl_id, ref_ptr), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Rcreate_attr, herr_t,
                     (hid_t loc_id, const char *name, const char *attr_name,
                      hid_t oapl_id, H5R_ref_t *ref_ptr),
                     (loc_id, name, attr_name, oapl_id, ref_ptr), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Rdestroy, herr_t, (H5R_ref_t * ref_ptr), (ref_ptr),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Rget_type, H5R_type_t, (const H5R_ref_t *ref_ptr),
                     (ref_ptr), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Requal, htri_t,
                     (const H5R_ref_t *ref1_ptr, const H5R_ref_t *ref2_ptr),
                     (ref1_ptr, ref2_ptr), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Rcopy, herr_t,
                     (const H5R_ref_t *src_ref_ptr, H5R_ref_t *dst_ref_ptr),
                     (src_ref_ptr, dst_ref_ptr), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Ropen_object, hid_t,
                     (H5R_ref_t * ref_ptr, hid_t rapl_id, hid_t oapl_id),
                     (ref_ptr, rapl_id, oapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Ropen_region, hid_t,
                     (H5R_ref_t * ref_ptr, hid_t rapl_id, hid_t oapl_id),
                     (ref_ptr, rapl_id, oapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Ropen_attr, hid_t,
                     (H5R_ref_t * ref_ptr, hid_t rapl_id, hid_t aapl_id),
                     (ref_ptr, rapl_id, aapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Rget_obj_type3, herr_t,
                     (H5R_ref_t * ref_ptr, hid_t rapl_id, H5O_type_t *obj_type),
                     (ref_ptr, rapl_id, obj_type), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Rget_file_name, ssize_t,
                     (const H5R_ref_t *ref_ptr, char *name, size_t size),
                     (ref_ptr, name, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Rget_obj_name, ssize_t,
                     (H5R_ref_t * ref_ptr, hid_t rapl_id, char *name,
                      size_t size),
                     (ref_ptr, rapl_id, name, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Rget_attr_name, ssize_t,
                     (const H5R_ref_t *ref_ptr, char *name, size_t size),
                     (ref_ptr, name, size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Rdereference1, hid_t,
                     (hid_t obj_id, H5R_type_t ref_type, const void *ref),
                     (obj_id, ref_type, ref), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Rget_obj_type2, herr_t,
                     (hid_t id, H5R_type_t ref_type, const void *ref,
                      H5O_type_t *obj_type),
                     (id, ref_type, ref, obj_type), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Rdereference2, hid_t,
                     (hid_t obj_id, hid_t oapl_id, H5R_type_t ref_type,
                      const void *ref),
                     (obj_id, oapl_id, ref_type, ref), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLregister_connector_by_name, hid_t,
                     (const char *connector_name, hid_t vipl_id),
                     (connector_name, vipl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLregister_connector_by_value, hid_t,
                     (H5VL_class_value_t connector_value, hid_t vipl_id),
                     (connector_value, vipl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLis_connector_registered_by_name, htri_t,
                     (const char *name), (name), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLis_connector_registered_by_value, htri_t,
                     (H5VL_class_value_t connector_value), (connector_value),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLget_connector_id, hid_t, (hid_t obj_id), (obj_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLget_connector_id_by_name, hid_t, (const char *name),
                     (name), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLget_connector_id_by_value, hid_t,
                     (H5VL_class_value_t connector_value), (connector_value),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLget_connector_name, ssize_t,
                     (hid_t id, char *name, size_t size), (id, name, size),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLclose, herr_t, (hid_t connector_id), (connector_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLunregister_connector, herr_t, (hid_t connector_id),
                     (connector_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLquery_optional, herr_t,
                     (hid_t obj_id, H5VL_subclass_t subcls, int opt_type,
                      hbool_t *supported),
                     (obj_id, subcls, opt_type, supported), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLobject_is_native, herr_t,
                     (hid_t obj_id, hbool_t *is_native), (obj_id, is_native),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLregister_connector, hid_t,
                     (const H5VL_class_t *cls, hid_t vipl_id), (cls, vipl_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLobject, void *, (hid_t obj_id), (obj_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLget_file_type, hid_t,
                     (void *file_obj, hid_t connector_id, hid_t dtype_id),
                     (file_obj, connector_id, dtype_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLpeek_connector_id_by_name, hid_t, (const char *name),
                     (name), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLpeek_connector_id_by_value, hid_t,
                     (H5VL_class_value_t value), (value), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLcmp_connector_cls, herr_t,
                     (int *cmp, hid_t connector_id1, hid_t connector_id2),
                     (cmp, connector_id1, connector_id2), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLwrap_register, hid_t, (void *obj, H5I_type_t type),
                     (obj, type), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLretrieve_lib_state, herr_t, (void **state), (state),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLrestore_lib_state, herr_t, (const void *state),
                     (state), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLreset_lib_state, herr_t, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLfree_lib_state, herr_t, (void *state), (state),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLget_object, void *, (void *obj, hid_t connector_id),
                     (obj, connector_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLget_wrap_ctx, herr_t,
                     (void *obj, hid_t connector_id, void **wrap_ctx),
                     (obj, connector_id, wrap_ctx), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLwrap_object, void *,
                     (void *obj, H5I_type_t obj_type, hid_t connector_id,
                      void *wrap_ctx),
                     (obj, obj_type, connector_id, wrap_ctx), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLunwrap_object, void *, (void *obj, hid_t connector_id),
                     (obj, connector_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLfree_wrap_ctx, herr_t,
                     (void *wrap_ctx, hid_t connector_id),
                     (wrap_ctx, connector_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLinitialize, herr_t,
                     (hid_t connector_id, hid_t vipl_id),
                     (connector_id, vipl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLterminate, herr_t, (hid_t connector_id),
                     (connector_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLget_cap_flags, herr_t,
                     (hid_t connector_id, unsigned int *cap_flags),
                     (connector_id, cap_flags), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLget_value, herr_t,
                     (hid_t connector_id, H5VL_class_value_t *conn_value),
                     (connector_id, conn_value), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLcopy_connector_info, herr_t,
                     (hid_t connector_id, void **dst_vol_info,
                      void *src_vol_info),
                     (connector_id, dst_vol_info, src_vol_info), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLcmp_connector_info, herr_t,
                     (int *cmp, hid_t connector_id, const void *info1,
                      const void *info2),
                     (cmp, connector_id, info1, info2), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLfree_connector_info, herr_t,
                     (hid_t connector_id, void *vol_info),
                     (connector_id, vol_info), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLconnector_info_to_str, herr_t,
                     (const void *info, hid_t connector_id, char **str),
                     (info, connector_id, str), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLconnector_str_to_info, herr_t,
                     (const char *str, hid_t connector_id, void **info),
                     (str, connector_id, info), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLattr_create, void *,
                     (void *obj, const H5VL_loc_params_t *loc_params,
                      hid_t connector_id, const char *attr_name, hid_t type_id,
                      hid_t space_id, hid_t acpl_id, hid_t aapl_id,
                      hid_t dxpl_id, void **req),
                     (obj, loc_params, connector_id, attr_name, type_id,
                      space_id, acpl_id, aapl_id, dxpl_id, req),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(
    H5VLattr_open, void *,
    (void *obj, const H5VL_loc_params_t *loc_params, hid_t connector_id,
     const char *name, hid_t aapl_id, hid_t dxpl_id, void **req),
    (obj, loc_params, connector_id, name, aapl_id, dxpl_id, req), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLattr_read, herr_t,
                     (void *attr, hid_t connector_id, hid_t dtype_id, void *buf,
                      hid_t dxpl_id, void **req),
                     (attr, connector_id, dtype_id, buf, dxpl_id, req),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLattr_write, herr_t,
                     (void *attr, hid_t connector_id, hid_t dtype_id,
                      const void *buf, hid_t dxpl_id, void **req),
                     (attr, connector_id, dtype_id, buf, dxpl_id, req),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLattr_get, herr_t,
                     (void *obj, hid_t connector_id, H5VL_attr_get_t get_type,
                      hid_t dxpl_id, void **req, va_list arguments),
                     (obj, connector_id, get_type, dxpl_id, req, arguments),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLattr_specific, herr_t,
                     (void *obj, const H5VL_loc_params_t *loc_params,
                      hid_t connector_id, H5VL_attr_specific_t specific_type,
                      hid_t dxpl_id, void **req, va_list arguments),
                     (obj, loc_params, connector_id, specific_type, dxpl_id,
                      req, arguments),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLattr_optional, herr_t,
                     (void *obj, hid_t connector_id,
                      H5VL_attr_optional_t opt_type, hid_t dxpl_id, void **req,
                      va_list arguments),
                     (obj, connector_id, opt_type, dxpl_id, req, arguments),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLattr_close, herr_t,
                     (void *attr, hid_t connector_id, hid_t dxpl_id,
                      void **req),
                     (attr, connector_id, dxpl_id, req), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLdataset_create, void *,
                     (void *obj, const H5VL_loc_params_t *loc_params,
                      hid_t connector_id, const char *name, hid_t lcpl_id,
                      hid_t type_id, hid_t space_id, hid_t dcpl_id,
                      hid_t dapl_id, hid_t dxpl_id, void **req),
                     (obj, loc_params, connector_id, name, lcpl_id, type_id,
                      space_id, dcpl_id, dapl_id, dxpl_id, req),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(
    H5VLdataset_open, void *,
    (void *obj, const H5VL_loc_params_t *loc_params, hid_t connector_id,
     const char *name, hid_t dapl_id, hid_t dxpl_id, void **req),
    (obj, loc_params, connector_id, name, dapl_id, dxpl_id, req), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLdataset_read, herr_t,
                     (void *dset, hid_t connector_id, hid_t mem_type_id,
                      hid_t mem_space_id, hid_t file_space_id, hid_t plist_id,
                      void *buf, void **req),
                     (dset, connector_id, mem_type_id, mem_space_id,
                      file_space_id, plist_id, buf, req),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLdataset_write, herr_t,
                     (void *dset, hid_t connector_id, hid_t mem_type_id,
                      hid_t mem_space_id, hid_t file_space_id, hid_t plist_id,
                      const void *buf, void **req),
                     (dset, connector_id, mem_type_id, mem_space_id,
                      file_space_id, plist_id, buf, req),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLdataset_get, herr_t,
                     (void *dset, hid_t connector_id,
                      H5VL_dataset_get_t get_type, hid_t dxpl_id, void **req,
                      va_list arguments),
                     (dset, connector_id, get_type, dxpl_id, req, arguments),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(
    H5VLdataset_specific, herr_t,
    (void *obj, hid_t connector_id, H5VL_dataset_specific_t specific_type,
     hid_t dxpl_id, void **req, va_list arguments),
    (obj, connector_id, specific_type, dxpl_id, req, arguments), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLdataset_optional, herr_t,
                     (void *obj, hid_t connector_id,
                      H5VL_dataset_optional_t opt_type, hid_t dxpl_id,
                      void **req, va_list arguments),
                     (obj, connector_id, opt_type, dxpl_id, req, arguments),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLdataset_close, herr_t,
                     (void *dset, hid_t connector_id, hid_t dxpl_id,
                      void **req),
                     (dset, connector_id, dxpl_id, req), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLdatatype_commit, void *,
                     (void *obj, const H5VL_loc_params_t *loc_params,
                      hid_t connector_id, const char *name, hid_t type_id,
                      hid_t lcpl_id, hid_t tcpl_id, hid_t tapl_id,
                      hid_t dxpl_id, void **req),
                     (obj, loc_params, connector_id, name, type_id, lcpl_id,
                      tcpl_id, tapl_id, dxpl_id, req),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(
    H5VLdatatype_open, void *,
    (void *obj, const H5VL_loc_params_t *loc_params, hid_t connector_id,
     const char *name, hid_t tapl_id, hid_t dxpl_id, void **req),
    (obj, loc_params, connector_id, name, tapl_id, dxpl_id, req), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLdatatype_get, herr_t,
                     (void *dt, hid_t connector_id,
                      H5VL_datatype_get_t get_type, hid_t dxpl_id, void **req,
                      va_list arguments),
                     (dt, connector_id, get_type, dxpl_id, req, arguments),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(
    H5VLdatatype_specific, herr_t,
    (void *obj, hid_t connector_id, H5VL_datatype_specific_t specific_type,
     hid_t dxpl_id, void **req, va_list arguments),
    (obj, connector_id, specific_type, dxpl_id, req, arguments), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLdatatype_optional, herr_t,
                     (void *obj, hid_t connector_id,
                      H5VL_datatype_optional_t opt_type, hid_t dxpl_id,
                      void **req, va_list arguments),
                     (obj, connector_id, opt_type, dxpl_id, req, arguments),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLdatatype_close, herr_t,
                     (void *dt, hid_t connector_id, hid_t dxpl_id, void **req),
                     (dt, connector_id, dxpl_id, req), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLfile_create, void *,
                     (const char *name, unsigned int flags, hid_t fcpl_id,
                      hid_t fapl_id, hid_t dxpl_id, void **req),
                     (name, flags, fcpl_id, fapl_id, dxpl_id, req),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLfile_open, void *,
                     (const char *name, unsigned int flags, hid_t fapl_id,
                      hid_t dxpl_id, void **req),
                     (name, flags, fapl_id, dxpl_id, req), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLfile_get, herr_t,
                     (void *file, hid_t connector_id, H5VL_file_get_t get_type,
                      hid_t dxpl_id, void **req, va_list arguments),
                     (file, connector_id, get_type, dxpl_id, req, arguments),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(
    H5VLfile_specific, herr_t,
    (void *obj, hid_t connector_id, H5VL_file_specific_t specific_type,
     hid_t dxpl_id, void **req, va_list arguments),
    (obj, connector_id, specific_type, dxpl_id, req, arguments), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLfile_optional, herr_t,
                     (void *obj, hid_t connector_id,
                      H5VL_file_optional_t opt_type, hid_t dxpl_id, void **req,
                      va_list arguments),
                     (obj, connector_id, opt_type, dxpl_id, req, arguments),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLfile_close, herr_t,
                     (void *file, hid_t connector_id, hid_t dxpl_id,
                      void **req),
                     (file, connector_id, dxpl_id, req), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLgroup_create, void *,
                     (void *obj, const H5VL_loc_params_t *loc_params,
                      hid_t connector_id, const char *name, hid_t lcpl_id,
                      hid_t gcpl_id, hid_t gapl_id, hid_t dxpl_id, void **req),
                     (obj, loc_params, connector_id, name, lcpl_id, gcpl_id,
                      gapl_id, dxpl_id, req),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(
    H5VLgroup_open, void *,
    (void *obj, const H5VL_loc_params_t *loc_params, hid_t connector_id,
     const char *name, hid_t gapl_id, hid_t dxpl_id, void **req),
    (obj, loc_params, connector_id, name, gapl_id, dxpl_id, req), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLgroup_get, herr_t,
                     (void *obj, hid_t connector_id, H5VL_group_get_t get_type,
                      hid_t dxpl_id, void **req, va_list arguments),
                     (obj, connector_id, get_type, dxpl_id, req, arguments),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(
    H5VLgroup_specific, herr_t,
    (void *obj, hid_t connector_id, H5VL_group_specific_t specific_type,
     hid_t dxpl_id, void **req, va_list arguments),
    (obj, connector_id, specific_type, dxpl_id, req, arguments), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLgroup_optional, herr_t,
                     (void *obj, hid_t connector_id,
                      H5VL_group_optional_t opt_type, hid_t dxpl_id, void **req,
                      va_list arguments),
                     (obj, connector_id, opt_type, dxpl_id, req, arguments),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLgroup_close, herr_t,
                     (void *grp, hid_t connector_id, hid_t dxpl_id, void **req),
                     (grp, connector_id, dxpl_id, req), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLlink_create, herr_t,
                     (H5VL_link_create_type_t create_type, void *obj,
                      const H5VL_loc_params_t *loc_params, hid_t connector_id,
                      hid_t lcpl_id, hid_t lapl_id, hid_t dxpl_id, void **req,
                      va_list arguments),
                     (create_type, obj, loc_params, connector_id, lcpl_id,
                      lapl_id, dxpl_id, req, arguments),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLlink_copy, herr_t,
                     (void *src_obj, const H5VL_loc_params_t *loc_params1,
                      void *dst_obj, const H5VL_loc_params_t *loc_params2,
                      hid_t connector_id, hid_t lcpl_id, hid_t lapl_id,
                      hid_t dxpl_id, void **req),
                     (src_obj, loc_params1, dst_obj, loc_params2, connector_id,
                      lcpl_id, lapl_id, dxpl_id, req),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLlink_move, herr_t,
                     (void *src_obj, const H5VL_loc_params_t *loc_params1,
                      void *dst_obj, const H5VL_loc_params_t *loc_params2,
                      hid_t connector_id, hid_t lcpl_id, hid_t lapl_id,
                      hid_t dxpl_id, void **req),
                     (src_obj, loc_params1, dst_obj, loc_params2, connector_id,
                      lcpl_id, lapl_id, dxpl_id, req),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLlink_get, herr_t,
                     (void *obj, const H5VL_loc_params_t *loc_params,
                      hid_t connector_id, H5VL_link_get_t get_type,
                      hid_t dxpl_id, void **req, va_list arguments),
                     (obj, loc_params, connector_id, get_type, dxpl_id, req,
                      arguments),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLlink_specific, herr_t,
                     (void *obj, const H5VL_loc_params_t *loc_params,
                      hid_t connector_id, H5VL_link_specific_t specific_type,
                      hid_t dxpl_id, void **req, va_list arguments),
                     (obj, loc_params, connector_id, specific_type, dxpl_id,
                      req, arguments),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLlink_optional, herr_t,
                     (void *obj, hid_t connector_id,
                      H5VL_link_optional_t opt_type, hid_t dxpl_id, void **req,
                      va_list arguments),
                     (obj, connector_id, opt_type, dxpl_id, req, arguments),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLobject_open, void *,
                     (void *obj, const H5VL_loc_params_t *loc_params,
                      hid_t connector_id, H5I_type_t *opened_type,
                      hid_t dxpl_id, void **req),
                     (obj, loc_params, connector_id, opened_type, dxpl_id, req),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLobject_copy, herr_t,
                     (void *src_obj, const H5VL_loc_params_t *loc_params1,
                      const char *src_name, void *dst_obj,
                      const H5VL_loc_params_t *loc_params2,
                      const char *dst_name, hid_t connector_id, hid_t ocpypl_id,
                      hid_t lcpl_id, hid_t dxpl_id, void **req),
                     (src_obj, loc_params1, src_name, dst_obj, loc_params2,
                      dst_name, connector_id, ocpypl_id, lcpl_id, dxpl_id, req),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLobject_get, herr_t,
                     (void *obj, const H5VL_loc_params_t *loc_params,
                      hid_t connector_id, H5VL_object_get_t get_type,
                      hid_t dxpl_id, void **req, va_list arguments),
                     (obj, loc_params, connector_id, get_type, dxpl_id, req,
                      arguments),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLobject_specific, herr_t,
                     (void *obj, const H5VL_loc_params_t *loc_params,
                      hid_t connector_id, H5VL_object_specific_t specific_type,
                      hid_t dxpl_id, void **req, va_list arguments),
                     (obj, loc_params, connector_id, specific_type, dxpl_id,
                      req, arguments),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLobject_optional, herr_t,
                     (void *obj, hid_t connector_id,
                      H5VL_object_optional_t opt_type, hid_t dxpl_id,
                      void **req, va_list arguments),
                     (obj, connector_id, opt_type, dxpl_id, req, arguments),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLintrospect_get_conn_cls, herr_t,
                     (void *obj, hid_t connector_id, H5VL_get_conn_lvl_t lvl,
                      const H5VL_class_t **conn_cls),
                     (obj, connector_id, lvl, conn_cls), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLintrospect_opt_query, herr_t,
                     (void *obj, hid_t connector_id, H5VL_subclass_t subcls,
                      int opt_type, hbool_t *supported),
                     (obj, connector_id, subcls, opt_type, supported),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLrequest_wait, herr_t,
                     (void *req, hid_t connector_id, uint64_t timeout,
                      H5ES_status_t *status),
                     (req, connector_id, timeout, status), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLrequest_notify, herr_t,
                     (void *req, hid_t connector_id, H5VL_request_notify_t cb,
                      void *ctx),
                     (req, connector_id, cb, ctx), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLrequest_cancel, herr_t,
                     (void *req, hid_t connector_id), (req, connector_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLrequest_specific, herr_t,
                     (void *req, hid_t connector_id,
                      H5VL_request_specific_t specific_type, va_list arguments),
                     (req, connector_id, specific_type, arguments),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLrequest_optional, herr_t,
                     (void *req, hid_t connector_id,
                      H5VL_request_optional_t opt_type, va_list arguments),
                     (req, connector_id, opt_type, arguments), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLrequest_free, herr_t, (void *req, hid_t connector_id),
                     (req, connector_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLblob_put, herr_t,
                     (void *obj, hid_t connector_id, const void *buf,
                      size_t size, void *blob_id, void *ctx),
                     (obj, connector_id, buf, size, blob_id, ctx),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLblob_get, herr_t,
                     (void *obj, hid_t connector_id, const void *blob_id,
                      void *buf, size_t size, void *ctx),
                     (obj, connector_id, blob_id, buf, size, ctx),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLblob_specific, herr_t,
                     (void *obj, hid_t connector_id, void *blob_id,
                      H5VL_blob_specific_t specific_type, va_list arguments),
                     (obj, connector_id, blob_id, specific_type, arguments),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLblob_optional, herr_t,
                     (void *obj, hid_t connector_id, void *blob_id,
                      H5VL_blob_optional_t opt_type, va_list arguments),
                     (obj, connector_id, blob_id, opt_type, arguments),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLtoken_cmp, herr_t,
                     (void *obj, hid_t connector_id, const H5O_token_t *token1,
                      const H5O_token_t *token2, int *cmp_value),
                     (obj, connector_id, token1, token2, cmp_value),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLtoken_to_str, herr_t,
                     (void *obj, H5I_type_t obj_type, hid_t connector_id,
                      const H5O_token_t *token, char **token_str),
                     (obj, obj_type, connector_id, token, token_str),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLtoken_from_str, herr_t,
                     (void *obj, H5I_type_t obj_type, hid_t connector_id,
                      const char *token_str, H5O_token_t *token),
                     (obj, obj_type, connector_id, token_str, token),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
GOTCHA_MACRO_TYPEDEF(H5VLoptional, herr_t,
                     (void *obj, hid_t connector_id, int op_type, hid_t dxpl_id,
                      void **req, va_list arguments),
                     (obj, connector_id, op_type, dxpl_id, req, arguments),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLnative_addr_to_token, herr_t,
                     (hid_t loc_id, haddr_t addr, H5O_token_t *token),
                     (loc_id, addr, token), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VLnative_token_to_addr, herr_t,
                     (hid_t loc_id, H5O_token_t token, haddr_t *addr),
                     (loc_id, token, addr), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VL_native_register, hid_t, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5FD_splitter_init, hid_t, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_fapl_splitter, herr_t,
                     (hid_t fapl_id, H5FD_splitter_vfd_config_t *config_ptr),
                     (fapl_id, config_ptr), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_fapl_splitter, herr_t,
                     (hid_t fapl_id, H5FD_splitter_vfd_config_t *config_ptr),
                     (fapl_id, config_ptr), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
GOTCHA_MACRO_TYPEDEF(H5VL_pass_through_register, hid_t, (void), (),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5atclose, herr_t, (H5_atclose_func_t func, void *ctx),
                     (func, ctx), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5is_library_terminating, herr_t,
                     (hbool_t * is_terminating), (is_terminating),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(
    H5Oopen_async, hid_t,
    (const char *app_file, const char *app_func, unsigned int app_line,
     hid_t loc_id, const char *name, hid_t lapl_id, hid_t es_id),
    (app_file, app_func, app_line, loc_id, name, lapl_id, es_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Oopen_by_idx_async, hid_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t loc_id,
                      const char *group_name, H5_index_t idx_type,
                      H5_iter_order_t order, hsize_t n, hid_t lapl_id,
                      hid_t es_id),
                     (app_file, app_func, app_line, loc_id, group_name,
                      idx_type, order, n, lapl_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Oget_info_by_name_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t loc_id, const char *name,
                      H5O_info2_t *oinfo, unsigned int fields, hid_t lapl_id,
                      hid_t es_id),
                     (app_file, app_func, app_line, loc_id, name, oinfo, fields,
                      lapl_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Ocopy_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t src_loc_id,
                      const char *src_name, hid_t dst_loc_id,
                      const char *dst_name, hid_t ocpypl_id, hid_t lcpl_id,
                      hid_t es_id),
                     (app_file, app_func, app_line, src_loc_id, src_name,
                      dst_loc_id, dst_name, ocpypl_id, lcpl_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Oclose_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t object_id, hid_t es_id),
                     (app_file, app_func, app_line, object_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Oflush_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t obj_id, hid_t es_id),
                     (app_file, app_func, app_line, obj_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Orefresh_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t oid, hid_t es_id),
                     (app_file, app_func, app_line, oid, es_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Tclose_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t type_id, hid_t es_id),
                     (app_file, app_func, app_line, type_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Tcommit_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t loc_id, const char *name,
                      hid_t type_id, hid_t lcpl_id, hid_t tcpl_id,
                      hid_t tapl_id, hid_t es_id),
                     (app_file, app_func, app_line, loc_id, name, type_id,
                      lcpl_id, tcpl_id, tapl_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(
    H5Topen_async, hid_t,
    (const char *app_file, const char *app_func, unsigned int app_line,
     hid_t loc_id, const char *name, hid_t tapl_id, hid_t es_id),
    (app_file, app_func, app_line, loc_id, name, tapl_id, es_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Aclose_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t attr_id, hid_t es_id),
                     (app_file, app_func, app_line, attr_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Acreate_async, hid_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t loc_id,
                      const char *attr_name, hid_t type_id, hid_t space_id,
                      hid_t acpl_id, hid_t aapl_id, hid_t es_id),
                     (app_file, app_func, app_line, loc_id, attr_name, type_id,
                      space_id, acpl_id, aapl_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Acreate_by_name_async, hid_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t loc_id, const char *obj_name,
                      const char *attr_name, hid_t type_id, hid_t space_id,
                      hid_t acpl_id, hid_t aapl_id, hid_t lapl_id, hid_t es_id),
                     (app_file, app_func, app_line, loc_id, obj_name, attr_name,
                      type_id, space_id, acpl_id, aapl_id, lapl_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Aexists_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t obj_id,
                      const char *attr_name, hbool_t *exists, hid_t es_id),
                     (app_file, app_func, app_line, obj_id, attr_name, exists,
                      es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Aexists_by_name_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t loc_id, const char *obj_name,
                      const char *attr_name, hbool_t *exists, hid_t lapl_id,
                      hid_t es_id),
                     (app_file, app_func, app_line, loc_id, obj_name, attr_name,
                      exists, lapl_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Aopen_async, hid_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t obj_id,
                      const char *attr_name, hid_t aapl_id, hid_t es_id),
                     (app_file, app_func, app_line, obj_id, attr_name, aapl_id,
                      es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Aopen_by_idx_async, hid_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t loc_id, const char *obj_name,
                      H5_index_t idx_type, H5_iter_order_t order, hsize_t n,
                      hid_t aapl_id, hid_t lapl_id, hid_t es_id),
                     (app_file, app_func, app_line, loc_id, obj_name, idx_type,
                      order, n, aapl_id, lapl_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Aopen_by_name_async, hid_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t loc_id, const char *obj_name,
                      const char *attr_name, hid_t aapl_id, hid_t lapl_id,
                      hid_t es_id),
                     (app_file, app_func, app_line, loc_id, obj_name, attr_name,
                      aapl_id, lapl_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Aread_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t attr_id, hid_t dtype_id,
                      void *buf, hid_t es_id),
                     (app_file, app_func, app_line, attr_id, dtype_id, buf,
                      es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Arename_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t loc_id, const char *old_name,
                      const char *new_name, hid_t es_id),
                     (app_file, app_func, app_line, loc_id, old_name, new_name,
                      es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Arename_by_name_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t loc_id, const char *obj_name,
                      const char *old_attr_name, const char *new_attr_name,
                      hid_t lapl_id, hid_t es_id),
                     (app_file, app_func, app_line, loc_id, obj_name,
                      old_attr_name, new_attr_name, lapl_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(
    H5Awrite_async, herr_t,
    (const char *app_file, const char *app_func, unsigned int app_line,
     hid_t attr_id, hid_t type_id, const void *buf, hid_t es_id),
    (app_file, app_func, app_line, attr_id, type_id, buf, es_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Dcreate_async, hid_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t loc_id, const char *name,
                      hid_t type_id, hid_t space_id, hid_t lcpl_id,
                      hid_t dcpl_id, hid_t dapl_id, hid_t es_id),
                     (app_file, app_func, app_line, loc_id, name, type_id,
                      space_id, lcpl_id, dcpl_id, dapl_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(
    H5Dopen_async, hid_t,
    (const char *app_file, const char *app_func, unsigned int app_line,
     hid_t loc_id, const char *name, hid_t dapl_id, hid_t es_id),
    (app_file, app_func, app_line, loc_id, name, dapl_id, es_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Dget_space_async, hid_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t dset_id, hid_t es_id),
                     (app_file, app_func, app_line, dset_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Dchunk_iter, herr_t,
                     (hid_t dset_id, hid_t dxpl_id, H5D_chunk_iter_op_t cb,
                      void *op_data),
                     (dset_id, dxpl_id, cb, op_data), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Dread_multi, herr_t,
                     (size_t count, hid_t dset_id[], hid_t mem_type_id[],
                      hid_t mem_space_id[], hid_t file_space_id[],
                      hid_t dxpl_id, void *buf[]),
                     (count, dset_id, mem_type_id, mem_space_id, file_space_id,
                      dxpl_id, buf),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Dread_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t dset_id, hid_t mem_type_id,
                      hid_t mem_space_id, hid_t file_space_id, hid_t dxpl_id,
                      void *buf, hid_t es_id),
                     (app_file, app_func, app_line, dset_id, mem_type_id,
                      mem_space_id, file_space_id, dxpl_id, buf, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Dread_multi_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, size_t count, hid_t dset_id[],
                      hid_t mem_type_id[], hid_t mem_space_id[],
                      hid_t file_space_id[], hid_t dxpl_id, void *buf[],
                      hid_t es_id),
                     (app_file, app_func, app_line, count, dset_id, mem_type_id,
                      mem_space_id, file_space_id, dxpl_id, buf, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Dwrite_multi, herr_t,
                     (size_t count, hid_t dset_id[], hid_t mem_type_id[],
                      hid_t mem_space_id[], hid_t file_space_id[],
                      hid_t dxpl_id, const void *buf[]),
                     (count, dset_id, mem_type_id, mem_space_id, file_space_id,
                      dxpl_id, buf),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Dwrite_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t dset_id, hid_t mem_type_id,
                      hid_t mem_space_id, hid_t file_space_id, hid_t dxpl_id,
                      const void *buf, hid_t es_id),
                     (app_file, app_func, app_line, dset_id, mem_type_id,
                      mem_space_id, file_space_id, dxpl_id, buf, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Dwrite_multi_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, size_t count, hid_t dset_id[],
                      hid_t mem_type_id[], hid_t mem_space_id[],
                      hid_t file_space_id[], hid_t dxpl_id, const void *buf[],
                      hid_t es_id),
                     (app_file, app_func, app_line, count, dset_id, mem_type_id,
                      mem_space_id, file_space_id, dxpl_id, buf, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Dset_extent_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t dset_id,
                      const hsize_t size[], hid_t es_id),
                     (app_file, app_func, app_line, dset_id, size, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Dclose_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t dset_id, hid_t es_id),
                     (app_file, app_func, app_line, dset_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5EScreate, hid_t, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5ESwait, herr_t,
                     (hid_t es_id, uint64_t timeout, size_t *num_in_progress,
                      hbool_t *err_occurred),
                     (es_id, timeout, num_in_progress, err_occurred),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5EScancel, herr_t,
                     (hid_t es_id, size_t *num_not_canceled,
                      hbool_t *err_occurred),
                     (es_id, num_not_canceled, err_occurred), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5ESget_count, herr_t, (hid_t es_id, size_t *count),
                     (es_id, count), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5ESget_op_counter, herr_t,
                     (hid_t es_id, uint64_t *counter), (es_id, counter),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5ESget_err_status, herr_t,
                     (hid_t es_id, hbool_t *err_occurred),
                     (es_id, err_occurred), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5ESget_err_count, herr_t, (hid_t es_id, size_t *num_errs),
                     (es_id, num_errs), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5ESget_err_info, herr_t,
                     (hid_t es_id, size_t num_err_info,
                      H5ES_err_info_t err_info[], size_t *err_cleared),
                     (es_id, num_err_info, err_info, err_cleared),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5ESfree_err_info, herr_t,
                     (size_t num_err_info, H5ES_err_info_t err_info[]),
                     (num_err_info, err_info), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5ESregister_insert_func, herr_t,
                     (hid_t es_id, H5ES_event_insert_func_t func, void *ctx),
                     (es_id, func, ctx), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5ESregister_complete_func, herr_t,
                     (hid_t es_id, H5ES_event_complete_func_t func, void *ctx),
                     (es_id, func, ctx), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5ESclose, herr_t, (hid_t es_id), (es_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Fcreate_async, hid_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, const char *filename,
                      unsigned int flags, hid_t fcpl_id, hid_t fapl_id,
                      hid_t es_id),
                     (app_file, app_func, app_line, filename, flags, fcpl_id,
                      fapl_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Fopen_async, hid_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, const char *filename,
                      unsigned int flags, hid_t access_plist, hid_t es_id),
                     (app_file, app_func, app_line, filename, flags,
                      access_plist, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Freopen_async, hid_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t file_id, hid_t es_id),
                     (app_file, app_func, app_line, file_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Fflush_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t object_id, H5F_scope_t scope,
                      hid_t es_id),
                     (app_file, app_func, app_line, object_id, scope, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Fclose_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t file_id, hid_t es_id),
                     (app_file, app_func, app_line, file_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Fset_mdc_config, herr_t,
                     (hid_t file_id, const H5AC_cache_config_t *config_ptr),
                     (file_id, config_ptr), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Lcreate_hard_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t cur_loc_id,
                      const char *cur_name, hid_t new_loc_id,
                      const char *new_name, hid_t lcpl_id, hid_t lapl_id,
                      hid_t es_id),
                     (app_file, app_func, app_line, cur_loc_id, cur_name,
                      new_loc_id, new_name, lcpl_id, lapl_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Lcreate_soft_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, const char *link_target,
                      hid_t link_loc_id, const char *link_name, hid_t lcpl_id,
                      hid_t lapl_id, hid_t es_id),
                     (app_file, app_func, app_line, link_target, link_loc_id,
                      link_name, lcpl_id, lapl_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(
    H5Ldelete_async, herr_t,
    (const char *app_file, const char *app_func, unsigned int app_line,
     hid_t loc_id, const char *name, hid_t lapl_id, hid_t es_id),
    (app_file, app_func, app_line, loc_id, name, lapl_id, es_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Ldelete_by_idx_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t loc_id,
                      const char *group_name, H5_index_t idx_type,
                      H5_iter_order_t order, hsize_t n, hid_t lapl_id,
                      hid_t es_id),
                     (app_file, app_func, app_line, loc_id, group_name,
                      idx_type, order, n, lapl_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Lexists_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t loc_id, const char *name,
                      hbool_t *exists, hid_t lapl_id, hid_t es_id),
                     (app_file, app_func, app_line, loc_id, name, exists,
                      lapl_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Literate_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t group_id,
                      H5_index_t idx_type, H5_iter_order_t order,
                      hsize_t *idx_p, H5L_iterate2_t op, void *op_data,
                      hid_t es_id),
                     (app_file, app_func, app_line, group_id, idx_type, order,
                      idx_p, op, op_data, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Gcreate_async, hid_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t loc_id, const char *name,
                      hid_t lcpl_id, hid_t gcpl_id, hid_t gapl_id, hid_t es_id),
                     (app_file, app_func, app_line, loc_id, name, lcpl_id,
                      gcpl_id, gapl_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(
    H5Gopen_async, hid_t,
    (const char *app_file, const char *app_func, unsigned int app_line,
     hid_t loc_id, const char *name, hid_t gapl_id, hid_t es_id),
    (app_file, app_func, app_line, loc_id, name, gapl_id, es_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Gget_info_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t loc_id, H5G_info_t *ginfo,
                      hid_t es_id),
                     (app_file, app_func, app_line, loc_id, ginfo, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Gget_info_by_name_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t loc_id, const char *name,
                      H5G_info_t *ginfo, hid_t lapl_id, hid_t es_id),
                     (app_file, app_func, app_line, loc_id, name, ginfo,
                      lapl_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Gget_info_by_idx_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t loc_id,
                      const char *group_name, H5_index_t idx_type,
                      H5_iter_order_t order, hsize_t n, H5G_info_t *ginfo,
                      hid_t lapl_id, hid_t es_id),
                     (app_file, app_func, app_line, loc_id, group_name,
                      idx_type, order, n, ginfo, lapl_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Gclose_async, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t group_id, hid_t es_id),
                     (app_file, app_func, app_line, group_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLquery_optional, herr_t,
                     (hid_t obj_id, H5VL_subclass_t subcls, int opt_type,
                      uint64_t *flags),
                     (obj_id, subcls, opt_type, flags), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Ropen_object_async, hid_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, H5R_ref_t *ref_ptr, hid_t rapl_id,
                      hid_t oapl_id, hid_t es_id),
                     (app_file, app_func, app_line, ref_ptr, rapl_id, oapl_id,
                      es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Ropen_region_async, hid_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, H5R_ref_t *ref_ptr, hid_t rapl_id,
                      hid_t oapl_id, hid_t es_id),
                     (app_file, app_func, app_line, ref_ptr, rapl_id, oapl_id,
                      es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Ropen_attr_async, hid_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, H5R_ref_t *ref_ptr, hid_t rapl_id,
                      hid_t aapl_id, hid_t es_id),
                     (app_file, app_func, app_line, ref_ptr, rapl_id, aapl_id,
                      es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLregister_opt_operation, herr_t,
                     (H5VL_subclass_t subcls, const char *op_name, int *op_val),
                     (subcls, op_name, op_val), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLfind_opt_operation, herr_t,
                     (H5VL_subclass_t subcls, const char *op_name, int *op_val),
                     (subcls, op_name, op_val), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLunregister_opt_operation, herr_t,
                     (H5VL_subclass_t subcls, const char *op_name),
                     (subcls, op_name), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLattr_optional_op, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t attr_id,
                      H5VL_optional_args_t *args, hid_t dxpl_id, hid_t es_id),
                     (app_file, app_func, app_line, attr_id, args, dxpl_id,
                      es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLdataset_optional_op, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t dset_id,
                      H5VL_optional_args_t *args, hid_t dxpl_id, hid_t es_id),
                     (app_file, app_func, app_line, dset_id, args, dxpl_id,
                      es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLdatatype_optional_op, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t type_id,
                      H5VL_optional_args_t *args, hid_t dxpl_id, hid_t es_id),
                     (app_file, app_func, app_line, type_id, args, dxpl_id,
                      es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLfile_optional_op, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t file_id,
                      H5VL_optional_args_t *args, hid_t dxpl_id, hid_t es_id),
                     (app_file, app_func, app_line, file_id, args, dxpl_id,
                      es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLgroup_optional_op, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t group_id,
                      H5VL_optional_args_t *args, hid_t dxpl_id, hid_t es_id),
                     (app_file, app_func, app_line, group_id, args, dxpl_id,
                      es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLlink_optional_op, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t loc_id, const char *name,
                      hid_t lapl_id, H5VL_optional_args_t *args, hid_t dxpl_id,
                      hid_t es_id),
                     (app_file, app_func, app_line, loc_id, name, lapl_id, args,
                      dxpl_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLobject_optional_op, herr_t,
                     (const char *app_file, const char *app_func,
                      unsigned int app_line, hid_t loc_id, const char *name,
                      hid_t lapl_id, H5VL_optional_args_t *args, hid_t dxpl_id,
                      hid_t es_id),
                     (app_file, app_func, app_line, loc_id, name, lapl_id, args,
                      dxpl_id, es_id),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLrequest_optional_op, herr_t,
                     (void *req, hid_t connector_id,
                      H5VL_optional_args_t *args),
                     (req, connector_id, args), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Ssel_iter_get_seq_list, herr_t,
                     (hid_t sel_iter_id, size_t maxseq, size_t maxelmts,
                      size_t *nseq, size_t *nelmts, hsize_t *off, size_t *len),
                     (sel_iter_id, maxseq, maxelmts, nseq, nelmts, off, len),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_driver_config_str, ssize_t,
                     (hid_t fapl_id, char *config_buf, size_t buf_size),
                     (fapl_id, config_buf, buf_size), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_driver_by_name, herr_t,
                     (hid_t plist_id, const char *driver_name,
                      const char *driver_config),
                     (plist_id, driver_name, driver_config), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_driver_by_value, herr_t,
                     (hid_t plist_id, H5FD_class_value_t driver_value,
                      const char *driver_config),
                     (plist_id, driver_value, driver_config), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_vol_cap_flags, herr_t,
                     (hid_t plist_id, uint64_t *cap_flags),
                     (plist_id, cap_flags), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_dataset_io_hyperslab_selection, herr_t,
                     (hid_t plist_id, unsigned int rank, H5S_seloper_t op,
                      const hsize_t start[], const hsize_t stride[],
                      const hsize_t count[], const hsize_t block[]),
                     (plist_id, rank, op, start, stride, count, block),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_selection_io, herr_t,
                     (hid_t plist_id,
                      H5D_selection_io_mode_t selection_io_mode),
                     (plist_id, selection_io_mode), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_selection_io, herr_t,
                     (hid_t plist_id,
                      H5D_selection_io_mode_t *selection_io_mode),
                     (plist_id, selection_io_mode), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_no_selection_io_cause, herr_t,
                     (hid_t plist_id, uint32_t *no_selection_io_cause),
                     (plist_id, no_selection_io_cause), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_actual_selection_io_mode, herr_t,
                     (hid_t plist_id, uint32_t *actual_selection_io_mode),
                     (plist_id, actual_selection_io_mode), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_modify_write_buf, herr_t,
                     (hid_t plist_id, hbool_t modify_write_buf),
                     (plist_id, modify_write_buf), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_modify_write_buf, herr_t,
                     (hid_t plist_id, hbool_t *modify_write_buf),
                     (plist_id, modify_write_buf), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5ESinsert_request, herr_t,
                     (hid_t es_id, hid_t connector_id, void *request),
                     (es_id, connector_id, request), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5ESget_requests, herr_t,
                     (hid_t es_id, H5_iter_order_t order, hid_t *connector_ids,
                      void **requests, size_t array_len, size_t *count),
                     (es_id, order, connector_ids, requests, array_len, count),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5FDperform_init, hid_t, (H5FD_init_t op), (op),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5FDis_driver_registered_by_name, htri_t,
                     (const char *driver_name), (driver_name), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5FDis_driver_registered_by_value, htri_t,
                     (H5FD_class_value_t driver_value), (driver_value),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5FDread_vector, herr_t,
                     (H5FD_t * file, hid_t dxpl_id, uint32_t count,
                      H5FD_mem_t types[], haddr_t addrs[], size_t sizes[],
                      void *bufs[]),
                     (file, dxpl_id, count, types, addrs, sizes, bufs),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5FDwrite_vector, herr_t,
                     (H5FD_t * file, hid_t dxpl_id, uint32_t count,
                      H5FD_mem_t types[], haddr_t addrs[], size_t sizes[],
                      const void *bufs[]),
                     (file, dxpl_id, count, types, addrs, sizes, bufs),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5FDread_selection, herr_t,
                     (H5FD_t * file, H5FD_mem_t type, hid_t dxpl_id,
                      uint32_t count, hid_t mem_spaces[], hid_t file_spaces[],
                      haddr_t offsets[], size_t element_sizes[], void *bufs[]),
                     (file, type, dxpl_id, count, mem_spaces, file_spaces,
                      offsets, element_sizes, bufs),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5FDwrite_selection, herr_t,
                     (H5FD_t * file, H5FD_mem_t type, hid_t dxpl_id,
                      uint32_t count, hid_t mem_spaces[], hid_t file_spaces[],
                      haddr_t offsets[], size_t element_sizes[],
                      const void *bufs[]),
                     (file, type, dxpl_id, count, mem_spaces, file_spaces,
                      offsets, element_sizes, bufs),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5FDread_vector_from_selection, herr_t,
                     (H5FD_t * file, H5FD_mem_t type, hid_t dxpl_id,
                      uint32_t count, hid_t mem_spaces[], hid_t file_spaces[],
                      haddr_t offsets[], size_t element_sizes[], void *bufs[]),
                     (file, type, dxpl_id, count, mem_spaces, file_spaces,
                      offsets, element_sizes, bufs),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5FDwrite_vector_from_selection, herr_t,
                     (H5FD_t * file, H5FD_mem_t type, hid_t dxpl_id,
                      uint32_t count, hid_t mem_spaces[], hid_t file_spaces[],
                      haddr_t offsets[], size_t element_sizes[],
                      const void *bufs[]),
                     (file, type, dxpl_id, count, mem_spaces, file_spaces,
                      offsets, element_sizes, bufs),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5FDread_from_selection, herr_t,
                     (H5FD_t * file, H5FD_mem_t type, hid_t dxpl_id,
                      uint32_t count, hid_t mem_space_ids[],
                      hid_t file_space_ids[], haddr_t offsets[],
                      size_t element_sizes[], void *bufs[]),
                     (file, type, dxpl_id, count, mem_space_ids, file_space_ids,
                      offsets, element_sizes, bufs),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5FDwrite_from_selection, herr_t,
                     (H5FD_t * file, H5FD_mem_t type, hid_t dxpl_id,
                      uint32_t count, hid_t mem_space_ids[],
                      hid_t file_space_ids[], haddr_t offsets[],
                      size_t element_sizes[], const void *bufs[]),
                     (file, type, dxpl_id, count, mem_space_ids, file_space_ids,
                      offsets, element_sizes, bufs),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5FDdelete, herr_t, (const char *name, hid_t fapl_id),
                     (name, fapl_id), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5FDctl, herr_t,
                     (H5FD_t * file, uint64_t op_code, uint64_t flags,
                      const void *input, void **output),
                     (file, op_code, flags, input, output), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Iregister_future, hid_t,
                     (H5I_type_t type, const void *object,
                      H5I_future_realize_func_t realize_cb,
                      H5I_future_discard_func_t discard_cb),
                     (type, object, realize_cb, discard_cb), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5TSmutex_acquire, herr_t,
                     (unsigned int lock_count, _Bool *acquired),
                     (lock_count, acquired), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5TSmutex_release, herr_t, (unsigned int *lock_count),
                     (lock_count), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5TSmutex_get_attempt_count, herr_t, (unsigned int *count),
                     (count), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLstart_lib_state, herr_t, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLfinish_lib_state, herr_t, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLget_cap_flags, herr_t,
                     (hid_t connector_id, uint64_t *cap_flags),
                     (connector_id, cap_flags), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLattr_get, herr_t,
                     (void *obj, hid_t connector_id, H5VL_attr_get_args_t *args,
                      hid_t dxpl_id, void **req),
                     (obj, connector_id, args, dxpl_id, req), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLattr_specific, herr_t,
                     (void *obj, const H5VL_loc_params_t *loc_params,
                      hid_t connector_id, H5VL_attr_specific_args_t *args,
                      hid_t dxpl_id, void **req),
                     (obj, loc_params, connector_id, args, dxpl_id, req),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLattr_optional, herr_t,
                     (void *obj, hid_t connector_id, H5VL_optional_args_t *args,
                      hid_t dxpl_id, void **req),
                     (obj, connector_id, args, dxpl_id, req), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLdataset_read, herr_t,
                     (size_t count, void *dset[], hid_t connector_id,
                      hid_t mem_type_id[], hid_t mem_space_id[],
                      hid_t file_space_id[], hid_t plist_id, void *buf[],
                      void **req),
                     (count, dset, connector_id, mem_type_id, mem_space_id,
                      file_space_id, plist_id, buf, req),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLdataset_write, herr_t,
                     (size_t count, void *dset[], hid_t connector_id,
                      hid_t mem_type_id[], hid_t mem_space_id[],
                      hid_t file_space_id[], hid_t plist_id, const void *buf[],
                      void **req),
                     (count, dset, connector_id, mem_type_id, mem_space_id,
                      file_space_id, plist_id, buf, req),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLdataset_get, herr_t,
                     (void *dset, hid_t connector_id,
                      H5VL_dataset_get_args_t *args, hid_t dxpl_id, void **req),
                     (dset, connector_id, args, dxpl_id, req), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLdataset_specific, herr_t,
                     (void *obj, hid_t connector_id,
                      H5VL_dataset_specific_args_t *args, hid_t dxpl_id,
                      void **req),
                     (obj, connector_id, args, dxpl_id, req), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLdataset_optional, herr_t,
                     (void *obj, hid_t connector_id, H5VL_optional_args_t *args,
                      hid_t dxpl_id, void **req),
                     (obj, connector_id, args, dxpl_id, req), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLdatatype_get, herr_t,
                     (void *dt, hid_t connector_id,
                      H5VL_datatype_get_args_t *args, hid_t dxpl_id,
                      void **req),
                     (dt, connector_id, args, dxpl_id, req), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLdatatype_specific, herr_t,
                     (void *obj, hid_t connector_id,
                      H5VL_datatype_specific_args_t *args, hid_t dxpl_id,
                      void **req),
                     (obj, connector_id, args, dxpl_id, req), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLdatatype_optional, herr_t,
                     (void *obj, hid_t connector_id, H5VL_optional_args_t *args,
                      hid_t dxpl_id, void **req),
                     (obj, connector_id, args, dxpl_id, req), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLfile_get, herr_t,
                     (void *file, hid_t connector_id,
                      H5VL_file_get_args_t *args, hid_t dxpl_id, void **req),
                     (file, connector_id, args, dxpl_id, req), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLfile_specific, herr_t,
                     (void *obj, hid_t connector_id,
                      H5VL_file_specific_args_t *args, hid_t dxpl_id,
                      void **req),
                     (obj, connector_id, args, dxpl_id, req), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLfile_optional, herr_t,
                     (void *obj, hid_t connector_id, H5VL_optional_args_t *args,
                      hid_t dxpl_id, void **req),
                     (obj, connector_id, args, dxpl_id, req), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLgroup_get, herr_t,
                     (void *obj, hid_t connector_id,
                      H5VL_group_get_args_t *args, hid_t dxpl_id, void **req),
                     (obj, connector_id, args, dxpl_id, req), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLgroup_specific, herr_t,
                     (void *obj, hid_t connector_id,
                      H5VL_group_specific_args_t *args, hid_t dxpl_id,
                      void **req),
                     (obj, connector_id, args, dxpl_id, req), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLgroup_optional, herr_t,
                     (void *obj, hid_t connector_id, H5VL_optional_args_t *args,
                      hid_t dxpl_id, void **req),
                     (obj, connector_id, args, dxpl_id, req), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLlink_create, herr_t,
                     (H5VL_link_create_args_t * args, void *obj,
                      const H5VL_loc_params_t *loc_params, hid_t connector_id,
                      hid_t lcpl_id, hid_t lapl_id, hid_t dxpl_id, void **req),
                     (args, obj, loc_params, connector_id, lcpl_id, lapl_id,
                      dxpl_id, req),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLlink_get, herr_t,
                     (void *obj, const H5VL_loc_params_t *loc_params,
                      hid_t connector_id, H5VL_link_get_args_t *args,
                      hid_t dxpl_id, void **req),
                     (obj, loc_params, connector_id, args, dxpl_id, req),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLlink_specific, herr_t,
                     (void *obj, const H5VL_loc_params_t *loc_params,
                      hid_t connector_id, H5VL_link_specific_args_t *args,
                      hid_t dxpl_id, void **req),
                     (obj, loc_params, connector_id, args, dxpl_id, req),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLlink_optional, herr_t,
                     (void *obj, const H5VL_loc_params_t *loc_params,
                      hid_t connector_id, H5VL_optional_args_t *args,
                      hid_t dxpl_id, void **req),
                     (obj, loc_params, connector_id, args, dxpl_id, req),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLobject_get, herr_t,
                     (void *obj, const H5VL_loc_params_t *loc_params,
                      hid_t connector_id, H5VL_object_get_args_t *args,
                      hid_t dxpl_id, void **req),
                     (obj, loc_params, connector_id, args, dxpl_id, req),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLobject_specific, herr_t,
                     (void *obj, const H5VL_loc_params_t *loc_params,
                      hid_t connector_id, H5VL_object_specific_args_t *args,
                      hid_t dxpl_id, void **req),
                     (obj, loc_params, connector_id, args, dxpl_id, req),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLobject_optional, herr_t,
                     (void *obj, const H5VL_loc_params_t *loc_params,
                      hid_t connector_id, H5VL_optional_args_t *args,
                      hid_t dxpl_id, void **req),
                     (obj, loc_params, connector_id, args, dxpl_id, req),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLintrospect_get_cap_flags, herr_t,
                     (const void *info, hid_t connector_id,
                      uint64_t *cap_flags),
                     (info, connector_id, cap_flags), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLintrospect_opt_query, herr_t,
                     (void *obj, hid_t connector_id, H5VL_subclass_t subcls,
                      int opt_type, uint64_t *flags),
                     (obj, connector_id, subcls, opt_type, flags),
                     brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLrequest_wait, herr_t,
                     (void *req, hid_t connector_id, uint64_t timeout,
                      H5VL_request_status_t *status),
                     (req, connector_id, timeout, status), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLrequest_cancel, herr_t,
                     (void *req, hid_t connector_id,
                      H5VL_request_status_t *status),
                     (req, connector_id, status), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLrequest_specific, herr_t,
                     (void *req, hid_t connector_id,
                      H5VL_request_specific_args_t *args),
                     (req, connector_id, args), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLrequest_optional, herr_t,
                     (void *req, hid_t connector_id,
                      H5VL_optional_args_t *args),
                     (req, connector_id, args), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLblob_specific, herr_t,
                     (void *obj, hid_t connector_id, void *blob_id,
                      H5VL_blob_specific_args_t *args),
                     (obj, connector_id, blob_id, args), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLblob_optional, herr_t,
                     (void *obj, hid_t connector_id, void *blob_id,
                      H5VL_optional_args_t *args),
                     (obj, connector_id, blob_id, args), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5VLoptional, herr_t,
                     (void *obj, hid_t connector_id, H5VL_optional_args_t *args,
                      hid_t dxpl_id, void **req),
                     (obj, connector_id, args, dxpl_id, req), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5FD_onion_init, hid_t, (void), (), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Pget_fapl_onion, herr_t,
                     (hid_t fapl_id, H5FD_onion_fapl_info_t *fa_out),
                     (fapl_id, fa_out), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5Pset_fapl_onion, herr_t,
                     (hid_t fapl_id, const H5FD_onion_fapl_info_t *fa),
                     (fapl_id, fa), brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
GOTCHA_MACRO_TYPEDEF(H5FDonion_get_revision_count, herr_t,
                     (const char *filename, hid_t fapl_id,
                      uint64_t *revision_count),
                     (filename, fapl_id, revision_count), brahma::HDF5);
#endif

template <typename C>
size_t brahma::HDF5::bind(const char *name, uint16_t priority) {
#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5open, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5close, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5dont_atexit, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5garbage_collect, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5set_free_list_limits, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5get_libversion, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5check_version, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5is_library_threadsafe, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5free_memory, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5allocate_memory, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5resize_memory, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Iregister, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Iobject_verify, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Iremove_verify, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Iget_type, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Iget_file_id, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Iget_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Iinc_ref, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Idec_ref, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Iget_ref, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Iregister_type, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Iclear_type, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Idestroy_type, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Iinc_type_ref, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Idec_type_ref, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Iget_type_ref, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Isearch, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Inmembers, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Itype_exists, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Iis_valid, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tcreate, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tcopy, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tclose, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tequal, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tlock, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tcommit2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Topen2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tcommit_anon, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_create_plist, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tcommitted, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tencode, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tdecode, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tinsert, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tpack, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tenum_create, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tenum_insert, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tenum_nameof, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tenum_valueof, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tvlen_create, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tarray_create2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_array_ndims, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_array_dims2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tset_tag, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_tag, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_super, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_class, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tdetect_class, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_size, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_order, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_precision, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_offset, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_pad, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_sign, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_fields, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_ebias, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_norm, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_inpad, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_strpad, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_nmembers, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_member_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_member_index, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_member_offset, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_member_class, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_member_type, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_member_value, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_cset, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tis_variable_str, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_native_type, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tset_size, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tset_order, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tset_precision, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tset_offset, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tset_pad, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tset_sign, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tset_fields, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tset_ebias, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tset_norm, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tset_inpad, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tset_cset, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tset_strpad, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tregister, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tunregister, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tfind, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tcompiler_conv, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tconvert, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tcommit1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Topen1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tarray_create1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tget_array_dims1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Lmove, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Lcopy, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Lcreate_hard, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Lcreate_soft, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Ldelete, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Ldelete_by_idx, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Lget_val, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Lget_val_by_idx, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Lexists, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5Lget_info, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5Lget_info_by_idx, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Lget_name_by_idx, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5Literate, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5Literate_by_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5Lvisit, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5Lvisit_by_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Lcreate_ud, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Lregister, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Lunregister, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Lis_registered, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Lunpack_elink_val, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Lcreate_external, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Oopen, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Oopen_by_addr, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Oopen_by_idx, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Oexists_by_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5Oget_info, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5Oget_info_by_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5Oget_info_by_idx, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Olink, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Oincr_refcount, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Odecr_refcount, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Ocopy, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Oset_comment, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Oset_comment_by_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Oget_comment, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Oget_comment_by_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5Ovisit, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5Ovisit_by_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Oclose, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Aclose, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Acreate2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Acreate_by_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Adelete, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Adelete_by_idx, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Adelete_by_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Aexists, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Aexists_by_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Aget_create_plist, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Aget_info, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Aget_info_by_idx, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Aget_info_by_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Aget_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Aget_name_by_idx, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Aget_space, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Aget_storage_size, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Aget_type, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Aiterate2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Aiterate_by_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Aopen, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Aopen_by_idx, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Aopen_by_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Aread, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Arename, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Awrite, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Arename_by_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Acreate1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Aget_num_attrs, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Aiterate1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Aopen_idx, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Aopen_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dcreate2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dcreate_anon, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dopen2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dget_space, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dget_space_status, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dget_type, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dget_create_plist, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dget_access_plist, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dget_storage_size, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dget_chunk_storage_size, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dget_offset, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dread, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dwrite, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Diterate, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dvlen_reclaim, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dvlen_get_buf_size, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dfill, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dset_extent, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dscatter, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dgather, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dclose, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Ddebug, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dcreate1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dopen1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dextend, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Eregister_class, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Eunregister_class, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Eclose_msg, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Ecreate_msg, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Ecreate_stack, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Eget_current_stack, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Eclose_stack, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Eget_class_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Eset_current_stack, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Epush2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Epop, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Eprint2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Ewalk2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Eget_auto2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Eset_auto2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Eclear2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Eauto_is_v2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Eget_msg, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Eget_num, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Eclear1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Eget_auto1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Epush1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Eprint1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Eset_auto1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Ewalk1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Eget_major, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Eget_minor, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5Fis_hdf5, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fcreate, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fopen, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Freopen, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fflush, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fclose, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fget_create_plist, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fget_access_plist, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fget_intent, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fget_obj_count, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fget_obj_ids, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fget_vfd_handle, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fmount, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Funmount, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fget_freespace, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fget_filesize, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fget_file_image, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fget_mdc_config, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101200
  GOTCHA_BINDING_MACRO(H5Fset_mdc_config, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fget_mdc_hit_rate, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fget_mdc_size, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Freset_mdc_hit_rate_stats, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fget_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5Fget_info, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fclear_elink_file_cache, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fset_mpi_atomicity, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fget_mpi_atomicity, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FDregister, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FDunregister, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FDopen, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FDclose, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FDcmp, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FDquery, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FDalloc, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FDfree, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FDget_eoa, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FDset_eoa, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5FDget_eof, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FDget_vfd_handle, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FDread, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FDwrite, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5FDflush, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FDtruncate, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FDdriver_query, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Gcreate2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Gcreate_anon, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Gopen2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Gget_create_plist, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Gget_info, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Gget_info_by_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Gget_info_by_idx, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Gflush, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Grefresh, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Gclose, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Gcreate1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Gopen1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Glink, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Glink2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Gmove, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Gmove2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Gunlink, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Gget_linkval, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Gset_comment, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Gget_comment, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Giterate, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Gget_num_objs, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Gget_objinfo, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Gget_objname_by_idx, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Gget_objtype_by_idx, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Zregister, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Zunregister, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Zfilter_avail, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Zget_filter_info, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pclose, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pclose_class, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pcopy, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pcopy_prop, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pcreate, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pcreate_class, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pequal, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pexist, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_class, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_class_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_class_parent, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_nprops, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_size, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pinsert2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pisa_class, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Piterate, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pregister2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Premove, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5Pset, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Punregister, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pall_filters_avail, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_attr_creation_order, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_attr_phase_change, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_filter2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_filter_by_id2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_nfilters, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_obj_track_times, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pmodify_filter, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Premove_filter, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_attr_creation_order, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_attr_phase_change, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_deflate, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_filter, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_fletcher32, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_obj_track_times, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_istore_k, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_shared_mesg_index, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_shared_mesg_nindexes, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_shared_mesg_phase_change, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_sizes, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_sym_k, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_userblock, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_version, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_istore_k, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_shared_mesg_index, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_shared_mesg_nindexes, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_shared_mesg_phase_change, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_sizes, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_sym_k, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_userblock, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_alignment, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_cache, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_core_write_tracking, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_driver, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5Pget_driver_info, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_elink_file_cache_size, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_family_offset, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_fclose_degree, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_file_image, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_file_image_callbacks, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_gc_references, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_libver_bounds, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_mdc_config, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_meta_block_size, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_multi_type, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_sieve_buf_size, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_small_data_block_size, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_alignment, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_cache, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_core_write_tracking, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_driver, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_elink_file_cache_size, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_family_offset, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_fclose_degree, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_file_image, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_file_image_callbacks, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_gc_references, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_libver_bounds, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_mdc_config, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_meta_block_size, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_multi_type, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_sieve_buf_size, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_small_data_block_size, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pfill_value_defined, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_alloc_time, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_chunk, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_external, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_external_count, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_fill_time, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_fill_value, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_layout, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_alloc_time, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_chunk, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_external, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_fill_time, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_fill_value, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_shuffle, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_layout, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_nbit, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_scaleoffset, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_szip, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_chunk_cache, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_efile_prefix, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_chunk_cache, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_efile_prefix, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_btree_ratios, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_buffer, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_data_transform, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_edc_check, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_hyper_vector_size, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_preserve, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_type_conv_cb, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_vlen_mem_manager, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_btree_ratios, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_buffer, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_data_transform, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_edc_check, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_filter_callback, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_hyper_vector_size, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_preserve, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_type_conv_cb, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_vlen_mem_manager, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_mpio_actual_chunk_opt_mode, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_mpio_actual_io_mode, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_mpio_no_collective_cause, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_create_intermediate_group, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_create_intermediate_group, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_est_link_info, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_link_creation_order, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_link_phase_change, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_local_heap_size_hint, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_est_link_info, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_link_creation_order, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_link_phase_change, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_local_heap_size_hint, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_char_encoding, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_char_encoding, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_elink_acc_flags, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_elink_cb, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_elink_fapl, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_elink_prefix, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_nlinks, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_elink_acc_flags, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_elink_cb, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_elink_fapl, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_elink_prefix, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_nlinks, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Padd_merge_committed_dtype_path, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pfree_merge_committed_dtype_paths, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_copy_object, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_mcdt_search_cb, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_copy_object, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_mcdt_search_cb, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pregister1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pinsert1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_filter1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_filter_by_id1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5PLset_loading_state, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5PLget_loading_state, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5PLappend, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5PLprepend, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5PLreplace, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5PLinsert, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5PLremove, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5PLget, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5PLsize, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Rcreate, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5Rdereference, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Rget_region, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5Rget_obj_type2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Rget_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Rget_obj_type1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sclose, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Scopy, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Screate, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Screate_simple, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sdecode, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5Sencode, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sextent_copy, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sextent_equal, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sget_simple_extent_dims, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sget_simple_extent_ndims, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sget_simple_extent_npoints, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sget_simple_extent_type, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sis_simple, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sset_extent_none, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sset_extent_simple, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sget_select_bounds, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sget_select_elem_npoints, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sget_select_elem_pointlist, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sget_select_hyper_blocklist, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sget_select_hyper_nblocks, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sget_select_npoints, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sget_select_type, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Soffset_simple, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sselect_all, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sselect_elements, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sselect_hyperslab, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sselect_none, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sselect_valid, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FD_core_init, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5FD_core_term, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_fapl_core, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_fapl_core, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FD_family_init, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5FD_family_term, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_fapl_family, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_fapl_family, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101200
  GOTCHA_BINDING_MACRO(H5FD_hdfs_init, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5FD_hdfs_term, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101200
  GOTCHA_BINDING_MACRO(H5Pget_fapl_hdfs, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101200
  GOTCHA_BINDING_MACRO(H5Pset_fapl_hdfs, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FD_log_init, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5FD_log_term, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_fapl_log, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FD_mpio_init, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5FD_mpio_term, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_fapl_mpio, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_fapl_mpio, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_dxpl_mpio, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_dxpl_mpio, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_dxpl_mpio_collective_opt, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_dxpl_mpio_chunk_opt, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_dxpl_mpio_chunk_opt_num, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_dxpl_mpio_chunk_opt_ratio, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FD_multi_init, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5FD_multi_term, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_fapl_multi, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_fapl_multi, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_fapl_split, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FD_sec2_init, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5FD_sec2_term, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_fapl_sec2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FD_stdio_init, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  GOTCHA_BINDING_MACRO(H5FD_stdio_term, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_fapl_stdio, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5get_free_list_sizes, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5get_alloc_stats, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Iiterate, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Tflush, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Trefresh, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Treclaim, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Lget_info2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Lget_info_by_idx2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Literate2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Literate_by_name2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Lvisit2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Lvisit_by_name2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Lget_info1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Lget_info_by_idx1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Literate1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Literate_by_name1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Lvisit1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Lvisit_by_name1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Oopen_by_token, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Oget_info3, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Oget_info_by_name3, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Oget_info_by_idx3, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Oget_native_info, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Oget_native_info_by_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Oget_native_info_by_idx, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Ovisit3, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Ovisit_by_name3, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Oflush, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Orefresh, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Odisable_mdc_flushes, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Oenable_mdc_flushes, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Oare_mdc_flushes_disabled, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Otoken_cmp, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Otoken_to_str, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Otoken_from_str, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Oget_info1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Oget_info_by_name1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Oget_info_by_idx1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Oget_info2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Oget_info_by_name2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Oget_info_by_idx2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Ovisit1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Ovisit_by_name1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Ovisit2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Ovisit_by_name2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dget_num_chunks, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dget_chunk_info_by_coord, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dget_chunk_info, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dwrite_chunk, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dread_chunk, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dflush, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Drefresh, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dformat_convert, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Dget_chunk_index_type, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Eappend_stack, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fis_accessible, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fdelete, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fget_fileno, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fget_eoa, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fincrement_filesize, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fget_info2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fget_metadata_read_retry_info, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fstart_swmr_write, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fget_free_sections, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fset_libver_bounds, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fstart_mdc_logging, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fstop_mdc_logging, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fget_mdc_logging_status, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fformat_convert, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Freset_page_buffering_stats, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fget_page_buffering_stats, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fget_mdc_image_info, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fget_dset_no_attrs_hint, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fset_dset_no_attrs_hint, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fget_info1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fset_latest_format, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Fis_hdf5, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FDget_eof, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FDflush, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FDlock, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FDunlock, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Scombine_hyperslab, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Scombine_select, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sencode2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sget_regular_hyperslab, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sis_regular_hyperslab, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Smodify_select, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Ssel_iter_close, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Ssel_iter_create, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5Ssel_iter_get_seq_list, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Ssel_iter_reset, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sselect_adjust, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sselect_copy, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sselect_intersect_block, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sselect_project_intersection, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sselect_shape_same, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Sencode1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pdecode, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pencode2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_file_space_page_size, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_file_space_strategy, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_file_space_page_size, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_file_space_strategy, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_driver_info, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_evict_on_close, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_file_locking, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_mdc_image_config, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_mdc_log_options, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_metadata_read_attempts, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_object_flush_cb, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_page_buffer_size, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_vol_id, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_vol_info, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_evict_on_close, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_file_locking, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_mdc_log_options, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_metadata_read_attempts, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_object_flush_cb, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_vol, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_all_coll_metadata_ops, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_all_coll_metadata_ops, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_coll_metadata_write, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_coll_metadata_write, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_mpi_params, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_mpi_params, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_mdc_image_config, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_page_buffer_size, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_chunk_opts, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_dset_no_attrs_hint, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_virtual_count, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_virtual_dsetname, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_virtual_filename, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_virtual_srcspace, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_virtual_vspace, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_chunk_opts, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_dset_no_attrs_hint, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_virtual, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_append_flush, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_virtual_prefix, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_virtual_printf_gap, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_virtual_view, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_append_flush, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_virtual_prefix, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_virtual_printf_gap, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_virtual_view, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pencode1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_file_space, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_file_space, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Rcreate_object, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Rcreate_region, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Rcreate_attr, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Rdestroy, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Rget_type, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Requal, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Rcopy, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Ropen_object, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Ropen_region, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Ropen_attr, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Rget_obj_type3, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Rget_file_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Rget_obj_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Rget_attr_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Rdereference1, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Rget_obj_type2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Rdereference2, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLregister_connector_by_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLregister_connector_by_value, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLis_connector_registered_by_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLis_connector_registered_by_value, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLget_connector_id, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLget_connector_id_by_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLget_connector_id_by_value, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLget_connector_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLclose, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLunregister_connector, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLquery_optional, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLobject_is_native, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLregister_connector, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLobject, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLget_file_type, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLpeek_connector_id_by_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLpeek_connector_id_by_value, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLcmp_connector_cls, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLwrap_register, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLretrieve_lib_state, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLrestore_lib_state, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLreset_lib_state, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLfree_lib_state, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLget_object, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLget_wrap_ctx, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLwrap_object, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLunwrap_object, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLfree_wrap_ctx, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLinitialize, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLterminate, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLget_cap_flags, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLget_value, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLcopy_connector_info, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLcmp_connector_info, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLfree_connector_info, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLconnector_info_to_str, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLconnector_str_to_info, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLattr_create, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLattr_open, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLattr_read, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLattr_write, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLattr_get, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLattr_specific, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLattr_optional, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLattr_close, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLdataset_create, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLdataset_open, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLdataset_read, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLdataset_write, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLdataset_get, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLdataset_specific, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLdataset_optional, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLdataset_close, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLdatatype_commit, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLdatatype_open, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLdatatype_get, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLdatatype_specific, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLdatatype_optional, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLdatatype_close, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLfile_create, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLfile_open, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLfile_get, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLfile_specific, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLfile_optional, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLfile_close, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLgroup_create, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLgroup_open, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLgroup_get, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLgroup_specific, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLgroup_optional, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLgroup_close, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLlink_create, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLlink_copy, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLlink_move, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLlink_get, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLlink_specific, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLlink_optional, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLobject_open, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLobject_copy, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLobject_get, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLobject_specific, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLobject_optional, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLintrospect_get_conn_cls, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLintrospect_opt_query, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLrequest_wait, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLrequest_notify, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLrequest_cancel, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLrequest_specific, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLrequest_optional, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLrequest_free, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLblob_put, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLblob_get, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLblob_specific, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLblob_optional, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLtoken_cmp, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLtoken_to_str, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLtoken_from_str, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  GOTCHA_BINDING_MACRO(H5VLoptional, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLnative_addr_to_token, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VLnative_token_to_addr, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VL_native_register, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5FD_splitter_init, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pset_fapl_splitter, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5Pget_fapl_splitter, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  GOTCHA_BINDING_MACRO(H5VL_pass_through_register, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5atclose, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5is_library_terminating, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Oopen_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Oopen_by_idx_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Oget_info_by_name_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Ocopy_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Oclose_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Oflush_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Orefresh_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Tclose_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Tcommit_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Topen_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Aclose_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Acreate_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Acreate_by_name_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Aexists_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Aexists_by_name_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Aopen_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Aopen_by_idx_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Aopen_by_name_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Aread_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Arename_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Arename_by_name_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Awrite_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Dcreate_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Dopen_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Dget_space_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Dchunk_iter, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Dread_multi, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Dread_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Dread_multi_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Dwrite_multi, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Dwrite_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Dwrite_multi_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Dset_extent_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Dclose_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5EScreate, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5ESwait, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5EScancel, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5ESget_count, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5ESget_op_counter, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5ESget_err_status, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5ESget_err_count, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5ESget_err_info, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5ESfree_err_info, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5ESregister_insert_func, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5ESregister_complete_func, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5ESclose, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Fcreate_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Fopen_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Freopen_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Fflush_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Fclose_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Fset_mdc_config, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Lcreate_hard_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Lcreate_soft_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Ldelete_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Ldelete_by_idx_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Lexists_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Literate_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Gcreate_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Gopen_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Gget_info_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Gget_info_by_name_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Gget_info_by_idx_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Gclose_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLquery_optional, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Ropen_object_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Ropen_region_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Ropen_attr_async, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLregister_opt_operation, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLfind_opt_operation, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLunregister_opt_operation, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLattr_optional_op, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLdataset_optional_op, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLdatatype_optional_op, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLfile_optional_op, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLgroup_optional_op, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLlink_optional_op, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLobject_optional_op, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLrequest_optional_op, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Ssel_iter_get_seq_list, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Pget_driver_config_str, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Pset_driver_by_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Pset_driver_by_value, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Pget_vol_cap_flags, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Pset_dataset_io_hyperslab_selection, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Pset_selection_io, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Pget_selection_io, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Pget_no_selection_io_cause, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Pget_actual_selection_io_mode, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Pset_modify_write_buf, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Pget_modify_write_buf, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5ESinsert_request, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5ESget_requests, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5FDperform_init, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5FDis_driver_registered_by_name, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5FDis_driver_registered_by_value, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5FDread_vector, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5FDwrite_vector, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5FDread_selection, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5FDwrite_selection, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5FDread_vector_from_selection, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5FDwrite_vector_from_selection, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5FDread_from_selection, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5FDwrite_from_selection, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5FDdelete, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5FDctl, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Iregister_future, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5TSmutex_acquire, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5TSmutex_release, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5TSmutex_get_attempt_count, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLstart_lib_state, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLfinish_lib_state, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLget_cap_flags, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLattr_get, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLattr_specific, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLattr_optional, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLdataset_read, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLdataset_write, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLdataset_get, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLdataset_specific, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLdataset_optional, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLdatatype_get, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLdatatype_specific, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLdatatype_optional, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLfile_get, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLfile_specific, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLfile_optional, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLgroup_get, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLgroup_specific, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLgroup_optional, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLlink_create, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLlink_get, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLlink_specific, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLlink_optional, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLobject_get, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLobject_specific, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLobject_optional, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLintrospect_get_cap_flags, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLintrospect_opt_query, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLrequest_wait, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLrequest_cancel, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLrequest_specific, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLrequest_optional, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLblob_specific, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLblob_optional, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5VLoptional, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5FD_onion_init, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Pget_fapl_onion, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5Pset_fapl_onion, brahma::HDF5);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  GOTCHA_BINDING_MACRO(H5FDonion_get_revision_count, brahma::HDF5);
#endif

  num_bindings = bindings.size();
  if (num_bindings > 0) {
    char tool_name[64];
    sprintf(tool_name, "%s_hdf5", name);
    gotcha_binding_t *raw_bindings = bindings.data();
    gotcha_wrap(raw_bindings, num_bindings, tool_name);
    gotcha_set_priority(tool_name, priority);
  }
  return num_bindings;
}

#endif  // BRAHMA_ENABLE_HDF5
#endif  // BRAHMA_HDF5_H
