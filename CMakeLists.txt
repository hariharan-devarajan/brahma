project(brahma)
cmake_minimum_required(VERSION 3.0)
set(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} ${CMAKE_SOURCE_DIR}/dependency/.spack-env/view)
set(CMAKE_CXX_STANDARD 14)
set(TAILORFS_CMAKE_DIR ${CMAKE_SOURCE_DIR}/CMake)
set(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} ${TAILORFS_CMAKE_DIR})
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/src)
include_directories(${CMAKE_CURRENT_SOURCE_DIR}/include)
set(BRAHMA_SRC src/brahma/brahma.cpp src/brahma/interface/posix.cpp src/brahma/interface/stdio.cpp src/brahma/interface/mpiio.cpp src/brahma/interceptor.cpp)
set(BRAHMA_PUBLIC_INCLUDE include/brahma/interceptor.h include/brahma/brahma.h include/brahma/interface/posix.h include/brahma/interface/stdio.h include/brahma/interface/mpiio.h)
set(BRAHMA_PRIVATE_INCLUDE)
add_library(${PROJECT_NAME} SHARED ${BRAHMA_SRC} ${BRAHMA_PUBLIC_INCLUDE} ${BRAHMA_PRIVATE_INCLUDE})
set(DEPENDENCY_LIB)

# find Gotcha
find_package(gotcha REQUIRED)
if (${gotcha_FOUND})
    message(STATUS "[Gotcha] found gotcha at ${gotcha_INCLUDE_DIRS}")
    include_directories(${gotcha_INCLUDE_DIRS})
    set(DEPENDENCY_LIB ${DEPENDENCY_LIB} ${gotcha_LIBRARIES})
else ()
    message(FATAL_ERROR "-- [Gotcha] is needed for ${PROJECT_NAME} build")
endif ()

# find MPI
find_package(MPI COMPONENTS CXX REQUIRED)
if (MPI_FOUND)
    message(STATUS "[MPI] found mpi.h at ${MPI_CXX_INCLUDE_DIRS}")
    include_directories(${MPI_CXX_INCLUDE_DIRS})
    set(DEPENDENCY_LIB ${DEPENDENCY_LIB} ${MPI_CXX_LIBRARIES})
else ()
    message(FATAL_ERROR "-- [MPI] is needed for ${PROJECT_NAME} build")
endif ()


target_link_libraries(${PROJECT_NAME} ${DEPENDENCY_LIB})

option(BUILD_TEST "Build the unit tests" OFF)
if (BUILD_TEST)
    enable_testing()
    add_subdirectory(test)
endif ()