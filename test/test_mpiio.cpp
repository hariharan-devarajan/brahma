
///
/// This file is generated by tools/generate_interfaces.py
/// Generated on: 2025-03-09 13:51:59
///

#include <brahma/brahma.h>
#ifdef BRAHMA_ENABLE_MPI
#include <mpi.h>

namespace brahma {
class MPIIOTest : public MPIIO {
 private:
  static std::shared_ptr<MPIIOTest> my_instance;

 public:
  MPIIOTest() : api_count(0){};

  virtual ~MPIIOTest(){};

  static std::shared_ptr<MPIIOTest> get_instance() {
    if (my_instance == nullptr) {
      my_instance = std::make_shared<MPIIOTest>();
      MPIIO::set_instance(my_instance);
    }
    return my_instance;
  }

  size_t api_count;

  int MPI_File_call_errhandler(MPI_File fh, int errorcode) override {
    api_count++;
    return 0;
  }

  int MPI_File_create_errhandler(
      MPI_File_errhandler_function* file_errhandler_fn,
      MPI_Errhandler* errhandler) override {
    api_count++;
    return 0;
  }

  int MPI_File_get_errhandler(MPI_File file,
                              MPI_Errhandler* errhandler) override {
    api_count++;
    return 0;
  }

  int MPI_File_set_errhandler(MPI_File file,
                              MPI_Errhandler errhandler) override {
    api_count++;
    return 0;
  }

  int MPI_File_open(MPI_Comm comm, const char* filename, int amode,
                    MPI_Info info, MPI_File* fh) override {
    api_count++;
    return 0;
  }

  int MPI_File_close(MPI_File* fh) override {
    api_count++;
    return 0;
  }

  int MPI_File_delete(const char* filename, MPI_Info info) override {
    api_count++;
    return 0;
  }

  int MPI_File_set_size(MPI_File fh, MPI_Offset size) override {
    api_count++;
    return 0;
  }

  int MPI_File_preallocate(MPI_File fh, MPI_Offset size) override {
    api_count++;
    return 0;
  }

  int MPI_File_get_size(MPI_File fh, MPI_Offset* size) override {
    api_count++;
    return 0;
  }

  int MPI_File_get_group(MPI_File fh, MPI_Group* group) override {
    api_count++;
    return 0;
  }

  int MPI_File_get_amode(MPI_File fh, int* amode) override {
    api_count++;
    return 0;
  }

  int MPI_File_set_info(MPI_File fh, MPI_Info info) override {
    api_count++;
    return 0;
  }

  int MPI_File_get_info(MPI_File fh, MPI_Info* info_used) override {
    api_count++;
    return 0;
  }

  int MPI_File_set_view(MPI_File fh, MPI_Offset disp, MPI_Datatype etype,
                        MPI_Datatype filetype, const char* datarep,
                        MPI_Info info) override {
    api_count++;
    return 0;
  }

  int MPI_File_get_view(MPI_File fh, MPI_Offset* disp, MPI_Datatype* etype,
                        MPI_Datatype* filetype, char* datarep) override {
    api_count++;
    return 0;
  }

  int MPI_File_read_at(MPI_File fh, MPI_Offset offset, void* buf, int count,
                       MPI_Datatype datatype, MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_read_at_all(MPI_File fh, MPI_Offset offset, void* buf, int count,
                           MPI_Datatype datatype, MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_write_at(MPI_File fh, MPI_Offset offset, const void* buf,
                        int count, MPI_Datatype datatype,
                        MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_write_at_all(MPI_File fh, MPI_Offset offset, const void* buf,
                            int count, MPI_Datatype datatype,
                            MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_iread_at(MPI_File fh, MPI_Offset offset, void* buf, int count,
                        MPI_Datatype datatype, MPI_Request* request) override {
    api_count++;
    return 0;
  }

  int MPI_File_iwrite_at(MPI_File fh, MPI_Offset offset, const void* buf,
                         int count, MPI_Datatype datatype,
                         MPI_Request* request) override {
    api_count++;
    return 0;
  }

  int MPI_File_read(MPI_File fh, void* buf, int count, MPI_Datatype datatype,
                    MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_read_all(MPI_File fh, void* buf, int count,
                        MPI_Datatype datatype, MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_write(MPI_File fh, const void* buf, int count,
                     MPI_Datatype datatype, MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_write_all(MPI_File fh, const void* buf, int count,
                         MPI_Datatype datatype, MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_iread(MPI_File fh, void* buf, int count, MPI_Datatype datatype,
                     MPI_Request* request) override {
    api_count++;
    return 0;
  }

  int MPI_File_iwrite(MPI_File fh, const void* buf, int count,
                      MPI_Datatype datatype, MPI_Request* request) override {
    api_count++;
    return 0;
  }

  int MPI_File_seek(MPI_File fh, MPI_Offset offset, int whence) override {
    api_count++;
    return 0;
  }

  int MPI_File_get_position(MPI_File fh, MPI_Offset* offset) override {
    api_count++;
    return 0;
  }

  int MPI_File_get_byte_offset(MPI_File fh, MPI_Offset offset,
                               MPI_Offset* disp) override {
    api_count++;
    return 0;
  }

  int MPI_File_read_shared(MPI_File fh, void* buf, int count,
                           MPI_Datatype datatype, MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_write_shared(MPI_File fh, const void* buf, int count,
                            MPI_Datatype datatype,
                            MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_iread_shared(MPI_File fh, void* buf, int count,
                            MPI_Datatype datatype,
                            MPI_Request* request) override {
    api_count++;
    return 0;
  }

  int MPI_File_iwrite_shared(MPI_File fh, const void* buf, int count,
                             MPI_Datatype datatype,
                             MPI_Request* request) override {
    api_count++;
    return 0;
  }

  int MPI_File_read_ordered(MPI_File fh, void* buf, int count,
                            MPI_Datatype datatype,
                            MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_write_ordered(MPI_File fh, const void* buf, int count,
                             MPI_Datatype datatype,
                             MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_seek_shared(MPI_File fh, MPI_Offset offset,
                           int whence) override {
    api_count++;
    return 0;
  }

  int MPI_File_get_position_shared(MPI_File fh, MPI_Offset* offset) override {
    api_count++;
    return 0;
  }

  int MPI_File_read_at_all_begin(MPI_File fh, MPI_Offset offset, void* buf,
                                 int count, MPI_Datatype datatype) override {
    api_count++;
    return 0;
  }

  int MPI_File_read_at_all_end(MPI_File fh, void* buf,
                               MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_write_at_all_begin(MPI_File fh, MPI_Offset offset,
                                  const void* buf, int count,
                                  MPI_Datatype datatype) override {
    api_count++;
    return 0;
  }

  int MPI_File_write_at_all_end(MPI_File fh, const void* buf,
                                MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_read_all_begin(MPI_File fh, void* buf, int count,
                              MPI_Datatype datatype) override {
    api_count++;
    return 0;
  }

  int MPI_File_read_all_end(MPI_File fh, void* buf,
                            MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_write_all_begin(MPI_File fh, const void* buf, int count,
                               MPI_Datatype datatype) override {
    api_count++;
    return 0;
  }

  int MPI_File_write_all_end(MPI_File fh, const void* buf,
                             MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_read_ordered_begin(MPI_File fh, void* buf, int count,
                                  MPI_Datatype datatype) override {
    api_count++;
    return 0;
  }

  int MPI_File_read_ordered_end(MPI_File fh, void* buf,
                                MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_write_ordered_begin(MPI_File fh, const void* buf, int count,
                                   MPI_Datatype datatype) override {
    api_count++;
    return 0;
  }

  int MPI_File_write_ordered_end(MPI_File fh, const void* buf,
                                 MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_get_type_extent(MPI_File fh, MPI_Datatype datatype,
                               MPI_Aint* extent) override {
    api_count++;
    return 0;
  }

  int MPI_File_set_atomicity(MPI_File fh, int flag) override {
    api_count++;
    return 0;
  }

  int MPI_File_get_atomicity(MPI_File fh, int* flag) override {
    api_count++;
    return 0;
  }

  int MPI_File_sync(MPI_File fh) override {
    api_count++;
    return 0;
  }

  int MPI_File_iread_at_all(MPI_File fh, MPI_Offset offset, void* buf,
                            int count, MPI_Datatype datatype,
                            MPI_Request* request) override {
    api_count++;
    return 0;
  }

  int MPI_File_iwrite_at_all(MPI_File fh, MPI_Offset offset, const void* buf,
                             int count, MPI_Datatype datatype,
                             MPI_Request* request) override {
    api_count++;
    return 0;
  }

  int MPI_File_iread_all(MPI_File fh, void* buf, int count,
                         MPI_Datatype datatype, MPI_Request* request) override {
    api_count++;
    return 0;
  }

  int MPI_File_iwrite_all(MPI_File fh, const void* buf, int count,
                          MPI_Datatype datatype,
                          MPI_Request* request) override {
    api_count++;
    return 0;
  }

  int MPI_File_read_c(MPI_File fh, void* buf, MPI_Count count,
                      MPI_Datatype datatype, MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_read_all_c(MPI_File fh, void* buf, MPI_Count count,
                          MPI_Datatype datatype, MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_read_all_begin_c(MPI_File fh, void* buf, MPI_Count count,
                                MPI_Datatype datatype) override {
    api_count++;
    return 0;
  }

  int MPI_File_read_at_c(MPI_File fh, MPI_Offset offset, void* buf,
                         MPI_Count count, MPI_Datatype datatype,
                         MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_read_at_all_c(MPI_File fh, MPI_Offset offset, void* buf,
                             MPI_Count count, MPI_Datatype datatype,
                             MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_read_at_all_begin_c(MPI_File fh, MPI_Offset offset, void* buf,
                                   MPI_Count count,
                                   MPI_Datatype datatype) override {
    api_count++;
    return 0;
  }

  int MPI_File_read_ordered_c(MPI_File fh, void* buf, MPI_Count count,
                              MPI_Datatype datatype,
                              MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_read_ordered_begin_c(MPI_File fh, void* buf, MPI_Count count,
                                    MPI_Datatype datatype) override {
    api_count++;
    return 0;
  }

  int MPI_File_read_shared_c(MPI_File fh, void* buf, MPI_Count count,
                             MPI_Datatype datatype,
                             MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_write_c(MPI_File fh, const void* buf, MPI_Count count,
                       MPI_Datatype datatype, MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_write_all_c(MPI_File fh, const void* buf, MPI_Count count,
                           MPI_Datatype datatype, MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_write_all_begin_c(MPI_File fh, const void* buf, MPI_Count count,
                                 MPI_Datatype datatype) override {
    api_count++;
    return 0;
  }

  int MPI_File_write_at_c(MPI_File fh, MPI_Offset offset, const void* buf,
                          MPI_Count count, MPI_Datatype datatype,
                          MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_write_at_all_c(MPI_File fh, MPI_Offset offset, const void* buf,
                              MPI_Count count, MPI_Datatype datatype,
                              MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_write_at_all_begin_c(MPI_File fh, MPI_Offset offset,
                                    const void* buf, MPI_Count count,
                                    MPI_Datatype datatype) override {
    api_count++;
    return 0;
  }

  int MPI_File_write_ordered_c(MPI_File fh, const void* buf, MPI_Count count,
                               MPI_Datatype datatype,
                               MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_write_ordered_begin_c(MPI_File fh, const void* buf,
                                     MPI_Count count,
                                     MPI_Datatype datatype) override {
    api_count++;
    return 0;
  }

  int MPI_File_write_shared_c(MPI_File fh, const void* buf, MPI_Count count,
                              MPI_Datatype datatype,
                              MPI_Status* status) override {
    api_count++;
    return 0;
  }

  int MPI_File_iread_c(MPI_File fh, void* buf, MPI_Count count,
                       MPI_Datatype datatype, MPI_Request* request) override {
    api_count++;
    return 0;
  }

  int MPI_File_iread_all_c(MPI_File fh, void* buf, MPI_Count count,
                           MPI_Datatype datatype,
                           MPI_Request* request) override {
    api_count++;
    return 0;
  }

  int MPI_File_iread_at_c(MPI_File fh, MPI_Offset offset, void* buf,
                          MPI_Count count, MPI_Datatype datatype,
                          MPI_Request* request) override {
    api_count++;
    return 0;
  }

  int MPI_File_iread_at_all_c(MPI_File fh, MPI_Offset offset, void* buf,
                              MPI_Count count, MPI_Datatype datatype,
                              MPI_Request* request) override {
    api_count++;
    return 0;
  }

  int MPI_File_iread_shared_c(MPI_File fh, void* buf, MPI_Count count,
                              MPI_Datatype datatype,
                              MPI_Request* request) override {
    api_count++;
    return 0;
  }

  int MPI_File_iwrite_c(MPI_File fh, const void* buf, MPI_Count count,
                        MPI_Datatype datatype, MPI_Request* request) override {
    api_count++;
    return 0;
  }

  int MPI_File_iwrite_all_c(MPI_File fh, const void* buf, MPI_Count count,
                            MPI_Datatype datatype,
                            MPI_Request* request) override {
    api_count++;
    return 0;
  }

  int MPI_File_iwrite_at_c(MPI_File fh, MPI_Offset offset, const void* buf,
                           MPI_Count count, MPI_Datatype datatype,
                           MPI_Request* request) override {
    api_count++;
    return 0;
  }

  int MPI_File_iwrite_at_all_c(MPI_File fh, MPI_Offset offset, const void* buf,
                               MPI_Count count, MPI_Datatype datatype,
                               MPI_Request* request) override {
    api_count++;
    return 0;
  }

  int MPI_File_iwrite_shared_c(MPI_File fh, const void* buf, MPI_Count count,
                               MPI_Datatype datatype,
                               MPI_Request* request) override {
    api_count++;
    return 0;
  }

  int MPI_File_get_type_extent_c(MPI_File fh, MPI_Datatype datatype,
                                 MPI_Count* extent) override {
    api_count++;
    return 0;
  }

  MPI_File MPI_File_f2c(MPI_Fint file) override {
    api_count++;
    return 0;
  }

  MPI_Fint MPI_File_c2f(MPI_File file) override {
    api_count++;
    return 0;
  }
};

std::shared_ptr<MPIIOTest> MPIIOTest::my_instance = nullptr;

}  // namespace brahma

#endif  // BRAHMA_ENABLE_MPI

void __attribute__((constructor)) test_init() {
#ifdef BRAHMA_ENABLE_MPI
  auto test_instance = brahma::MPIIOTest::get_instance();
  test_instance->bind<brahma::MPIIOTest>("MPIIOTest", 0);
#endif
}

void __attribute__((destructor)) test_finalize() {
#ifdef BRAHMA_ENABLE_MPI
  auto test_instance = brahma::MPIIOTest::get_instance();
  test_instance->unbind();
  assert(test_instance->num_bindings == test_instance->api_count);
#endif
}

int main(int argc, char* argv[]) {
#ifdef BRAHMA_ENABLE_MPI

  MPI_File_call_errhandler(NULL, 0);
  MPI_File_create_errhandler(NULL, 0);
  MPI_File_get_errhandler(NULL, 0);
  MPI_File_set_errhandler(NULL, 0);
  MPI_File_open(0, NULL, 0, 0, NULL);
  MPI_File_close(NULL);
  MPI_File_delete(NULL, 0);
  MPI_File_set_size(NULL, 0);
  MPI_File_preallocate(NULL, 0);
  MPI_File_get_size(NULL, 0);
  MPI_File_get_group(NULL, 0);
  MPI_File_get_amode(NULL, 0);
  MPI_File_set_info(NULL, 0);
  MPI_File_get_info(NULL, 0);
  MPI_File_set_view(NULL, 0, 0, 0, NULL, 0);
  MPI_File_get_view(NULL, 0, 0, 0, const_cast<char*>(""));
  MPI_File_read_at(NULL, 0, 0, 0, 0, NULL);
  MPI_File_read_at_all(NULL, 0, 0, 0, 0, NULL);
  MPI_File_write_at(NULL, 0, NULL, 0, 0, NULL);
  MPI_File_write_at_all(NULL, 0, NULL, 0, 0, NULL);
  MPI_File_iread_at(NULL, 0, 0, 0, 0, 0);
  MPI_File_iwrite_at(NULL, 0, NULL, 0, 0, 0);
  MPI_File_read(NULL, 0, 0, 0, NULL);
  MPI_File_read_all(NULL, 0, 0, 0, NULL);
  MPI_File_write(NULL, NULL, 0, 0, NULL);
  MPI_File_write_all(NULL, NULL, 0, 0, NULL);
  MPI_File_iread(NULL, 0, 0, 0, 0);
  MPI_File_iwrite(NULL, NULL, 0, 0, 0);
  MPI_File_seek(NULL, 0, 0);
  MPI_File_get_position(NULL, 0);
  MPI_File_get_byte_offset(NULL, 0, 0);
  MPI_File_read_shared(NULL, 0, 0, 0, NULL);
  MPI_File_write_shared(NULL, NULL, 0, 0, NULL);
  MPI_File_iread_shared(NULL, 0, 0, 0, 0);
  MPI_File_iwrite_shared(NULL, NULL, 0, 0, 0);
  MPI_File_read_ordered(NULL, 0, 0, 0, NULL);
  MPI_File_write_ordered(NULL, NULL, 0, 0, NULL);
  MPI_File_seek_shared(NULL, 0, 0);
  MPI_File_get_position_shared(NULL, 0);
  MPI_File_read_at_all_begin(NULL, 0, 0, 0, 0);
  MPI_File_read_at_all_end(NULL, 0, NULL);
  MPI_File_write_at_all_begin(NULL, 0, NULL, 0, 0);
  MPI_File_write_at_all_end(NULL, NULL, NULL);
  MPI_File_read_all_begin(NULL, 0, 0, 0);
  MPI_File_read_all_end(NULL, 0, NULL);
  MPI_File_write_all_begin(NULL, NULL, 0, 0);
  MPI_File_write_all_end(NULL, NULL, NULL);
  MPI_File_read_ordered_begin(NULL, 0, 0, 0);
  MPI_File_read_ordered_end(NULL, 0, NULL);
  MPI_File_write_ordered_begin(NULL, NULL, 0, 0);
  MPI_File_write_ordered_end(NULL, NULL, NULL);
  MPI_File_get_type_extent(NULL, 0, 0);
  MPI_File_set_atomicity(NULL, 0);
  MPI_File_get_atomicity(NULL, 0);
  MPI_File_sync(NULL);
  MPI_File_iread_at_all(NULL, 0, 0, 0, 0, 0);
  MPI_File_iwrite_at_all(NULL, 0, NULL, 0, 0, 0);
  MPI_File_iread_all(NULL, 0, 0, 0, 0);
  MPI_File_iwrite_all(NULL, NULL, 0, 0, 0);
  MPI_File_read_c(NULL, 0, 0, 0, NULL);
  MPI_File_read_all_c(NULL, 0, 0, 0, NULL);
  MPI_File_read_all_begin_c(NULL, 0, 0, 0);
  MPI_File_read_at_c(NULL, 0, 0, 0, 0, NULL);
  MPI_File_read_at_all_c(NULL, 0, 0, 0, 0, NULL);
  MPI_File_read_at_all_begin_c(NULL, 0, 0, 0, 0);
  MPI_File_read_ordered_c(NULL, 0, 0, 0, NULL);
  MPI_File_read_ordered_begin_c(NULL, 0, 0, 0);
  MPI_File_read_shared_c(NULL, 0, 0, 0, NULL);
  MPI_File_write_c(NULL, NULL, 0, 0, NULL);
  MPI_File_write_all_c(NULL, NULL, 0, 0, NULL);
  MPI_File_write_all_begin_c(NULL, NULL, 0, 0);
  MPI_File_write_at_c(NULL, 0, NULL, 0, 0, NULL);
  MPI_File_write_at_all_c(NULL, 0, NULL, 0, 0, NULL);
  MPI_File_write_at_all_begin_c(NULL, 0, NULL, 0, 0);
  MPI_File_write_ordered_c(NULL, NULL, 0, 0, NULL);
  MPI_File_write_ordered_begin_c(NULL, NULL, 0, 0);
  MPI_File_write_shared_c(NULL, NULL, 0, 0, NULL);
  MPI_File_iread_c(NULL, 0, 0, 0, 0);
  MPI_File_iread_all_c(NULL, 0, 0, 0, 0);
  MPI_File_iread_at_c(NULL, 0, 0, 0, 0, 0);
  MPI_File_iread_at_all_c(NULL, 0, 0, 0, 0, 0);
  MPI_File_iread_shared_c(NULL, 0, 0, 0, 0);
  MPI_File_iwrite_c(NULL, NULL, 0, 0, 0);
  MPI_File_iwrite_all_c(NULL, NULL, 0, 0, 0);
  MPI_File_iwrite_at_c(NULL, 0, NULL, 0, 0, 0);
  MPI_File_iwrite_at_all_c(NULL, 0, NULL, 0, 0, 0);
  MPI_File_iwrite_shared_c(NULL, NULL, 0, 0, 0);
  MPI_File_get_type_extent_c(NULL, 0, 0);
  MPI_File_f2c(0);
  MPI_File_c2f(NULL);

#endif

  exit(0);
  return 0;
}
