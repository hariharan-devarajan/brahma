
///
/// This file is generated by tools/generate_interfaces.py
/// Generated on: 2025-03-09 17:52:41
///

#include <brahma/brahma.h>
#ifdef BRAHMA_ENABLE_HDF5
#include <hdf5.h>

namespace brahma {
class HDF5Test : public HDF5 {
 private:
  static std::shared_ptr<HDF5Test> my_instance;

 public:
  HDF5Test() : api_count(0){};

  virtual ~HDF5Test(){};

  static std::shared_ptr<HDF5Test> get_instance() {
    if (my_instance == nullptr) {
      my_instance = std::make_shared<HDF5Test>();
      HDF5::set_instance(my_instance);
    }
    return my_instance;
  }

  size_t api_count;

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5open(void) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5close(void) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5dont_atexit(void) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5garbage_collect(void) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5set_free_list_limits(int reg_global_lim, int reg_list_lim,
                                int arr_global_lim, int arr_list_lim,
                                int blk_global_lim, int blk_list_lim) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5get_libversion(unsigned int* majnum, unsigned int* minnum,
                          unsigned int* relnum) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5check_version(unsigned int majnum, unsigned int minnum,
                         unsigned int relnum) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5is_library_threadsafe(hbool_t* is_ts) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5free_memory(void* mem) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  void* H5allocate_memory(size_t size, hbool_t clear) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  void* H5resize_memory(void* mem, size_t size) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Iregister(H5I_type_t type, const void* object) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  void* H5Iobject_verify(hid_t id, H5I_type_t type) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  void* H5Iremove_verify(hid_t id, H5I_type_t type) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5I_type_t H5Iget_type(hid_t id) override {
    api_count++;
    return static_cast<H5I_type_t>(0);
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Iget_file_id(hid_t id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5Iget_name(hid_t id, char* name, size_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  int H5Iinc_ref(hid_t id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  int H5Idec_ref(hid_t id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  int H5Iget_ref(hid_t id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5I_type_t H5Iregister_type(size_t hash_size, unsigned int reserved,
                              H5I_free_t free_func) override {
    api_count++;
    return static_cast<H5I_type_t>(0);
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Iclear_type(H5I_type_t type, hbool_t force) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Idestroy_type(H5I_type_t type) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  int H5Iinc_type_ref(H5I_type_t type) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  int H5Idec_type_ref(H5I_type_t type) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  int H5Iget_type_ref(H5I_type_t type) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  void* H5Isearch(H5I_type_t type, H5I_search_func_t func, void* key) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Inmembers(H5I_type_t type, hsize_t* num_members) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Itype_exists(H5I_type_t type) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Iis_valid(hid_t id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Tcreate(H5T_class_t type, size_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Tcopy(hid_t type_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tclose(hid_t type_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Tequal(hid_t type1_id, hid_t type2_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tlock(hid_t type_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tcommit2(hid_t loc_id, const char* name, hid_t type_id,
                    hid_t lcpl_id, hid_t tcpl_id, hid_t tapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Topen2(hid_t loc_id, const char* name, hid_t tapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tcommit_anon(hid_t loc_id, hid_t type_id, hid_t tcpl_id,
                        hid_t tapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Tget_create_plist(hid_t type_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Tcommitted(hid_t type_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tencode(hid_t obj_id, void* buf, size_t* nalloc) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Tdecode(const void* buf) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tinsert(hid_t parent_id, const char* name, size_t offset,
                   hid_t member_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tpack(hid_t type_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Tenum_create(hid_t base_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tenum_insert(hid_t type, const char* name,
                        const void* value) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tenum_nameof(hid_t type, const void* value, char* name,
                        size_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tenum_valueof(hid_t type, const char* name, void* value) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Tvlen_create(hid_t base_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Tarray_create2(hid_t base_id, unsigned int ndims,
                         const hsize_t dim[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  int H5Tget_array_ndims(hid_t type_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  int H5Tget_array_dims2(hid_t type_id, hsize_t dims[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tset_tag(hid_t type, const char* tag) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  char* H5Tget_tag(hid_t type) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Tget_super(hid_t type) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5T_class_t H5Tget_class(hid_t type_id) override {
    api_count++;
    return static_cast<H5T_class_t>(0);
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Tdetect_class(hid_t type_id, H5T_class_t cls) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  size_t H5Tget_size(hid_t type_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5T_order_t H5Tget_order(hid_t type_id) override {
    api_count++;
    return static_cast<H5T_order_t>(0);
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  size_t H5Tget_precision(hid_t type_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  int H5Tget_offset(hid_t type_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tget_pad(hid_t type_id, H5T_pad_t* lsb, H5T_pad_t* msb) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5T_sign_t H5Tget_sign(hid_t type_id) override {
    api_count++;
    return static_cast<H5T_sign_t>(0);
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tget_fields(hid_t type_id, size_t* spos, size_t* epos, size_t* esize,
                       size_t* mpos, size_t* msize) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  size_t H5Tget_ebias(hid_t type_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5T_norm_t H5Tget_norm(hid_t type_id) override {
    api_count++;
    return static_cast<H5T_norm_t>(0);
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5T_pad_t H5Tget_inpad(hid_t type_id) override {
    api_count++;
    return static_cast<H5T_pad_t>(0);
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5T_str_t H5Tget_strpad(hid_t type_id) override {
    api_count++;
    return static_cast<H5T_str_t>(0);
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  int H5Tget_nmembers(hid_t type_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  char* H5Tget_member_name(hid_t type_id, unsigned int membno) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  int H5Tget_member_index(hid_t type_id, const char* name) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  size_t H5Tget_member_offset(hid_t type_id, unsigned int membno) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5T_class_t H5Tget_member_class(hid_t type_id, unsigned int membno) override {
    api_count++;
    return static_cast<H5T_class_t>(0);
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Tget_member_type(hid_t type_id, unsigned int membno) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tget_member_value(hid_t type_id, unsigned int membno,
                             void* value) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5T_cset_t H5Tget_cset(hid_t type_id) override {
    api_count++;
    return static_cast<H5T_cset_t>(0);
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Tis_variable_str(hid_t type_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Tget_native_type(hid_t type_id, H5T_direction_t direction) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tset_size(hid_t type_id, size_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tset_order(hid_t type_id, H5T_order_t order) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tset_precision(hid_t type_id, size_t prec) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tset_offset(hid_t type_id, size_t offset) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tset_pad(hid_t type_id, H5T_pad_t lsb, H5T_pad_t msb) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tset_sign(hid_t type_id, H5T_sign_t sign) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tset_fields(hid_t type_id, size_t spos, size_t epos, size_t esize,
                       size_t mpos, size_t msize) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tset_ebias(hid_t type_id, size_t ebias) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tset_norm(hid_t type_id, H5T_norm_t norm) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tset_inpad(hid_t type_id, H5T_pad_t pad) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tset_cset(hid_t type_id, H5T_cset_t cset) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tset_strpad(hid_t type_id, H5T_str_t strpad) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tregister(H5T_pers_t pers, const char* name, hid_t src_id,
                     hid_t dst_id, H5T_conv_t func) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tunregister(H5T_pers_t pers, const char* name, hid_t src_id,
                       hid_t dst_id, H5T_conv_t func) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5T_conv_t H5Tfind(hid_t src_id, hid_t dst_id,
                     H5T_cdata_t** pcdata) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Tcompiler_conv(hid_t src_id, hid_t dst_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tconvert(hid_t src_id, hid_t dst_id, size_t nelmts, void* buf,
                    void* background, hid_t plist_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tcommit1(hid_t loc_id, const char* name, hid_t type_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Topen1(hid_t loc_id, const char* name) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Tarray_create1(hid_t base_id, int ndims, const hsize_t dim[],
                         const int perm[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  int H5Tget_array_dims1(hid_t type_id, hsize_t dims[], int perm[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Lmove(hid_t src_loc, const char* src_name, hid_t dst_loc,
                 const char* dst_name, hid_t lcpl_id, hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Lcopy(hid_t src_loc, const char* src_name, hid_t dst_loc,
                 const char* dst_name, hid_t lcpl_id, hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Lcreate_hard(hid_t cur_loc, const char* cur_name, hid_t dst_loc,
                        const char* dst_name, hid_t lcpl_id,
                        hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Lcreate_soft(const char* link_target, hid_t link_loc_id,
                        const char* link_name, hid_t lcpl_id,
                        hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Ldelete(hid_t loc_id, const char* name, hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Ldelete_by_idx(hid_t loc_id, const char* group_name,
                          H5_index_t idx_type, H5_iter_order_t order, hsize_t n,
                          hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Lget_val(hid_t loc_id, const char* name, void* buf, size_t size,
                    hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Lget_val_by_idx(hid_t loc_id, const char* group_name,
                           H5_index_t idx_type, H5_iter_order_t order,
                           hsize_t n, void* buf, size_t size,
                           hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Lexists(hid_t loc_id, const char* name, hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  herr_t H5Lget_info(hid_t loc_id, const char* name, H5L_info_t* linfo,
                     hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  herr_t H5Lget_info_by_idx(hid_t loc_id, const char* group_name,
                            H5_index_t idx_type, H5_iter_order_t order,
                            hsize_t n, H5L_info_t* linfo,
                            hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5Lget_name_by_idx(hid_t loc_id, const char* group_name,
                             H5_index_t idx_type, H5_iter_order_t order,
                             hsize_t n, char* name, size_t size,
                             hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  herr_t H5Literate(hid_t grp_id, H5_index_t idx_type, H5_iter_order_t order,
                    hsize_t* idx, H5L_iterate_t op, void* op_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  herr_t H5Literate_by_name(hid_t loc_id, const char* group_name,
                            H5_index_t idx_type, H5_iter_order_t order,
                            hsize_t* idx, H5L_iterate_t op, void* op_data,
                            hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  herr_t H5Lvisit(hid_t grp_id, H5_index_t idx_type, H5_iter_order_t order,
                  H5L_iterate_t op, void* op_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  herr_t H5Lvisit_by_name(hid_t loc_id, const char* group_name,
                          H5_index_t idx_type, H5_iter_order_t order,
                          H5L_iterate_t op, void* op_data,
                          hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Lcreate_ud(hid_t link_loc_id, const char* link_name,
                      H5L_type_t link_type, const void* udata,
                      size_t udata_size, hid_t lcpl_id,
                      hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Lregister(const H5L_class_t* cls) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Lunregister(H5L_type_t id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Lis_registered(H5L_type_t id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Lunpack_elink_val(const void* ext_linkval, size_t link_size,
                             unsigned int* flags, const char** filename,
                             const char** obj_path) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Lcreate_external(const char* file_name, const char* obj_name,
                            hid_t link_loc_id, const char* link_name,
                            hid_t lcpl_id, hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Oopen(hid_t loc_id, const char* name, hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Oopen_by_addr(hid_t loc_id, haddr_t addr) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Oopen_by_idx(hid_t loc_id, const char* group_name,
                       H5_index_t idx_type, H5_iter_order_t order, hsize_t n,
                       hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Oexists_by_name(hid_t loc_id, const char* name,
                           hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  herr_t H5Oget_info(hid_t loc_id, H5O_info_t* oinfo) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  herr_t H5Oget_info_by_name(hid_t loc_id, const char* name, H5O_info_t* oinfo,
                             hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  herr_t H5Oget_info_by_idx(hid_t loc_id, const char* group_name,
                            H5_index_t idx_type, H5_iter_order_t order,
                            hsize_t n, H5O_info_t* oinfo,
                            hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Olink(hid_t obj_id, hid_t new_loc_id, const char* new_name,
                 hid_t lcpl_id, hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Oincr_refcount(hid_t object_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Odecr_refcount(hid_t object_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Ocopy(hid_t src_loc_id, const char* src_name, hid_t dst_loc_id,
                 const char* dst_name, hid_t ocpypl_id,
                 hid_t lcpl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Oset_comment(hid_t obj_id, const char* comment) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Oset_comment_by_name(hid_t loc_id, const char* name,
                                const char* comment, hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5Oget_comment(hid_t obj_id, char* comment, size_t bufsize) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5Oget_comment_by_name(hid_t loc_id, const char* name, char* comment,
                                 size_t bufsize, hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  herr_t H5Ovisit(hid_t obj_id, H5_index_t idx_type, H5_iter_order_t order,
                  H5O_iterate_t op, void* op_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  herr_t H5Ovisit_by_name(hid_t loc_id, const char* obj_name,
                          H5_index_t idx_type, H5_iter_order_t order,
                          H5O_iterate_t op, void* op_data,
                          hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Oclose(hid_t object_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Aclose(hid_t attr_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Acreate2(hid_t loc_id, const char* attr_name, hid_t type_id,
                   hid_t space_id, hid_t acpl_id, hid_t aapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Acreate_by_name(hid_t loc_id, const char* obj_name,
                          const char* attr_name, hid_t type_id, hid_t space_id,
                          hid_t acpl_id, hid_t aapl_id,
                          hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Adelete(hid_t loc_id, const char* attr_name) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Adelete_by_idx(hid_t loc_id, const char* obj_name,
                          H5_index_t idx_type, H5_iter_order_t order, hsize_t n,
                          hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Adelete_by_name(hid_t loc_id, const char* obj_name,
                           const char* attr_name, hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Aexists(hid_t obj_id, const char* attr_name) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Aexists_by_name(hid_t obj_id, const char* obj_name,
                           const char* attr_name, hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Aget_create_plist(hid_t attr_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Aget_info(hid_t attr_id, H5A_info_t* ainfo) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Aget_info_by_idx(hid_t loc_id, const char* obj_name,
                            H5_index_t idx_type, H5_iter_order_t order,
                            hsize_t n, H5A_info_t* ainfo,
                            hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Aget_info_by_name(hid_t loc_id, const char* obj_name,
                             const char* attr_name, H5A_info_t* ainfo,
                             hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5Aget_name(hid_t attr_id, size_t buf_size, char* buf) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5Aget_name_by_idx(hid_t loc_id, const char* obj_name,
                             H5_index_t idx_type, H5_iter_order_t order,
                             hsize_t n, char* name, size_t size,
                             hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Aget_space(hid_t attr_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hsize_t H5Aget_storage_size(hid_t attr_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Aget_type(hid_t attr_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Aiterate2(hid_t loc_id, H5_index_t idx_type, H5_iter_order_t order,
                     hsize_t* idx, H5A_operator2_t op, void* op_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Aiterate_by_name(hid_t loc_id, const char* obj_name,
                            H5_index_t idx_type, H5_iter_order_t order,
                            hsize_t* idx, H5A_operator2_t op, void* op_data,
                            hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Aopen(hid_t obj_id, const char* attr_name, hid_t aapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Aopen_by_idx(hid_t loc_id, const char* obj_name, H5_index_t idx_type,
                       H5_iter_order_t order, hsize_t n, hid_t aapl_id,
                       hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Aopen_by_name(hid_t loc_id, const char* obj_name,
                        const char* attr_name, hid_t aapl_id,
                        hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Aread(hid_t attr_id, hid_t type_id, void* buf) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Arename(hid_t loc_id, const char* old_name,
                   const char* new_name) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Awrite(hid_t attr_id, hid_t type_id, const void* buf) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Arename_by_name(hid_t loc_id, const char* obj_name,
                           const char* old_attr_name, const char* new_attr_name,
                           hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Acreate1(hid_t loc_id, const char* name, hid_t type_id,
                   hid_t space_id, hid_t acpl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  int H5Aget_num_attrs(hid_t loc_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Aiterate1(hid_t loc_id, unsigned int* idx, H5A_operator1_t op,
                     void* op_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Aopen_idx(hid_t loc_id, unsigned int idx) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Aopen_name(hid_t loc_id, const char* name) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Dcreate2(hid_t loc_id, const char* name, hid_t type_id,
                   hid_t space_id, hid_t lcpl_id, hid_t dcpl_id,
                   hid_t dapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Dcreate_anon(hid_t loc_id, hid_t type_id, hid_t space_id,
                       hid_t dcpl_id, hid_t dapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Dopen2(hid_t loc_id, const char* name, hid_t dapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Dget_space(hid_t dset_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Dget_space_status(hid_t dset_id,
                             H5D_space_status_t* allocation) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Dget_type(hid_t dset_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Dget_create_plist(hid_t dset_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Dget_access_plist(hid_t dset_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hsize_t H5Dget_storage_size(hid_t dset_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Dget_chunk_storage_size(hid_t dset_id, const hsize_t* offset,
                                   hsize_t* chunk_bytes) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  haddr_t H5Dget_offset(hid_t dset_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Dread(hid_t dset_id, hid_t mem_type_id, hid_t mem_space_id,
                 hid_t file_space_id, hid_t dxpl_id, void* buf) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Dwrite(hid_t dset_id, hid_t mem_type_id, hid_t mem_space_id,
                  hid_t file_space_id, hid_t dxpl_id,
                  const void* buf) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Diterate(void* buf, hid_t type_id, hid_t space_id, H5D_operator_t op,
                    void* operator_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Dvlen_reclaim(hid_t type_id, hid_t space_id, hid_t dxpl_id,
                         void* buf) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Dvlen_get_buf_size(hid_t dset_id, hid_t type_id, hid_t space_id,
                              hsize_t* size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Dfill(const void* fill, hid_t fill_type_id, void* buf,
                 hid_t buf_type_id, hid_t space_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Dset_extent(hid_t dset_id, const hsize_t size[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Dscatter(H5D_scatter_func_t op, void* op_data, hid_t type_id,
                    hid_t dst_space_id, void* dst_buf) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Dgather(hid_t src_space_id, const void* src_buf, hid_t type_id,
                   size_t dst_buf_size, void* dst_buf, H5D_gather_func_t op,
                   void* op_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Dclose(hid_t dset_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Ddebug(hid_t dset_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Dcreate1(hid_t loc_id, const char* name, hid_t type_id,
                   hid_t space_id, hid_t dcpl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Dopen1(hid_t loc_id, const char* name) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Dextend(hid_t dset_id, const hsize_t size[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Eregister_class(const char* cls_name, const char* lib_name,
                          const char* version) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Eunregister_class(hid_t class_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Eclose_msg(hid_t err_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Ecreate_msg(hid_t cls, H5E_type_t msg_type,
                      const char* msg) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Ecreate_stack(void) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Eget_current_stack(void) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Eclose_stack(hid_t stack_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5Eget_class_name(hid_t class_id, char* name, size_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Eset_current_stack(hid_t err_stack_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Epush2(hid_t err_stack, const char* file, const char* func,
                  unsigned int line, hid_t cls_id, hid_t maj_id, hid_t min_id,
                  const char* msg) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Epop(hid_t err_stack, size_t count) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Eprint2(hid_t err_stack, FILE* stream) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Ewalk2(hid_t err_stack, H5E_direction_t direction, H5E_walk2_t func,
                  void* client_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Eget_auto2(hid_t estack_id, H5E_auto2_t* func,
                      void** client_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Eset_auto2(hid_t estack_id, H5E_auto2_t func,
                      void* client_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Eclear2(hid_t err_stack) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Eauto_is_v2(hid_t err_stack, unsigned int* is_stack) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5Eget_msg(hid_t msg_id, H5E_type_t* type, char* msg,
                     size_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5Eget_num(hid_t error_stack_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Eclear1(void) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Eget_auto1(H5E_auto1_t* func, void** client_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Epush1(const char* file, const char* func, unsigned int line,
                  H5E_major_t maj, H5E_minor_t min, const char* str) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Eprint1(FILE* stream) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Eset_auto1(H5E_auto1_t func, void* client_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Ewalk1(H5E_direction_t direction, H5E_walk1_t func,
                  void* client_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  char* H5Eget_major(H5E_major_t maj) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  char* H5Eget_minor(H5E_minor_t min) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  htri_t H5Fis_hdf5(const char* filename) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Fcreate(const char* filename, unsigned int flags, hid_t fcpl_id,
                  hid_t fapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Fopen(const char* filename, unsigned int flags,
                hid_t fapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Freopen(hid_t file_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fflush(hid_t object_id, H5F_scope_t scope) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fclose(hid_t file_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Fget_create_plist(hid_t file_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Fget_access_plist(hid_t file_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fget_intent(hid_t file_id, unsigned int* intent) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5Fget_obj_count(hid_t file_id, unsigned int types) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5Fget_obj_ids(hid_t file_id, unsigned int types, size_t max_objs,
                         hid_t* obj_id_list) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fget_vfd_handle(hid_t file_id, hid_t fapl,
                           void** file_handle) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fmount(hid_t loc, const char* name, hid_t child,
                  hid_t plist) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Funmount(hid_t loc, const char* name) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hssize_t H5Fget_freespace(hid_t file_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fget_filesize(hid_t file_id, hsize_t* size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5Fget_file_image(hid_t file_id, void* buf_ptr,
                            size_t buf_len) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fget_mdc_config(hid_t file_id,
                           H5AC_cache_config_t* config_ptr) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101200
  herr_t H5Fset_mdc_config(hid_t file_id,
                           H5AC_cache_config_t* config_ptr) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fget_mdc_hit_rate(hid_t file_id, double* hit_rate_ptr) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fget_mdc_size(hid_t file_id, size_t* max_size_ptr,
                         size_t* min_clean_size_ptr, size_t* cur_size_ptr,
                         int* cur_num_entries_ptr) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Freset_mdc_hit_rate_stats(hid_t file_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5Fget_name(hid_t obj_id, char* name, size_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  herr_t H5Fget_info(hid_t obj_id, H5F_info_t* file_info) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fclear_elink_file_cache(hid_t file_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fset_mpi_atomicity(hid_t file_id, hbool_t flag) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fget_mpi_atomicity(hid_t file_id, hbool_t* flag) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5FDregister(const H5FD_class_t* cls) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5FDunregister(hid_t driver_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5FD_t* H5FDopen(const char* name, unsigned int flags, hid_t fapl_id,
                   haddr_t maxaddr) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5FDclose(H5FD_t* file) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  int H5FDcmp(const H5FD_t* f1, const H5FD_t* f2) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  int H5FDquery(const H5FD_t* f, unsigned long* flags) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  haddr_t H5FDalloc(H5FD_t* file, H5FD_mem_t type, hid_t dxpl_id,
                    hsize_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5FDfree(H5FD_t* file, H5FD_mem_t type, hid_t dxpl_id, haddr_t addr,
                  hsize_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  haddr_t H5FDget_eoa(H5FD_t* file, H5FD_mem_t type) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5FDset_eoa(H5FD_t* file, H5FD_mem_t type, haddr_t eoa) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  haddr_t H5FDget_eof(H5FD_t* file) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5FDget_vfd_handle(H5FD_t* file, hid_t fapl,
                            void** file_handle) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5FDread(H5FD_t* file, H5FD_mem_t type, hid_t dxpl_id, haddr_t addr,
                  size_t size, void* buf) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5FDwrite(H5FD_t* file, H5FD_mem_t type, hid_t dxpl_id, haddr_t addr,
                   size_t size, const void* buf) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  herr_t H5FDflush(H5FD_t* file, hid_t dxpl_id, unsigned int closing) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5FDtruncate(H5FD_t* file, hid_t dxpl_id, hbool_t closing) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5FDdriver_query(hid_t driver_id, unsigned long* flags) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Gcreate2(hid_t loc_id, const char* name, hid_t lcpl_id, hid_t gcpl_id,
                   hid_t gapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Gcreate_anon(hid_t loc_id, hid_t gcpl_id, hid_t gapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Gopen2(hid_t loc_id, const char* name, hid_t gapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Gget_create_plist(hid_t group_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Gget_info(hid_t loc_id, H5G_info_t* ginfo) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Gget_info_by_name(hid_t loc_id, const char* name, H5G_info_t* ginfo,
                             hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Gget_info_by_idx(hid_t loc_id, const char* group_name,
                            H5_index_t idx_type, H5_iter_order_t order,
                            hsize_t n, H5G_info_t* ginfo,
                            hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Gflush(hid_t group_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Grefresh(hid_t group_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Gclose(hid_t group_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Gcreate1(hid_t loc_id, const char* name, size_t size_hint) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Gopen1(hid_t loc_id, const char* name) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Glink(hid_t cur_loc_id, H5L_type_t type, const char* cur_name,
                 const char* new_name) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Glink2(hid_t cur_loc_id, const char* cur_name, H5L_type_t type,
                  hid_t new_loc_id, const char* new_name) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Gmove(hid_t src_loc_id, const char* src_name,
                 const char* dst_name) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Gmove2(hid_t src_loc_id, const char* src_name, hid_t dst_loc_id,
                  const char* dst_name) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Gunlink(hid_t loc_id, const char* name) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Gget_linkval(hid_t loc_id, const char* name, size_t size,
                        char* buf) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Gset_comment(hid_t loc_id, const char* name,
                        const char* comment) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  int H5Gget_comment(hid_t loc_id, const char* name, size_t bufsize,
                     char* buf) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Giterate(hid_t loc_id, const char* name, int* idx, H5G_iterate_t op,
                    void* op_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Gget_num_objs(hid_t loc_id, hsize_t* num_objs) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Gget_objinfo(hid_t loc_id, const char* name, hbool_t follow_link,
                        H5G_stat_t* statbuf) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5Gget_objname_by_idx(hid_t loc_id, hsize_t idx, char* name,
                                size_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5G_obj_t H5Gget_objtype_by_idx(hid_t loc_id, hsize_t idx) override {
    api_count++;
    return static_cast<H5G_obj_t>(0);
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Zregister(const void* cls) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Zunregister(H5Z_filter_t id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Zfilter_avail(H5Z_filter_t id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Zget_filter_info(H5Z_filter_t filter,
                            unsigned int* filter_config_flags) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pclose(hid_t plist_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pclose_class(hid_t plist_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Pcopy(hid_t plist_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pcopy_prop(hid_t dst_id, hid_t src_id, const char* name) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Pcreate(hid_t cls_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Pcreate_class(hid_t parent, const char* name,
                        H5P_cls_create_func_t create, void* create_data,
                        H5P_cls_copy_func_t copy, void* copy_data,
                        H5P_cls_close_func_t close, void* close_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Pequal(hid_t id1, hid_t id2) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Pexist(hid_t plist_id, const char* name) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget(hid_t plist_id, const char* name, void* value) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Pget_class(hid_t plist_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  char* H5Pget_class_name(hid_t pclass_id) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Pget_class_parent(hid_t pclass_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_nprops(hid_t id, size_t* nprops) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_size(hid_t id, const char* name, size_t* size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pinsert2(hid_t plist_id, const char* name, size_t size, void* value,
                    H5P_prp_set_func_t set, H5P_prp_get_func_t get,
                    H5P_prp_delete_func_t prp_del, H5P_prp_copy_func_t copy,
                    H5P_prp_compare_func_t compare,
                    H5P_prp_close_func_t close) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Pisa_class(hid_t plist_id, hid_t pclass_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  int H5Piterate(hid_t id, int* idx, H5P_iterate_t iter_func,
                 void* iter_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pregister2(hid_t cls_id, const char* name, size_t size,
                      void* def_value, H5P_prp_create_func_t create,
                      H5P_prp_set_func_t set, H5P_prp_get_func_t get,
                      H5P_prp_delete_func_t prp_del, H5P_prp_copy_func_t copy,
                      H5P_prp_compare_func_t compare,
                      H5P_prp_close_func_t close) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Premove(hid_t plist_id, const char* name) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  herr_t H5Pset(hid_t plist_id, const char* name, void* value) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Punregister(hid_t pclass_id, const char* name) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Pall_filters_avail(hid_t plist_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_attr_creation_order(hid_t plist_id,
                                    unsigned int* crt_order_flags) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_attr_phase_change(hid_t plist_id, unsigned int* max_compact,
                                  unsigned int* min_dense) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Z_filter_t H5Pget_filter2(hid_t plist_id, unsigned int idx,
                              unsigned int* flags, size_t* cd_nelmts,
                              unsigned int cd_values[], size_t namelen,
                              char name[],
                              unsigned int* filter_config) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_filter_by_id2(hid_t plist_id, H5Z_filter_t filter_id,
                              unsigned int* flags, size_t* cd_nelmts,
                              unsigned int cd_values[], size_t namelen,
                              char name[],
                              unsigned int* filter_config) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  int H5Pget_nfilters(hid_t plist_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_obj_track_times(hid_t plist_id, hbool_t* track_times) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pmodify_filter(hid_t plist_id, H5Z_filter_t filter,
                          unsigned int flags, size_t cd_nelmts,
                          const unsigned int cd_values[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Premove_filter(hid_t plist_id, H5Z_filter_t filter) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_attr_creation_order(hid_t plist_id,
                                    unsigned int crt_order_flags) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_attr_phase_change(hid_t plist_id, unsigned int max_compact,
                                  unsigned int min_dense) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_deflate(hid_t plist_id, unsigned int level) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_filter(hid_t plist_id, H5Z_filter_t filter, unsigned int flags,
                       size_t cd_nelmts,
                       const unsigned int c_values[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_fletcher32(hid_t plist_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_obj_track_times(hid_t plist_id, hbool_t track_times) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_istore_k(hid_t plist_id, unsigned int* ik) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_shared_mesg_index(hid_t plist_id, unsigned int index_num,
                                  unsigned int* mesg_type_flags,
                                  unsigned int* min_mesg_size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_shared_mesg_nindexes(hid_t plist_id,
                                     unsigned int* nindexes) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_shared_mesg_phase_change(hid_t plist_id, unsigned int* max_list,
                                         unsigned int* min_btree) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_sizes(hid_t plist_id, size_t* sizeof_addr,
                      size_t* sizeof_size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_sym_k(hid_t plist_id, unsigned int* ik,
                      unsigned int* lk) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_userblock(hid_t plist_id, hsize_t* size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_version(hid_t plist_id, unsigned int* boot,
                        unsigned int* freelist, unsigned int* stab,
                        unsigned int* shhdr) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_istore_k(hid_t plist_id, unsigned int ik) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_shared_mesg_index(hid_t plist_id, unsigned int index_num,
                                  unsigned int mesg_type_flags,
                                  unsigned int min_mesg_size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_shared_mesg_nindexes(hid_t plist_id,
                                     unsigned int nindexes) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_shared_mesg_phase_change(hid_t plist_id, unsigned int max_list,
                                         unsigned int min_btree) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_sizes(hid_t plist_id, size_t sizeof_addr,
                      size_t sizeof_size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_sym_k(hid_t plist_id, unsigned int ik,
                      unsigned int lk) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_userblock(hid_t plist_id, hsize_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_alignment(hid_t fapl_id, hsize_t* threshold,
                          hsize_t* alignment) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_cache(hid_t plist_id, int* mdc_nelmts, size_t* rdcc_nslots,
                      size_t* rdcc_nbytes, double* rdcc_w0) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_core_write_tracking(hid_t fapl_id, hbool_t* is_enabled,
                                    size_t* page_size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Pget_driver(hid_t plist_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  void* H5Pget_driver_info(hid_t plist_id) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_elink_file_cache_size(hid_t plist_id,
                                      unsigned int* efc_size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_family_offset(hid_t fapl_id, hsize_t* offset) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_fclose_degree(hid_t fapl_id,
                              H5F_close_degree_t* degree) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_file_image(hid_t fapl_id, void** buf_ptr_ptr,
                           size_t* buf_len_ptr) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_file_image_callbacks(
      hid_t fapl_id, H5FD_file_image_callbacks_t* callbacks_ptr) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_gc_references(hid_t fapl_id, unsigned int* gc_ref) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_libver_bounds(hid_t plist_id, H5F_libver_t* low,
                              H5F_libver_t* high) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_mdc_config(hid_t plist_id,
                           H5AC_cache_config_t* config_ptr) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_meta_block_size(hid_t fapl_id, hsize_t* size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_multi_type(hid_t fapl_id, H5FD_mem_t* type) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_sieve_buf_size(hid_t fapl_id, size_t* size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_small_data_block_size(hid_t fapl_id, hsize_t* size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_alignment(hid_t fapl_id, hsize_t threshold,
                          hsize_t alignment) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_cache(hid_t plist_id, int mdc_nelmts, size_t rdcc_nslots,
                      size_t rdcc_nbytes, double rdcc_w0) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_core_write_tracking(hid_t fapl_id, hbool_t is_enabled,
                                    size_t page_size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_driver(hid_t plist_id, hid_t driver_id,
                       const void* driver_info) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_elink_file_cache_size(hid_t plist_id,
                                      unsigned int efc_size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_family_offset(hid_t fapl_id, hsize_t offset) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_fclose_degree(hid_t fapl_id,
                              H5F_close_degree_t degree) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_file_image(hid_t fapl_id, void* buf_ptr,
                           size_t buf_len) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_file_image_callbacks(
      hid_t fapl_id, H5FD_file_image_callbacks_t* callbacks_ptr) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_gc_references(hid_t fapl_id, unsigned int gc_ref) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_libver_bounds(hid_t plist_id, H5F_libver_t low,
                              H5F_libver_t high) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_mdc_config(hid_t plist_id,
                           H5AC_cache_config_t* config_ptr) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_meta_block_size(hid_t fapl_id, hsize_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_multi_type(hid_t fapl_id, H5FD_mem_t type) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_sieve_buf_size(hid_t fapl_id, size_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_small_data_block_size(hid_t fapl_id, hsize_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pfill_value_defined(hid_t plist, H5D_fill_value_t* status) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_alloc_time(hid_t plist_id,
                           H5D_alloc_time_t* alloc_time) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  int H5Pget_chunk(hid_t plist_id, int max_ndims, hsize_t dim[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_external(hid_t plist_id, unsigned int idx, size_t name_size,
                         char* name, off_t* offset, hsize_t* size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  int H5Pget_external_count(hid_t plist_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_fill_time(hid_t plist_id, H5D_fill_time_t* fill_time) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_fill_value(hid_t plist_id, hid_t type_id,
                           void* value) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5D_layout_t H5Pget_layout(hid_t plist_id) override {
    api_count++;
    return static_cast<H5D_layout_t>(0);
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_alloc_time(hid_t plist_id,
                           H5D_alloc_time_t alloc_time) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_chunk(hid_t plist_id, int ndims, const hsize_t dim[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_external(hid_t plist_id, const char* name, off_t offset,
                         hsize_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_fill_time(hid_t plist_id, H5D_fill_time_t fill_time) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_fill_value(hid_t plist_id, hid_t type_id,
                           const void* value) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_shuffle(hid_t plist_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_layout(hid_t plist_id, H5D_layout_t layout) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_nbit(hid_t plist_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_scaleoffset(hid_t plist_id, H5Z_SO_scale_type_t scale_type,
                            int scale_factor) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_szip(hid_t plist_id, unsigned int options_mask,
                     unsigned int pixels_per_block) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_chunk_cache(hid_t dapl_id, size_t* rdcc_nslots,
                            size_t* rdcc_nbytes, double* rdcc_w0) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5Pget_efile_prefix(hid_t dapl_id, char* prefix,
                              size_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_chunk_cache(hid_t dapl_id, size_t rdcc_nslots,
                            size_t rdcc_nbytes, double rdcc_w0) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_efile_prefix(hid_t dapl_id, const char* prefix) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_btree_ratios(hid_t plist_id, double* left, double* middle,
                             double* right) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  size_t H5Pget_buffer(hid_t plist_id, void** tconv, void** bkg) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5Pget_data_transform(hid_t plist_id, char* expression,
                                size_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Z_EDC_t H5Pget_edc_check(hid_t plist_id) override {
    api_count++;
    return static_cast<H5Z_EDC_t>(0);
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_hyper_vector_size(hid_t fapl_id, size_t* size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  int H5Pget_preserve(hid_t plist_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_type_conv_cb(hid_t dxpl_id, H5T_conv_except_func_t* op,
                             void** operate_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_vlen_mem_manager(hid_t plist_id, H5MM_allocate_t* alloc_func,
                                 void** alloc_info, H5MM_free_t* free_func,
                                 void** free_info) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_btree_ratios(hid_t plist_id, double left, double middle,
                             double right) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_buffer(hid_t plist_id, size_t size, void* tconv,
                       void* bkg) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_data_transform(hid_t plist_id,
                               const char* expression) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_edc_check(hid_t plist_id, H5Z_EDC_t check) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_filter_callback(hid_t plist_id, H5Z_filter_func_t func,
                                void* op_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_hyper_vector_size(hid_t plist_id, size_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_preserve(hid_t plist_id, hbool_t status) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_type_conv_cb(hid_t dxpl_id, H5T_conv_except_func_t op,
                             void* operate_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_vlen_mem_manager(hid_t plist_id, H5MM_allocate_t alloc_func,
                                 void* alloc_info, H5MM_free_t free_func,
                                 void* free_info) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_mpio_actual_chunk_opt_mode(
      hid_t plist_id,
      H5D_mpio_actual_chunk_opt_mode_t* actual_chunk_opt_mode) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_mpio_actual_io_mode(
      hid_t plist_id, H5D_mpio_actual_io_mode_t* actual_io_mode) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_mpio_no_collective_cause(
      hid_t plist_id, uint32_t* local_no_collective_cause,
      uint32_t* global_no_collective_cause) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_create_intermediate_group(hid_t plist_id,
                                          unsigned int* crt_intmd) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_create_intermediate_group(hid_t plist_id,
                                          unsigned int crt_intmd) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_est_link_info(hid_t plist_id, unsigned int* est_num_entries,
                              unsigned int* est_name_len) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_link_creation_order(hid_t plist_id,
                                    unsigned int* crt_order_flags) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_link_phase_change(hid_t plist_id, unsigned int* max_compact,
                                  unsigned int* min_dense) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_local_heap_size_hint(hid_t plist_id,
                                     size_t* size_hint) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_est_link_info(hid_t plist_id, unsigned int est_num_entries,
                              unsigned int est_name_len) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_link_creation_order(hid_t plist_id,
                                    unsigned int crt_order_flags) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_link_phase_change(hid_t plist_id, unsigned int max_compact,
                                  unsigned int min_dense) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_local_heap_size_hint(hid_t plist_id,
                                     size_t size_hint) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_char_encoding(hid_t plist_id, H5T_cset_t* encoding) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_char_encoding(hid_t plist_id, H5T_cset_t encoding) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_elink_acc_flags(hid_t lapl_id, unsigned int* flags) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_elink_cb(hid_t lapl_id, H5L_elink_traverse_t* func,
                         void** op_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Pget_elink_fapl(hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5Pget_elink_prefix(hid_t plist_id, char* prefix,
                              size_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_nlinks(hid_t plist_id, size_t* nlinks) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_elink_acc_flags(hid_t lapl_id, unsigned int flags) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_elink_cb(hid_t lapl_id, H5L_elink_traverse_t func,
                         void* op_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_elink_fapl(hid_t lapl_id, hid_t fapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_elink_prefix(hid_t plist_id, const char* prefix) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_nlinks(hid_t plist_id, size_t nlinks) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Padd_merge_committed_dtype_path(hid_t plist_id,
                                           const char* path) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pfree_merge_committed_dtype_paths(hid_t plist_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_copy_object(hid_t plist_id,
                            unsigned int* copy_options) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_mcdt_search_cb(hid_t plist_id, H5O_mcdt_search_cb_t* func,
                               void** op_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_copy_object(hid_t plist_id,
                            unsigned int copy_options) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_mcdt_search_cb(hid_t plist_id, H5O_mcdt_search_cb_t func,
                               void* op_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pregister1(hid_t cls_id, const char* name, size_t size,
                      void* def_value, H5P_prp_create_func_t prp_create,
                      H5P_prp_set_func_t prp_set, H5P_prp_get_func_t prp_get,
                      H5P_prp_delete_func_t prp_del,
                      H5P_prp_copy_func_t prp_copy,
                      H5P_prp_close_func_t prp_close) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pinsert1(hid_t plist_id, const char* name, size_t size, void* value,
                    H5P_prp_set_func_t prp_set, H5P_prp_get_func_t prp_get,
                    H5P_prp_delete_func_t prp_delete,
                    H5P_prp_copy_func_t prp_copy,
                    H5P_prp_close_func_t prp_close) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Z_filter_t H5Pget_filter1(hid_t plist_id, unsigned int filter,
                              unsigned int* flags, size_t* cd_nelmts,
                              unsigned int cd_values[], size_t namelen,
                              char name[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_filter_by_id1(hid_t plist_id, H5Z_filter_t id,
                              unsigned int* flags, size_t* cd_nelmts,
                              unsigned int cd_values[], size_t namelen,
                              char name[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5PLset_loading_state(unsigned int plugin_control_mask) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5PLget_loading_state(unsigned int* plugin_control_mask) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5PLappend(const char* search_path) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5PLprepend(const char* search_path) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5PLreplace(const char* search_path, unsigned int index) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5PLinsert(const char* search_path, unsigned int index) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5PLremove(unsigned int index) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5PLget(unsigned int index, char* path_buf,
                  size_t buf_size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5PLsize(unsigned int* num_paths) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Rcreate(void* ref, hid_t loc_id, const char* name,
                   H5R_type_t ref_type, hid_t space_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  hid_t H5Rdereference(hid_t dataset, H5R_type_t ref_type,
                       const void* ref) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Rget_region(hid_t dataset, H5R_type_t ref_type,
                      const void* ref) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  herr_t H5Rget_obj_type2(hid_t id, H5R_type_t ref_type, const void* _ref,
                          H5O_type_t* obj_type) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5Rget_name(hid_t loc_id, H5R_type_t ref_type, const void* ref,
                      char* name, size_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5G_obj_t H5Rget_obj_type1(hid_t id, H5R_type_t ref_type,
                             const void* ref) override {
    api_count++;
    return static_cast<H5G_obj_t>(0);
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Sclose(hid_t space_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Scopy(hid_t space_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Screate(H5S_class_t type) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Screate_simple(int rank, const hsize_t dims[],
                         const hsize_t maxdims[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Sdecode(const void* buf) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  herr_t H5Sencode(hid_t obj_id, void* buf, size_t* nalloc) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Sextent_copy(hid_t dst_id, hid_t src_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Sextent_equal(hid_t space1_id, hid_t space2_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  int H5Sget_simple_extent_dims(hid_t space_id, hsize_t dims[],
                                hsize_t maxdims[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  int H5Sget_simple_extent_ndims(hid_t space_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hssize_t H5Sget_simple_extent_npoints(hid_t space_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5S_class_t H5Sget_simple_extent_type(hid_t space_id) override {
    api_count++;
    return static_cast<H5S_class_t>(0);
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Sis_simple(hid_t space_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Sset_extent_none(hid_t space_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Sset_extent_simple(hid_t space_id, int rank, const hsize_t dims[],
                              const hsize_t max[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Sget_select_bounds(hid_t spaceid, hsize_t start[],
                              hsize_t end[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hssize_t H5Sget_select_elem_npoints(hid_t spaceid) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Sget_select_elem_pointlist(hid_t spaceid, hsize_t startpoint,
                                      hsize_t numpoints,
                                      hsize_t buf[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Sget_select_hyper_blocklist(hid_t spaceid, hsize_t startblock,
                                       hsize_t numblocks,
                                       hsize_t buf[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hssize_t H5Sget_select_hyper_nblocks(hid_t spaceid) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hssize_t H5Sget_select_npoints(hid_t spaceid) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5S_sel_type H5Sget_select_type(hid_t spaceid) override {
    api_count++;
    return static_cast<H5S_sel_type>(0);
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Soffset_simple(hid_t space_id, const hssize_t* offset) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Sselect_all(hid_t spaceid) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Sselect_elements(hid_t space_id, H5S_seloper_t op, size_t num_elem,
                            const hsize_t* coord) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Sselect_hyperslab(hid_t space_id, H5S_seloper_t op,
                             const hsize_t start[], const hsize_t stride[],
                             const hsize_t count[],
                             const hsize_t block[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Sselect_none(hid_t spaceid) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Sselect_valid(hid_t spaceid) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5FD_core_init(void) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  void H5FD_core_term(void) override { api_count++; }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_fapl_core(hid_t fapl_id, size_t increment,
                          hbool_t backing_store) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_fapl_core(hid_t fapl_id, size_t* increment,
                          hbool_t* backing_store) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5FD_family_init(void) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  void H5FD_family_term(void) override { api_count++; }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_fapl_family(hid_t fapl_id, hsize_t memb_size,
                            hid_t memb_fapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_fapl_family(hid_t fapl_id, hsize_t* memb_size,
                            hid_t* memb_fapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101200
  hid_t H5FD_hdfs_init(void) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  void H5FD_hdfs_term(void) override { api_count++; }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101200
  herr_t H5Pget_fapl_hdfs(hid_t fapl_id, H5FD_hdfs_fapl_t* fa_out) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101200
  herr_t H5Pset_fapl_hdfs(hid_t fapl_id, H5FD_hdfs_fapl_t* fa) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5FD_log_init(void) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  void H5FD_log_term(void) override { api_count++; }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_fapl_log(hid_t fapl_id, const char* logfile,
                         unsigned long long flags, size_t buf_size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5FD_mpio_init(void) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  void H5FD_mpio_term(void) override { api_count++; }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_fapl_mpio(hid_t fapl_id, int comm, int info) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_fapl_mpio(hid_t fapl_id, int* comm, int* info) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_dxpl_mpio(hid_t dxpl_id, H5FD_mpio_xfer_t xfer_mode) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_dxpl_mpio(hid_t dxpl_id, H5FD_mpio_xfer_t* xfer_mode) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_dxpl_mpio_collective_opt(
      hid_t dxpl_id, H5FD_mpio_collective_opt_t opt_mode) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_dxpl_mpio_chunk_opt(hid_t dxpl_id,
                                    H5FD_mpio_chunk_opt_t opt_mode) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_dxpl_mpio_chunk_opt_num(
      hid_t dxpl_id, unsigned int num_chunk_per_proc) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_dxpl_mpio_chunk_opt_ratio(
      hid_t dxpl_id, unsigned int percent_num_proc_per_chunk) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5FD_multi_init(void) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  void H5FD_multi_term(void) override { api_count++; }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_fapl_multi(hid_t fapl_id, const H5FD_mem_t* memb_map,
                           const hid_t* memb_fapl, const char* const* memb_name,
                           const haddr_t* memb_addr, hbool_t relax) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_fapl_multi(hid_t fapl_id, H5FD_mem_t* memb_map,
                           hid_t* memb_fapl, char** memb_name,
                           haddr_t* memb_addr, hbool_t* relax) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_fapl_split(hid_t fapl, const char* meta_ext,
                           hid_t meta_plist_id, const char* raw_ext,
                           hid_t raw_plist_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5FD_sec2_init(void) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  void H5FD_sec2_term(void) override { api_count++; }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_fapl_sec2(hid_t fapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5FD_stdio_init(void) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  void H5FD_stdio_term(void) override { api_count++; }
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_fapl_stdio(hid_t fapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5get_free_list_sizes(size_t* reg_size, size_t* arr_size,
                               size_t* blk_size, size_t* fac_size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5get_alloc_stats(H5_alloc_stats_t* stats) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Iiterate(H5I_type_t type, H5I_iterate_func_t op,
                    void* op_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Tflush(hid_t type_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Trefresh(hid_t type_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Treclaim(hid_t type_id, hid_t space_id, hid_t plist_id,
                    void* buf) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Lget_info2(hid_t loc_id, const char* name, H5L_info2_t* linfo,
                      hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Lget_info_by_idx2(hid_t loc_id, const char* group_name,
                             H5_index_t idx_type, H5_iter_order_t order,
                             hsize_t n, H5L_info2_t* linfo,
                             hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Literate2(hid_t grp_id, H5_index_t idx_type, H5_iter_order_t order,
                     hsize_t* idx, H5L_iterate2_t op, void* op_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Literate_by_name2(hid_t loc_id, const char* group_name,
                             H5_index_t idx_type, H5_iter_order_t order,
                             hsize_t* idx, H5L_iterate2_t op, void* op_data,
                             hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Lvisit2(hid_t grp_id, H5_index_t idx_type, H5_iter_order_t order,
                   H5L_iterate2_t op, void* op_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Lvisit_by_name2(hid_t loc_id, const char* group_name,
                           H5_index_t idx_type, H5_iter_order_t order,
                           H5L_iterate2_t op, void* op_data,
                           hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Lget_info1(hid_t loc_id, const char* name, H5L_info1_t* linfo,
                      hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Lget_info_by_idx1(hid_t loc_id, const char* group_name,
                             H5_index_t idx_type, H5_iter_order_t order,
                             hsize_t n, H5L_info1_t* linfo,
                             hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Literate1(hid_t grp_id, H5_index_t idx_type, H5_iter_order_t order,
                     hsize_t* idx, H5L_iterate1_t op, void* op_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Literate_by_name1(hid_t loc_id, const char* group_name,
                             H5_index_t idx_type, H5_iter_order_t order,
                             hsize_t* idx, H5L_iterate1_t op, void* op_data,
                             hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Lvisit1(hid_t grp_id, H5_index_t idx_type, H5_iter_order_t order,
                   H5L_iterate1_t op, void* op_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Lvisit_by_name1(hid_t loc_id, const char* group_name,
                           H5_index_t idx_type, H5_iter_order_t order,
                           H5L_iterate1_t op, void* op_data,
                           hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Oopen_by_token(hid_t loc_id, H5O_token_t token) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Oget_info3(hid_t loc_id, H5O_info2_t* oinfo,
                      unsigned int fields) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Oget_info_by_name3(hid_t loc_id, const char* name,
                              H5O_info2_t* oinfo, unsigned int fields,
                              hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Oget_info_by_idx3(hid_t loc_id, const char* group_name,
                             H5_index_t idx_type, H5_iter_order_t order,
                             hsize_t n, H5O_info2_t* oinfo, unsigned int fields,
                             hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Oget_native_info(hid_t loc_id, H5O_native_info_t* oinfo,
                            unsigned int fields) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Oget_native_info_by_name(hid_t loc_id, const char* name,
                                    H5O_native_info_t* oinfo,
                                    unsigned int fields,
                                    hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Oget_native_info_by_idx(hid_t loc_id, const char* group_name,
                                   H5_index_t idx_type, H5_iter_order_t order,
                                   hsize_t n, H5O_native_info_t* oinfo,
                                   unsigned int fields,
                                   hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Ovisit3(hid_t obj_id, H5_index_t idx_type, H5_iter_order_t order,
                   H5O_iterate2_t op, void* op_data,
                   unsigned int fields) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Ovisit_by_name3(hid_t loc_id, const char* obj_name,
                           H5_index_t idx_type, H5_iter_order_t order,
                           H5O_iterate2_t op, void* op_data,
                           unsigned int fields, hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Oflush(hid_t obj_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Orefresh(hid_t oid) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Odisable_mdc_flushes(hid_t object_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Oenable_mdc_flushes(hid_t object_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Oare_mdc_flushes_disabled(hid_t object_id,
                                     hbool_t* are_disabled) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Otoken_cmp(hid_t loc_id, const H5O_token_t* token1,
                      const H5O_token_t* token2, int* cmp_value) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Otoken_to_str(hid_t loc_id, const H5O_token_t* token,
                         char** token_str) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Otoken_from_str(hid_t loc_id, const char* token_str,
                           H5O_token_t* token) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Oget_info1(hid_t loc_id, H5O_info1_t* oinfo) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Oget_info_by_name1(hid_t loc_id, const char* name,
                              H5O_info1_t* oinfo, hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Oget_info_by_idx1(hid_t loc_id, const char* group_name,
                             H5_index_t idx_type, H5_iter_order_t order,
                             hsize_t n, H5O_info1_t* oinfo,
                             hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Oget_info2(hid_t loc_id, H5O_info1_t* oinfo,
                      unsigned int fields) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Oget_info_by_name2(hid_t loc_id, const char* name,
                              H5O_info1_t* oinfo, unsigned int fields,
                              hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Oget_info_by_idx2(hid_t loc_id, const char* group_name,
                             H5_index_t idx_type, H5_iter_order_t order,
                             hsize_t n, H5O_info1_t* oinfo, unsigned int fields,
                             hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Ovisit1(hid_t obj_id, H5_index_t idx_type, H5_iter_order_t order,
                   H5O_iterate1_t op, void* op_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Ovisit_by_name1(hid_t loc_id, const char* obj_name,
                           H5_index_t idx_type, H5_iter_order_t order,
                           H5O_iterate1_t op, void* op_data,
                           hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Ovisit2(hid_t obj_id, H5_index_t idx_type, H5_iter_order_t order,
                   H5O_iterate1_t op, void* op_data,
                   unsigned int fields) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Ovisit_by_name2(hid_t loc_id, const char* obj_name,
                           H5_index_t idx_type, H5_iter_order_t order,
                           H5O_iterate1_t op, void* op_data,
                           unsigned int fields, hid_t lapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Dget_num_chunks(hid_t dset_id, hid_t fspace_id,
                           hsize_t* nchunks) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Dget_chunk_info_by_coord(hid_t dset_id, const hsize_t* offset,
                                    unsigned int* filter_mask, haddr_t* addr,
                                    hsize_t* size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Dget_chunk_info(hid_t dset_id, hid_t fspace_id, hsize_t chk_idx,
                           hsize_t* offset, unsigned int* filter_mask,
                           haddr_t* addr, hsize_t* size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Dwrite_chunk(hid_t dset_id, hid_t dxpl_id, uint32_t filters,
                        const hsize_t* offset, size_t data_size,
                        const void* buf) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Dread_chunk(hid_t dset_id, hid_t dxpl_id, const hsize_t* offset,
                       uint32_t* filters, void* buf) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Dflush(hid_t dset_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Drefresh(hid_t dset_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Dformat_convert(hid_t dset_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Dget_chunk_index_type(hid_t did,
                                 H5D_chunk_index_t* idx_type) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Eappend_stack(hid_t dst_stack_id, hid_t src_stack_id,
                         hbool_t close_source_stack) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Fis_accessible(const char* container_name, hid_t fapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fdelete(const char* filename, hid_t fapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fget_fileno(hid_t file_id, unsigned long* fileno) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fget_eoa(hid_t file_id, haddr_t* eoa) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fincrement_filesize(hid_t file_id, hsize_t increment) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fget_info2(hid_t obj_id, H5F_info2_t* file_info) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fget_metadata_read_retry_info(hid_t file_id,
                                         H5F_retry_info_t* info) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fstart_swmr_write(hid_t file_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5Fget_free_sections(hid_t file_id, H5F_mem_t type, size_t nsects,
                               H5F_sect_info_t* sect_info) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fset_libver_bounds(hid_t file_id, H5F_libver_t low,
                              H5F_libver_t high) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fstart_mdc_logging(hid_t file_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fstop_mdc_logging(hid_t file_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fget_mdc_logging_status(hid_t file_id, hbool_t* is_enabled,
                                   hbool_t* is_currently_logging) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fformat_convert(hid_t fid) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Freset_page_buffering_stats(hid_t file_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fget_page_buffering_stats(hid_t file_id, unsigned int accesses[2],
                                     unsigned int hits[2],
                                     unsigned int misses[2],
                                     unsigned int evictions[2],
                                     unsigned int bypasses[2]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fget_mdc_image_info(hid_t file_id, haddr_t* image_addr,
                               hsize_t* image_size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fget_dset_no_attrs_hint(hid_t file_id, hbool_t* minimize) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fset_dset_no_attrs_hint(hid_t file_id, hbool_t minimize) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fget_info1(hid_t obj_id, H5F_info1_t* file_info) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Fset_latest_format(hid_t file_id, hbool_t latest_format) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Fis_hdf5(const char* file_name) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  haddr_t H5FDget_eof(H5FD_t* file, H5FD_mem_t type) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5FDflush(H5FD_t* file, hid_t dxpl_id, hbool_t closing) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5FDlock(H5FD_t* file, hbool_t rw) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5FDunlock(H5FD_t* file) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Scombine_hyperslab(hid_t space_id, H5S_seloper_t op,
                             const hsize_t start[], const hsize_t stride[],
                             const hsize_t count[],
                             const hsize_t block[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Scombine_select(hid_t space1_id, H5S_seloper_t op,
                          hid_t space2_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Sencode2(hid_t obj_id, void* buf, size_t* nalloc,
                    hid_t fapl) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Sget_regular_hyperslab(hid_t spaceid, hsize_t start[],
                                  hsize_t stride[], hsize_t count[],
                                  hsize_t block[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Sis_regular_hyperslab(hid_t spaceid) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Smodify_select(hid_t space1_id, H5S_seloper_t op,
                          hid_t space2_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Ssel_iter_close(hid_t sel_iter_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Ssel_iter_create(hid_t spaceid, size_t elmt_size,
                           unsigned int flags) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5Ssel_iter_get_seq_list(hid_t sel_iter_id, size_t maxseq,
                                  size_t maxbytes, size_t* nseq, size_t* nbytes,
                                  hsize_t* off, size_t* len) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Ssel_iter_reset(hid_t sel_iter_id, hid_t space_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Sselect_adjust(hid_t spaceid, const hssize_t* offset) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Sselect_copy(hid_t dst_id, hid_t src_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Sselect_intersect_block(hid_t space_id, const hsize_t* start,
                                   const hsize_t* end) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Sselect_project_intersection(hid_t src_space_id, hid_t dst_space_id,
                                       hid_t src_intersect_space_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Sselect_shape_same(hid_t space1_id, hid_t space2_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Sencode1(hid_t obj_id, void* buf, size_t* nalloc) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Pdecode(const void* buf) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pencode2(hid_t plist_id, void* buf, size_t* nalloc,
                    hid_t fapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset(hid_t plist_id, const char* name, const void* value) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_file_space_page_size(hid_t plist_id,
                                     hsize_t* fsp_size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_file_space_strategy(hid_t plist_id,
                                    H5F_fspace_strategy_t* strategy,
                                    hbool_t* persist,
                                    hsize_t* threshold) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_file_space_page_size(hid_t plist_id,
                                     hsize_t fsp_size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_file_space_strategy(hid_t plist_id,
                                    H5F_fspace_strategy_t strategy,
                                    hbool_t persist,
                                    hsize_t threshold) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  const void* H5Pget_driver_info(hid_t plist_id) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_evict_on_close(hid_t fapl_id,
                               hbool_t* evict_on_close) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_file_locking(hid_t fapl_id, hbool_t* use_file_locking,
                             hbool_t* ignore_when_disabled) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_mdc_image_config(
      hid_t plist_id, H5AC_cache_image_config_t* config_ptr) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_mdc_log_options(hid_t plist_id, hbool_t* is_enabled,
                                char* location, size_t* location_size,
                                hbool_t* start_on_access) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_metadata_read_attempts(hid_t plist_id,
                                       unsigned int* attempts) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_object_flush_cb(hid_t plist_id, H5F_flush_cb_t* func,
                                void** udata) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_page_buffer_size(hid_t plist_id, size_t* buf_size,
                                 unsigned int* min_meta_perc,
                                 unsigned int* min_raw_perc) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_vol_id(hid_t plist_id, hid_t* vol_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_vol_info(hid_t plist_id, void** vol_info) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_evict_on_close(hid_t fapl_id, hbool_t evict_on_close) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_file_locking(hid_t fapl_id, hbool_t use_file_locking,
                             hbool_t ignore_when_disabled) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_mdc_log_options(hid_t plist_id, hbool_t is_enabled,
                                const char* location,
                                hbool_t start_on_access) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_metadata_read_attempts(hid_t plist_id,
                                       unsigned int attempts) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_object_flush_cb(hid_t plist_id, H5F_flush_cb_t func,
                                void* udata) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_vol(hid_t plist_id, hid_t new_vol_id,
                    const void* new_vol_info) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_all_coll_metadata_ops(hid_t plist_id,
                                      hbool_t is_collective) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_all_coll_metadata_ops(hid_t plist_id,
                                      hbool_t* is_collective) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_coll_metadata_write(hid_t plist_id,
                                    hbool_t is_collective) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_coll_metadata_write(hid_t plist_id,
                                    hbool_t* is_collective) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_mpi_params(hid_t fapl_id, int* comm, int* info) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_mpi_params(hid_t fapl_id, int comm, int info) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_mdc_image_config(
      hid_t plist_id, H5AC_cache_image_config_t* config_ptr) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_page_buffer_size(hid_t plist_id, size_t buf_size,
                                 unsigned int min_meta_per,
                                 unsigned int min_raw_per) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_chunk_opts(hid_t plist_id, unsigned int* opts) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_dset_no_attrs_hint(hid_t dcpl_id, hbool_t* minimize) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_virtual_count(hid_t dcpl_id, size_t* count) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5Pget_virtual_dsetname(hid_t dcpl_id, size_t index, char* name,
                                  size_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5Pget_virtual_filename(hid_t dcpl_id, size_t index, char* name,
                                  size_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Pget_virtual_srcspace(hid_t dcpl_id, size_t index) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Pget_virtual_vspace(hid_t dcpl_id, size_t index) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_chunk_opts(hid_t plist_id, unsigned int opts) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_dset_no_attrs_hint(hid_t dcpl_id, hbool_t minimize) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_virtual(hid_t dcpl_id, hid_t vspace_id,
                        const char* src_file_name, const char* src_dset_name,
                        hid_t src_space_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_append_flush(hid_t dapl_id, unsigned int dims,
                             hsize_t boundary[], H5D_append_cb_t* func,
                             void** udata) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5Pget_virtual_prefix(hid_t dapl_id, char* prefix,
                                size_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_virtual_printf_gap(hid_t dapl_id, hsize_t* gap_size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_virtual_view(hid_t dapl_id, H5D_vds_view_t* view) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_append_flush(hid_t dapl_id, unsigned int ndims,
                             const hsize_t boundary[], H5D_append_cb_t func,
                             void* udata) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_virtual_prefix(hid_t dapl_id, const char* prefix) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_virtual_printf_gap(hid_t dapl_id, hsize_t gap_size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_virtual_view(hid_t dapl_id, H5D_vds_view_t view) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pencode1(hid_t plist_id, void* buf, size_t* nalloc) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_file_space(hid_t plist_id, H5F_file_space_type_t strategy,
                           hsize_t threshold) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_file_space(hid_t plist_id, H5F_file_space_type_t* strategy,
                           hsize_t* threshold) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Rcreate_object(hid_t loc_id, const char* name, hid_t oapl_id,
                          H5R_ref_t* ref_ptr) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Rcreate_region(hid_t loc_id, const char* name, hid_t space_id,
                          hid_t oapl_id, H5R_ref_t* ref_ptr) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Rcreate_attr(hid_t loc_id, const char* name, const char* attr_name,
                        hid_t oapl_id, H5R_ref_t* ref_ptr) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Rdestroy(H5R_ref_t* ref_ptr) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5R_type_t H5Rget_type(const H5R_ref_t* ref_ptr) override {
    api_count++;
    return static_cast<H5R_type_t>(0);
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5Requal(const H5R_ref_t* ref1_ptr,
                  const H5R_ref_t* ref2_ptr) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Rcopy(const H5R_ref_t* src_ref_ptr,
                 H5R_ref_t* dst_ref_ptr) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Ropen_object(H5R_ref_t* ref_ptr, hid_t rapl_id,
                       hid_t oapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Ropen_region(H5R_ref_t* ref_ptr, hid_t rapl_id,
                       hid_t oapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Ropen_attr(H5R_ref_t* ref_ptr, hid_t rapl_id,
                     hid_t aapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Rget_obj_type3(H5R_ref_t* ref_ptr, hid_t rapl_id,
                          H5O_type_t* obj_type) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5Rget_file_name(const H5R_ref_t* ref_ptr, char* name,
                           size_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5Rget_obj_name(H5R_ref_t* ref_ptr, hid_t rapl_id, char* name,
                          size_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5Rget_attr_name(const H5R_ref_t* ref_ptr, char* name,
                           size_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Rdereference1(hid_t obj_id, H5R_type_t ref_type,
                        const void* ref) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Rget_obj_type2(hid_t id, H5R_type_t ref_type, const void* ref,
                          H5O_type_t* obj_type) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5Rdereference2(hid_t obj_id, hid_t oapl_id, H5R_type_t ref_type,
                        const void* ref) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5VLregister_connector_by_name(const char* connector_name,
                                       hid_t vipl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5VLregister_connector_by_value(H5VL_class_value_t connector_value,
                                        hid_t vipl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5VLis_connector_registered_by_name(const char* name) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  htri_t H5VLis_connector_registered_by_value(
      H5VL_class_value_t connector_value) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5VLget_connector_id(hid_t obj_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5VLget_connector_id_by_name(const char* name) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5VLget_connector_id_by_value(
      H5VL_class_value_t connector_value) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  ssize_t H5VLget_connector_name(hid_t id, char* name, size_t size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLclose(hid_t connector_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLunregister_connector(hid_t connector_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLquery_optional(hid_t obj_id, H5VL_subclass_t subcls, int opt_type,
                            hbool_t* supported) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLobject_is_native(hid_t obj_id, hbool_t* is_native) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5VLregister_connector(const H5VL_class_t* cls,
                               hid_t vipl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  void* H5VLobject(hid_t obj_id) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5VLget_file_type(void* file_obj, hid_t connector_id,
                          hid_t dtype_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5VLpeek_connector_id_by_name(const char* name) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5VLpeek_connector_id_by_value(H5VL_class_value_t value) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLcmp_connector_cls(int* cmp, hid_t connector_id1,
                               hid_t connector_id2) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5VLwrap_register(void* obj, H5I_type_t type) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLretrieve_lib_state(void** state) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLrestore_lib_state(const void* state) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLreset_lib_state(void) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLfree_lib_state(void* state) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  void* H5VLget_object(void* obj, hid_t connector_id) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLget_wrap_ctx(void* obj, hid_t connector_id,
                          void** wrap_ctx) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  void* H5VLwrap_object(void* obj, H5I_type_t obj_type, hid_t connector_id,
                        void* wrap_ctx) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  void* H5VLunwrap_object(void* obj, hid_t connector_id) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLfree_wrap_ctx(void* wrap_ctx, hid_t connector_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLinitialize(hid_t connector_id, hid_t vipl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLterminate(hid_t connector_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLget_cap_flags(hid_t connector_id,
                           unsigned int* cap_flags) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLget_value(hid_t connector_id,
                       H5VL_class_value_t* conn_value) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLcopy_connector_info(hid_t connector_id, void** dst_vol_info,
                                 void* src_vol_info) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLcmp_connector_info(int* cmp, hid_t connector_id, const void* info1,
                                const void* info2) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLfree_connector_info(hid_t connector_id, void* vol_info) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLconnector_info_to_str(const void* info, hid_t connector_id,
                                   char** str) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLconnector_str_to_info(const char* str, hid_t connector_id,
                                   void** info) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  void* H5VLattr_create(void* obj, const H5VL_loc_params_t* loc_params,
                        hid_t connector_id, const char* attr_name,
                        hid_t type_id, hid_t space_id, hid_t acpl_id,
                        hid_t aapl_id, hid_t dxpl_id, void** req) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  void* H5VLattr_open(void* obj, const H5VL_loc_params_t* loc_params,
                      hid_t connector_id, const char* name, hid_t aapl_id,
                      hid_t dxpl_id, void** req) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLattr_read(void* attr, hid_t connector_id, hid_t dtype_id,
                       void* buf, hid_t dxpl_id, void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLattr_write(void* attr, hid_t connector_id, hid_t dtype_id,
                        const void* buf, hid_t dxpl_id, void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLattr_get(void* obj, hid_t connector_id, H5VL_attr_get_t get_type,
                      hid_t dxpl_id, void** req, va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLattr_specific(void* obj, const H5VL_loc_params_t* loc_params,
                           hid_t connector_id,
                           H5VL_attr_specific_t specific_type, hid_t dxpl_id,
                           void** req, va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLattr_optional(void* obj, hid_t connector_id,
                           H5VL_attr_optional_t opt_type, hid_t dxpl_id,
                           void** req, va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLattr_close(void* attr, hid_t connector_id, hid_t dxpl_id,
                        void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  void* H5VLdataset_create(void* obj, const H5VL_loc_params_t* loc_params,
                           hid_t connector_id, const char* name, hid_t lcpl_id,
                           hid_t type_id, hid_t space_id, hid_t dcpl_id,
                           hid_t dapl_id, hid_t dxpl_id, void** req) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  void* H5VLdataset_open(void* obj, const H5VL_loc_params_t* loc_params,
                         hid_t connector_id, const char* name, hid_t dapl_id,
                         hid_t dxpl_id, void** req) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLdataset_read(void* dset, hid_t connector_id, hid_t mem_type_id,
                          hid_t mem_space_id, hid_t file_space_id,
                          hid_t plist_id, void* buf, void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLdataset_write(void* dset, hid_t connector_id, hid_t mem_type_id,
                           hid_t mem_space_id, hid_t file_space_id,
                           hid_t plist_id, const void* buf,
                           void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLdataset_get(void* dset, hid_t connector_id,
                         H5VL_dataset_get_t get_type, hid_t dxpl_id, void** req,
                         va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLdataset_specific(void* obj, hid_t connector_id,
                              H5VL_dataset_specific_t specific_type,
                              hid_t dxpl_id, void** req,
                              va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLdataset_optional(void* obj, hid_t connector_id,
                              H5VL_dataset_optional_t opt_type, hid_t dxpl_id,
                              void** req, va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLdataset_close(void* dset, hid_t connector_id, hid_t dxpl_id,
                           void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  void* H5VLdatatype_commit(void* obj, const H5VL_loc_params_t* loc_params,
                            hid_t connector_id, const char* name, hid_t type_id,
                            hid_t lcpl_id, hid_t tcpl_id, hid_t tapl_id,
                            hid_t dxpl_id, void** req) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  void* H5VLdatatype_open(void* obj, const H5VL_loc_params_t* loc_params,
                          hid_t connector_id, const char* name, hid_t tapl_id,
                          hid_t dxpl_id, void** req) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLdatatype_get(void* dt, hid_t connector_id,
                          H5VL_datatype_get_t get_type, hid_t dxpl_id,
                          void** req, va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLdatatype_specific(void* obj, hid_t connector_id,
                               H5VL_datatype_specific_t specific_type,
                               hid_t dxpl_id, void** req,
                               va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLdatatype_optional(void* obj, hid_t connector_id,
                               H5VL_datatype_optional_t opt_type, hid_t dxpl_id,
                               void** req, va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLdatatype_close(void* dt, hid_t connector_id, hid_t dxpl_id,
                            void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  void* H5VLfile_create(const char* name, unsigned int flags, hid_t fcpl_id,
                        hid_t fapl_id, hid_t dxpl_id, void** req) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  void* H5VLfile_open(const char* name, unsigned int flags, hid_t fapl_id,
                      hid_t dxpl_id, void** req) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLfile_get(void* file, hid_t connector_id, H5VL_file_get_t get_type,
                      hid_t dxpl_id, void** req, va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLfile_specific(void* obj, hid_t connector_id,
                           H5VL_file_specific_t specific_type, hid_t dxpl_id,
                           void** req, va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLfile_optional(void* obj, hid_t connector_id,
                           H5VL_file_optional_t opt_type, hid_t dxpl_id,
                           void** req, va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLfile_close(void* file, hid_t connector_id, hid_t dxpl_id,
                        void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  void* H5VLgroup_create(void* obj, const H5VL_loc_params_t* loc_params,
                         hid_t connector_id, const char* name, hid_t lcpl_id,
                         hid_t gcpl_id, hid_t gapl_id, hid_t dxpl_id,
                         void** req) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  void* H5VLgroup_open(void* obj, const H5VL_loc_params_t* loc_params,
                       hid_t connector_id, const char* name, hid_t gapl_id,
                       hid_t dxpl_id, void** req) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLgroup_get(void* obj, hid_t connector_id, H5VL_group_get_t get_type,
                       hid_t dxpl_id, void** req, va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLgroup_specific(void* obj, hid_t connector_id,
                            H5VL_group_specific_t specific_type, hid_t dxpl_id,
                            void** req, va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLgroup_optional(void* obj, hid_t connector_id,
                            H5VL_group_optional_t opt_type, hid_t dxpl_id,
                            void** req, va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLgroup_close(void* grp, hid_t connector_id, hid_t dxpl_id,
                         void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLlink_create(H5VL_link_create_type_t create_type, void* obj,
                         const H5VL_loc_params_t* loc_params,
                         hid_t connector_id, hid_t lcpl_id, hid_t lapl_id,
                         hid_t dxpl_id, void** req,
                         va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLlink_copy(void* src_obj, const H5VL_loc_params_t* loc_params1,
                       void* dst_obj, const H5VL_loc_params_t* loc_params2,
                       hid_t connector_id, hid_t lcpl_id, hid_t lapl_id,
                       hid_t dxpl_id, void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLlink_move(void* src_obj, const H5VL_loc_params_t* loc_params1,
                       void* dst_obj, const H5VL_loc_params_t* loc_params2,
                       hid_t connector_id, hid_t lcpl_id, hid_t lapl_id,
                       hid_t dxpl_id, void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLlink_get(void* obj, const H5VL_loc_params_t* loc_params,
                      hid_t connector_id, H5VL_link_get_t get_type,
                      hid_t dxpl_id, void** req, va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLlink_specific(void* obj, const H5VL_loc_params_t* loc_params,
                           hid_t connector_id,
                           H5VL_link_specific_t specific_type, hid_t dxpl_id,
                           void** req, va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLlink_optional(void* obj, hid_t connector_id,
                           H5VL_link_optional_t opt_type, hid_t dxpl_id,
                           void** req, va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  void* H5VLobject_open(void* obj, const H5VL_loc_params_t* loc_params,
                        hid_t connector_id, H5I_type_t* opened_type,
                        hid_t dxpl_id, void** req) override {
    api_count++;
    return NULL;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLobject_copy(void* src_obj, const H5VL_loc_params_t* loc_params1,
                         const char* src_name, void* dst_obj,
                         const H5VL_loc_params_t* loc_params2,
                         const char* dst_name, hid_t connector_id,
                         hid_t ocpypl_id, hid_t lcpl_id, hid_t dxpl_id,
                         void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLobject_get(void* obj, const H5VL_loc_params_t* loc_params,
                        hid_t connector_id, H5VL_object_get_t get_type,
                        hid_t dxpl_id, void** req, va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLobject_specific(void* obj, const H5VL_loc_params_t* loc_params,
                             hid_t connector_id,
                             H5VL_object_specific_t specific_type,
                             hid_t dxpl_id, void** req,
                             va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLobject_optional(void* obj, hid_t connector_id,
                             H5VL_object_optional_t opt_type, hid_t dxpl_id,
                             void** req, va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLintrospect_get_conn_cls(void* obj, hid_t connector_id,
                                     H5VL_get_conn_lvl_t lvl,
                                     const H5VL_class_t** conn_cls) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLintrospect_opt_query(void* obj, hid_t connector_id,
                                  H5VL_subclass_t subcls, int opt_type,
                                  hbool_t* supported) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLrequest_wait(void* req, hid_t connector_id, uint64_t timeout,
                          H5ES_status_t* status) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLrequest_notify(void* req, hid_t connector_id,
                            H5VL_request_notify_t cb, void* ctx) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLrequest_cancel(void* req, hid_t connector_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLrequest_specific(void* req, hid_t connector_id,
                              H5VL_request_specific_t specific_type,
                              va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLrequest_optional(void* req, hid_t connector_id,
                              H5VL_request_optional_t opt_type,
                              va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLrequest_free(void* req, hid_t connector_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLblob_put(void* obj, hid_t connector_id, const void* buf,
                      size_t size, void* blob_id, void* ctx) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLblob_get(void* obj, hid_t connector_id, const void* blob_id,
                      void* buf, size_t size, void* ctx) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLblob_specific(void* obj, hid_t connector_id, void* blob_id,
                           H5VL_blob_specific_t specific_type,
                           va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLblob_optional(void* obj, hid_t connector_id, void* blob_id,
                           H5VL_blob_optional_t opt_type,
                           va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLtoken_cmp(void* obj, hid_t connector_id, const H5O_token_t* token1,
                       const H5O_token_t* token2, int* cmp_value) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLtoken_to_str(void* obj, H5I_type_t obj_type, hid_t connector_id,
                          const H5O_token_t* token, char** token_str) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLtoken_from_str(void* obj, H5I_type_t obj_type, hid_t connector_id,
                            const char* token_str,
                            H5O_token_t* token) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  herr_t H5VLoptional(void* obj, hid_t connector_id, int op_type, hid_t dxpl_id,
                      void** req, va_list arguments) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLnative_addr_to_token(hid_t loc_id, haddr_t addr,
                                  H5O_token_t* token) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5VLnative_token_to_addr(hid_t loc_id, H5O_token_t token,
                                  haddr_t* addr) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5VL_native_register(void) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5FD_splitter_init(void) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pset_fapl_splitter(hid_t fapl_id,
                              H5FD_splitter_vfd_config_t* config_ptr) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  herr_t H5Pget_fapl_splitter(hid_t fapl_id,
                              H5FD_splitter_vfd_config_t* config_ptr) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  hid_t H5VL_pass_through_register(void) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5atclose(H5_atclose_func_t func, void* ctx) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5is_library_terminating(hbool_t* is_terminating) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  hid_t H5Oopen_async(const char* app_file, const char* app_func,
                      unsigned int app_line, hid_t loc_id, const char* name,
                      hid_t lapl_id, hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  hid_t H5Oopen_by_idx_async(const char* app_file, const char* app_func,
                             unsigned int app_line, hid_t loc_id,
                             const char* group_name, H5_index_t idx_type,
                             H5_iter_order_t order, hsize_t n, hid_t lapl_id,
                             hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Oget_info_by_name_async(const char* app_file, const char* app_func,
                                   unsigned int app_line, hid_t loc_id,
                                   const char* name, H5O_info2_t* oinfo,
                                   unsigned int fields, hid_t lapl_id,
                                   hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Ocopy_async(const char* app_file, const char* app_func,
                       unsigned int app_line, hid_t src_loc_id,
                       const char* src_name, hid_t dst_loc_id,
                       const char* dst_name, hid_t ocpypl_id, hid_t lcpl_id,
                       hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Oclose_async(const char* app_file, const char* app_func,
                        unsigned int app_line, hid_t object_id,
                        hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Oflush_async(const char* app_file, const char* app_func,
                        unsigned int app_line, hid_t obj_id,
                        hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Orefresh_async(const char* app_file, const char* app_func,
                          unsigned int app_line, hid_t oid,
                          hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Tclose_async(const char* app_file, const char* app_func,
                        unsigned int app_line, hid_t type_id,
                        hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Tcommit_async(const char* app_file, const char* app_func,
                         unsigned int app_line, hid_t loc_id, const char* name,
                         hid_t type_id, hid_t lcpl_id, hid_t tcpl_id,
                         hid_t tapl_id, hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  hid_t H5Topen_async(const char* app_file, const char* app_func,
                      unsigned int app_line, hid_t loc_id, const char* name,
                      hid_t tapl_id, hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Aclose_async(const char* app_file, const char* app_func,
                        unsigned int app_line, hid_t attr_id,
                        hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  hid_t H5Acreate_async(const char* app_file, const char* app_func,
                        unsigned int app_line, hid_t loc_id,
                        const char* attr_name, hid_t type_id, hid_t space_id,
                        hid_t acpl_id, hid_t aapl_id, hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  hid_t H5Acreate_by_name_async(const char* app_file, const char* app_func,
                                unsigned int app_line, hid_t loc_id,
                                const char* obj_name, const char* attr_name,
                                hid_t type_id, hid_t space_id, hid_t acpl_id,
                                hid_t aapl_id, hid_t lapl_id,
                                hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Aexists_async(const char* app_file, const char* app_func,
                         unsigned int app_line, hid_t obj_id,
                         const char* attr_name, hbool_t* exists,
                         hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Aexists_by_name_async(const char* app_file, const char* app_func,
                                 unsigned int app_line, hid_t loc_id,
                                 const char* obj_name, const char* attr_name,
                                 hbool_t* exists, hid_t lapl_id,
                                 hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  hid_t H5Aopen_async(const char* app_file, const char* app_func,
                      unsigned int app_line, hid_t obj_id,
                      const char* attr_name, hid_t aapl_id,
                      hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  hid_t H5Aopen_by_idx_async(const char* app_file, const char* app_func,
                             unsigned int app_line, hid_t loc_id,
                             const char* obj_name, H5_index_t idx_type,
                             H5_iter_order_t order, hsize_t n, hid_t aapl_id,
                             hid_t lapl_id, hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  hid_t H5Aopen_by_name_async(const char* app_file, const char* app_func,
                              unsigned int app_line, hid_t loc_id,
                              const char* obj_name, const char* attr_name,
                              hid_t aapl_id, hid_t lapl_id,
                              hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Aread_async(const char* app_file, const char* app_func,
                       unsigned int app_line, hid_t attr_id, hid_t dtype_id,
                       void* buf, hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Arename_async(const char* app_file, const char* app_func,
                         unsigned int app_line, hid_t loc_id,
                         const char* old_name, const char* new_name,
                         hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Arename_by_name_async(const char* app_file, const char* app_func,
                                 unsigned int app_line, hid_t loc_id,
                                 const char* obj_name,
                                 const char* old_attr_name,
                                 const char* new_attr_name, hid_t lapl_id,
                                 hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Awrite_async(const char* app_file, const char* app_func,
                        unsigned int app_line, hid_t attr_id, hid_t type_id,
                        const void* buf, hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  hid_t H5Dcreate_async(const char* app_file, const char* app_func,
                        unsigned int app_line, hid_t loc_id, const char* name,
                        hid_t type_id, hid_t space_id, hid_t lcpl_id,
                        hid_t dcpl_id, hid_t dapl_id, hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  hid_t H5Dopen_async(const char* app_file, const char* app_func,
                      unsigned int app_line, hid_t loc_id, const char* name,
                      hid_t dapl_id, hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  hid_t H5Dget_space_async(const char* app_file, const char* app_func,
                           unsigned int app_line, hid_t dset_id,
                           hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Dchunk_iter(hid_t dset_id, hid_t dxpl_id, H5D_chunk_iter_op_t cb,
                       void* op_data) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Dread_multi(size_t count, hid_t dset_id[], hid_t mem_type_id[],
                       hid_t mem_space_id[], hid_t file_space_id[],
                       hid_t dxpl_id, void* buf[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Dread_async(const char* app_file, const char* app_func,
                       unsigned int app_line, hid_t dset_id, hid_t mem_type_id,
                       hid_t mem_space_id, hid_t file_space_id, hid_t dxpl_id,
                       void* buf, hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Dread_multi_async(const char* app_file, const char* app_func,
                             unsigned int app_line, size_t count,
                             hid_t dset_id[], hid_t mem_type_id[],
                             hid_t mem_space_id[], hid_t file_space_id[],
                             hid_t dxpl_id, void* buf[], hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Dwrite_multi(size_t count, hid_t dset_id[], hid_t mem_type_id[],
                        hid_t mem_space_id[], hid_t file_space_id[],
                        hid_t dxpl_id, const void* buf[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Dwrite_async(const char* app_file, const char* app_func,
                        unsigned int app_line, hid_t dset_id, hid_t mem_type_id,
                        hid_t mem_space_id, hid_t file_space_id, hid_t dxpl_id,
                        const void* buf, hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Dwrite_multi_async(const char* app_file, const char* app_func,
                              unsigned int app_line, size_t count,
                              hid_t dset_id[], hid_t mem_type_id[],
                              hid_t mem_space_id[], hid_t file_space_id[],
                              hid_t dxpl_id, const void* buf[],
                              hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Dset_extent_async(const char* app_file, const char* app_func,
                             unsigned int app_line, hid_t dset_id,
                             const hsize_t size[], hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Dclose_async(const char* app_file, const char* app_func,
                        unsigned int app_line, hid_t dset_id,
                        hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  hid_t H5EScreate(void) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5ESwait(hid_t es_id, uint64_t timeout, size_t* num_in_progress,
                  hbool_t* err_occurred) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5EScancel(hid_t es_id, size_t* num_not_canceled,
                    hbool_t* err_occurred) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5ESget_count(hid_t es_id, size_t* count) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5ESget_op_counter(hid_t es_id, uint64_t* counter) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5ESget_err_status(hid_t es_id, hbool_t* err_occurred) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5ESget_err_count(hid_t es_id, size_t* num_errs) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5ESget_err_info(hid_t es_id, size_t num_err_info,
                          H5ES_err_info_t err_info[],
                          size_t* err_cleared) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5ESfree_err_info(size_t num_err_info,
                           H5ES_err_info_t err_info[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5ESregister_insert_func(hid_t es_id, H5ES_event_insert_func_t func,
                                  void* ctx) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5ESregister_complete_func(hid_t es_id,
                                    H5ES_event_complete_func_t func,
                                    void* ctx) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5ESclose(hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  hid_t H5Fcreate_async(const char* app_file, const char* app_func,
                        unsigned int app_line, const char* filename,
                        unsigned int flags, hid_t fcpl_id, hid_t fapl_id,
                        hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  hid_t H5Fopen_async(const char* app_file, const char* app_func,
                      unsigned int app_line, const char* filename,
                      unsigned int flags, hid_t access_plist,
                      hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  hid_t H5Freopen_async(const char* app_file, const char* app_func,
                        unsigned int app_line, hid_t file_id,
                        hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Fflush_async(const char* app_file, const char* app_func,
                        unsigned int app_line, hid_t object_id,
                        H5F_scope_t scope, hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Fclose_async(const char* app_file, const char* app_func,
                        unsigned int app_line, hid_t file_id,
                        hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Fset_mdc_config(hid_t file_id,
                           const H5AC_cache_config_t* config_ptr) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Lcreate_hard_async(const char* app_file, const char* app_func,
                              unsigned int app_line, hid_t cur_loc_id,
                              const char* cur_name, hid_t new_loc_id,
                              const char* new_name, hid_t lcpl_id,
                              hid_t lapl_id, hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Lcreate_soft_async(const char* app_file, const char* app_func,
                              unsigned int app_line, const char* link_target,
                              hid_t link_loc_id, const char* link_name,
                              hid_t lcpl_id, hid_t lapl_id,
                              hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Ldelete_async(const char* app_file, const char* app_func,
                         unsigned int app_line, hid_t loc_id, const char* name,
                         hid_t lapl_id, hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Ldelete_by_idx_async(const char* app_file, const char* app_func,
                                unsigned int app_line, hid_t loc_id,
                                const char* group_name, H5_index_t idx_type,
                                H5_iter_order_t order, hsize_t n, hid_t lapl_id,
                                hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Lexists_async(const char* app_file, const char* app_func,
                         unsigned int app_line, hid_t loc_id, const char* name,
                         hbool_t* exists, hid_t lapl_id, hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Literate_async(const char* app_file, const char* app_func,
                          unsigned int app_line, hid_t group_id,
                          H5_index_t idx_type, H5_iter_order_t order,
                          hsize_t* idx_p, H5L_iterate2_t op, void* op_data,
                          hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  hid_t H5Gcreate_async(const char* app_file, const char* app_func,
                        unsigned int app_line, hid_t loc_id, const char* name,
                        hid_t lcpl_id, hid_t gcpl_id, hid_t gapl_id,
                        hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  hid_t H5Gopen_async(const char* app_file, const char* app_func,
                      unsigned int app_line, hid_t loc_id, const char* name,
                      hid_t gapl_id, hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Gget_info_async(const char* app_file, const char* app_func,
                           unsigned int app_line, hid_t loc_id,
                           H5G_info_t* ginfo, hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Gget_info_by_name_async(const char* app_file, const char* app_func,
                                   unsigned int app_line, hid_t loc_id,
                                   const char* name, H5G_info_t* ginfo,
                                   hid_t lapl_id, hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Gget_info_by_idx_async(const char* app_file, const char* app_func,
                                  unsigned int app_line, hid_t loc_id,
                                  const char* group_name, H5_index_t idx_type,
                                  H5_iter_order_t order, hsize_t n,
                                  H5G_info_t* ginfo, hid_t lapl_id,
                                  hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Gclose_async(const char* app_file, const char* app_func,
                        unsigned int app_line, hid_t group_id,
                        hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLquery_optional(hid_t obj_id, H5VL_subclass_t subcls, int opt_type,
                            uint64_t* flags) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  hid_t H5Ropen_object_async(const char* app_file, const char* app_func,
                             unsigned int app_line, H5R_ref_t* ref_ptr,
                             hid_t rapl_id, hid_t oapl_id,
                             hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  hid_t H5Ropen_region_async(const char* app_file, const char* app_func,
                             unsigned int app_line, H5R_ref_t* ref_ptr,
                             hid_t rapl_id, hid_t oapl_id,
                             hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  hid_t H5Ropen_attr_async(const char* app_file, const char* app_func,
                           unsigned int app_line, H5R_ref_t* ref_ptr,
                           hid_t rapl_id, hid_t aapl_id, hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLregister_opt_operation(H5VL_subclass_t subcls, const char* op_name,
                                    int* op_val) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLfind_opt_operation(H5VL_subclass_t subcls, const char* op_name,
                                int* op_val) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLunregister_opt_operation(H5VL_subclass_t subcls,
                                      const char* op_name) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLattr_optional_op(const char* app_file, const char* app_func,
                              unsigned int app_line, hid_t attr_id,
                              H5VL_optional_args_t* args, hid_t dxpl_id,
                              hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLdataset_optional_op(const char* app_file, const char* app_func,
                                 unsigned int app_line, hid_t dset_id,
                                 H5VL_optional_args_t* args, hid_t dxpl_id,
                                 hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLdatatype_optional_op(const char* app_file, const char* app_func,
                                  unsigned int app_line, hid_t type_id,
                                  H5VL_optional_args_t* args, hid_t dxpl_id,
                                  hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLfile_optional_op(const char* app_file, const char* app_func,
                              unsigned int app_line, hid_t file_id,
                              H5VL_optional_args_t* args, hid_t dxpl_id,
                              hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLgroup_optional_op(const char* app_file, const char* app_func,
                               unsigned int app_line, hid_t group_id,
                               H5VL_optional_args_t* args, hid_t dxpl_id,
                               hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLlink_optional_op(const char* app_file, const char* app_func,
                              unsigned int app_line, hid_t loc_id,
                              const char* name, hid_t lapl_id,
                              H5VL_optional_args_t* args, hid_t dxpl_id,
                              hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLobject_optional_op(const char* app_file, const char* app_func,
                                unsigned int app_line, hid_t loc_id,
                                const char* name, hid_t lapl_id,
                                H5VL_optional_args_t* args, hid_t dxpl_id,
                                hid_t es_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLrequest_optional_op(void* req, hid_t connector_id,
                                 H5VL_optional_args_t* args) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Ssel_iter_get_seq_list(hid_t sel_iter_id, size_t maxseq,
                                  size_t maxelmts, size_t* nseq, size_t* nelmts,
                                  hsize_t* off, size_t* len) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  ssize_t H5Pget_driver_config_str(hid_t fapl_id, char* config_buf,
                                   size_t buf_size) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Pset_driver_by_name(hid_t plist_id, const char* driver_name,
                               const char* driver_config) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Pset_driver_by_value(hid_t plist_id, H5FD_class_value_t driver_value,
                                const char* driver_config) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Pget_vol_cap_flags(hid_t plist_id, uint64_t* cap_flags) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Pset_dataset_io_hyperslab_selection(
      hid_t plist_id, unsigned int rank, H5S_seloper_t op,
      const hsize_t start[], const hsize_t stride[], const hsize_t count[],
      const hsize_t block[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Pset_selection_io(
      hid_t plist_id, H5D_selection_io_mode_t selection_io_mode) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Pget_selection_io(
      hid_t plist_id, H5D_selection_io_mode_t* selection_io_mode) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Pget_no_selection_io_cause(
      hid_t plist_id, uint32_t* no_selection_io_cause) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Pget_actual_selection_io_mode(
      hid_t plist_id, uint32_t* actual_selection_io_mode) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Pset_modify_write_buf(hid_t plist_id,
                                 hbool_t modify_write_buf) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Pget_modify_write_buf(hid_t plist_id,
                                 hbool_t* modify_write_buf) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5ESinsert_request(hid_t es_id, hid_t connector_id,
                            void* request) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5ESget_requests(hid_t es_id, H5_iter_order_t order,
                          hid_t* connector_ids, void** requests,
                          size_t array_len, size_t* count) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  hid_t H5FDperform_init(H5FD_init_t op) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  htri_t H5FDis_driver_registered_by_name(const char* driver_name) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  htri_t H5FDis_driver_registered_by_value(
      H5FD_class_value_t driver_value) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5FDread_vector(H5FD_t* file, hid_t dxpl_id, uint32_t count,
                         H5FD_mem_t types[], haddr_t addrs[], size_t sizes[],
                         void* bufs[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5FDwrite_vector(H5FD_t* file, hid_t dxpl_id, uint32_t count,
                          H5FD_mem_t types[], haddr_t addrs[], size_t sizes[],
                          const void* bufs[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5FDread_selection(H5FD_t* file, H5FD_mem_t type, hid_t dxpl_id,
                            uint32_t count, hid_t mem_spaces[],
                            hid_t file_spaces[], haddr_t offsets[],
                            size_t element_sizes[], void* bufs[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5FDwrite_selection(H5FD_t* file, H5FD_mem_t type, hid_t dxpl_id,
                             uint32_t count, hid_t mem_spaces[],
                             hid_t file_spaces[], haddr_t offsets[],
                             size_t element_sizes[],
                             const void* bufs[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5FDread_vector_from_selection(H5FD_t* file, H5FD_mem_t type,
                                        hid_t dxpl_id, uint32_t count,
                                        hid_t mem_spaces[], hid_t file_spaces[],
                                        haddr_t offsets[],
                                        size_t element_sizes[],
                                        void* bufs[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5FDwrite_vector_from_selection(H5FD_t* file, H5FD_mem_t type,
                                         hid_t dxpl_id, uint32_t count,
                                         hid_t mem_spaces[],
                                         hid_t file_spaces[], haddr_t offsets[],
                                         size_t element_sizes[],
                                         const void* bufs[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5FDread_from_selection(H5FD_t* file, H5FD_mem_t type, hid_t dxpl_id,
                                 uint32_t count, hid_t mem_space_ids[],
                                 hid_t file_space_ids[], haddr_t offsets[],
                                 size_t element_sizes[],
                                 void* bufs[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5FDwrite_from_selection(H5FD_t* file, H5FD_mem_t type, hid_t dxpl_id,
                                  uint32_t count, hid_t mem_space_ids[],
                                  hid_t file_space_ids[], haddr_t offsets[],
                                  size_t element_sizes[],
                                  const void* bufs[]) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5FDdelete(const char* name, hid_t fapl_id) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5FDctl(H5FD_t* file, uint64_t op_code, uint64_t flags,
                 const void* input, void** output) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  hid_t H5Iregister_future(H5I_type_t type, const void* object,
                           H5I_future_realize_func_t realize_cb,
                           H5I_future_discard_func_t discard_cb) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5TSmutex_acquire(unsigned int lock_count, _Bool* acquired) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5TSmutex_release(unsigned int* lock_count) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5TSmutex_get_attempt_count(unsigned int* count) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLstart_lib_state(void) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLfinish_lib_state(void) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLget_cap_flags(hid_t connector_id, uint64_t* cap_flags) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLattr_get(void* obj, hid_t connector_id, H5VL_attr_get_args_t* args,
                      hid_t dxpl_id, void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLattr_specific(void* obj, const H5VL_loc_params_t* loc_params,
                           hid_t connector_id, H5VL_attr_specific_args_t* args,
                           hid_t dxpl_id, void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLattr_optional(void* obj, hid_t connector_id,
                           H5VL_optional_args_t* args, hid_t dxpl_id,
                           void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLdataset_read(size_t count, void* dset[], hid_t connector_id,
                          hid_t mem_type_id[], hid_t mem_space_id[],
                          hid_t file_space_id[], hid_t plist_id, void* buf[],
                          void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLdataset_write(size_t count, void* dset[], hid_t connector_id,
                           hid_t mem_type_id[], hid_t mem_space_id[],
                           hid_t file_space_id[], hid_t plist_id,
                           const void* buf[], void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLdataset_get(void* dset, hid_t connector_id,
                         H5VL_dataset_get_args_t* args, hid_t dxpl_id,
                         void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLdataset_specific(void* obj, hid_t connector_id,
                              H5VL_dataset_specific_args_t* args, hid_t dxpl_id,
                              void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLdataset_optional(void* obj, hid_t connector_id,
                              H5VL_optional_args_t* args, hid_t dxpl_id,
                              void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLdatatype_get(void* dt, hid_t connector_id,
                          H5VL_datatype_get_args_t* args, hid_t dxpl_id,
                          void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLdatatype_specific(void* obj, hid_t connector_id,
                               H5VL_datatype_specific_args_t* args,
                               hid_t dxpl_id, void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLdatatype_optional(void* obj, hid_t connector_id,
                               H5VL_optional_args_t* args, hid_t dxpl_id,
                               void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLfile_get(void* file, hid_t connector_id,
                      H5VL_file_get_args_t* args, hid_t dxpl_id,
                      void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLfile_specific(void* obj, hid_t connector_id,
                           H5VL_file_specific_args_t* args, hid_t dxpl_id,
                           void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLfile_optional(void* obj, hid_t connector_id,
                           H5VL_optional_args_t* args, hid_t dxpl_id,
                           void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLgroup_get(void* obj, hid_t connector_id,
                       H5VL_group_get_args_t* args, hid_t dxpl_id,
                       void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLgroup_specific(void* obj, hid_t connector_id,
                            H5VL_group_specific_args_t* args, hid_t dxpl_id,
                            void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLgroup_optional(void* obj, hid_t connector_id,
                            H5VL_optional_args_t* args, hid_t dxpl_id,
                            void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLlink_create(H5VL_link_create_args_t* args, void* obj,
                         const H5VL_loc_params_t* loc_params,
                         hid_t connector_id, hid_t lcpl_id, hid_t lapl_id,
                         hid_t dxpl_id, void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLlink_get(void* obj, const H5VL_loc_params_t* loc_params,
                      hid_t connector_id, H5VL_link_get_args_t* args,
                      hid_t dxpl_id, void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLlink_specific(void* obj, const H5VL_loc_params_t* loc_params,
                           hid_t connector_id, H5VL_link_specific_args_t* args,
                           hid_t dxpl_id, void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLlink_optional(void* obj, const H5VL_loc_params_t* loc_params,
                           hid_t connector_id, H5VL_optional_args_t* args,
                           hid_t dxpl_id, void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLobject_get(void* obj, const H5VL_loc_params_t* loc_params,
                        hid_t connector_id, H5VL_object_get_args_t* args,
                        hid_t dxpl_id, void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLobject_specific(void* obj, const H5VL_loc_params_t* loc_params,
                             hid_t connector_id,
                             H5VL_object_specific_args_t* args, hid_t dxpl_id,
                             void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLobject_optional(void* obj, const H5VL_loc_params_t* loc_params,
                             hid_t connector_id, H5VL_optional_args_t* args,
                             hid_t dxpl_id, void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLintrospect_get_cap_flags(const void* info, hid_t connector_id,
                                      uint64_t* cap_flags) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLintrospect_opt_query(void* obj, hid_t connector_id,
                                  H5VL_subclass_t subcls, int opt_type,
                                  uint64_t* flags) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLrequest_wait(void* req, hid_t connector_id, uint64_t timeout,
                          H5VL_request_status_t* status) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLrequest_cancel(void* req, hid_t connector_id,
                            H5VL_request_status_t* status) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLrequest_specific(void* req, hid_t connector_id,
                              H5VL_request_specific_args_t* args) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLrequest_optional(void* req, hid_t connector_id,
                              H5VL_optional_args_t* args) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLblob_specific(void* obj, hid_t connector_id, void* blob_id,
                           H5VL_blob_specific_args_t* args) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLblob_optional(void* obj, hid_t connector_id, void* blob_id,
                           H5VL_optional_args_t* args) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5VLoptional(void* obj, hid_t connector_id, H5VL_optional_args_t* args,
                      hid_t dxpl_id, void** req) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  hid_t H5FD_onion_init(void) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Pget_fapl_onion(hid_t fapl_id,
                           H5FD_onion_fapl_info_t* fa_out) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5Pset_fapl_onion(hid_t fapl_id,
                           const H5FD_onion_fapl_info_t* fa) override {
    api_count++;
    return 0;
  }
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  herr_t H5FDonion_get_revision_count(const char* filename, hid_t fapl_id,
                                      uint64_t* revision_count) override {
    api_count++;
    return 0;
  }
#endif
};

std::shared_ptr<HDF5Test> HDF5Test::my_instance = nullptr;

}  // namespace brahma

#endif  // BRAHMA_ENABLE_HDF5

void __attribute__((constructor)) test_init() {
#ifdef BRAHMA_ENABLE_HDF5
  auto test_instance = brahma::HDF5Test::get_instance();
  test_instance->bind<brahma::HDF5Test>("HDF5Test", 0);
#endif
}

void __attribute__((destructor)) test_finalize() {
#ifdef BRAHMA_ENABLE_HDF5
  auto test_instance = brahma::HDF5Test::get_instance();
  test_instance->unbind();
  assert(test_instance->num_bindings == test_instance->api_count);
#endif
}

int main(int argc, char* argv[]) {
#ifdef BRAHMA_ENABLE_HDF5

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5open();
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5close();
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5dont_atexit();
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5garbage_collect();
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5set_free_list_limits(0, 0, 0, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5get_libversion(NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5check_version(0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5is_library_threadsafe(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5free_memory(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5allocate_memory(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5resize_memory(NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Iregister(static_cast<H5I_type_t>(0), NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Iobject_verify(0, static_cast<H5I_type_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Iremove_verify(0, static_cast<H5I_type_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Iget_type(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Iget_file_id(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Iget_name(0, const_cast<char*>(""), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Iinc_ref(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Idec_ref(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Iget_ref(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Iregister_type(0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Iclear_type(static_cast<H5I_type_t>(0), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Idestroy_type(static_cast<H5I_type_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Iinc_type_ref(static_cast<H5I_type_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Idec_type_ref(static_cast<H5I_type_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Iget_type_ref(static_cast<H5I_type_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Isearch(static_cast<H5I_type_t>(0), NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Inmembers(static_cast<H5I_type_t>(0), NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Itype_exists(static_cast<H5I_type_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Iis_valid(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tcreate(static_cast<H5T_class_t>(0), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tcopy(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tclose(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tequal(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tlock(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tcommit2(0, NULL, 0, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Topen2(0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tcommit_anon(0, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_create_plist(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tcommitted(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tencode(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tdecode(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tinsert(0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tpack(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tenum_create(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tenum_insert(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tenum_nameof(0, NULL, const_cast<char*>(""), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tenum_valueof(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tvlen_create(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tarray_create2(0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_array_ndims(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_array_dims2(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tset_tag(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_tag(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_super(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_class(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tdetect_class(0, static_cast<H5T_class_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_size(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_order(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_precision(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_offset(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_pad(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_sign(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_fields(0, NULL, NULL, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_ebias(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_norm(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_inpad(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_strpad(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_nmembers(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_member_name(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_member_index(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_member_offset(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_member_class(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_member_type(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_member_value(0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_cset(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tis_variable_str(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_native_type(0, static_cast<H5T_direction_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tset_size(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tset_order(0, static_cast<H5T_order_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tset_precision(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tset_offset(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tset_pad(0, static_cast<H5T_pad_t>(0), static_cast<H5T_pad_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tset_sign(0, static_cast<H5T_sign_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tset_fields(0, 0, 0, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tset_ebias(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tset_norm(0, static_cast<H5T_norm_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tset_inpad(0, static_cast<H5T_pad_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tset_cset(0, static_cast<H5T_cset_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tset_strpad(0, static_cast<H5T_str_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tregister(static_cast<H5T_pers_t>(0), NULL, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tunregister(static_cast<H5T_pers_t>(0), NULL, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tfind(0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tcompiler_conv(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tconvert(0, 0, 0, NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tcommit1(0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Topen1(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tarray_create1(0, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Tget_array_dims1(0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Lmove(0, NULL, 0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Lcopy(0, NULL, 0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Lcreate_hard(0, NULL, 0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Lcreate_soft(NULL, 0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Ldelete(0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Ldelete_by_idx(0, NULL, static_cast<H5_index_t>(0),
                   static_cast<H5_iter_order_t>(0), 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Lget_val(0, NULL, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Lget_val_by_idx(0, NULL, static_cast<H5_index_t>(0),
                    static_cast<H5_iter_order_t>(0), 0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Lexists(0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5Lget_info(0, NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5Lget_info_by_idx(0, NULL, static_cast<H5_index_t>(0),
                     static_cast<H5_iter_order_t>(0), 0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Lget_name_by_idx(0, NULL, static_cast<H5_index_t>(0),
                     static_cast<H5_iter_order_t>(0), 0, const_cast<char*>(""),
                     0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5Literate(0, static_cast<H5_index_t>(0), static_cast<H5_iter_order_t>(0),
             NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5Literate_by_name(0, NULL, static_cast<H5_index_t>(0),
                     static_cast<H5_iter_order_t>(0), NULL, NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5Lvisit(0, static_cast<H5_index_t>(0), static_cast<H5_iter_order_t>(0), NULL,
           NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5Lvisit_by_name(0, NULL, static_cast<H5_index_t>(0),
                   static_cast<H5_iter_order_t>(0), NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Lcreate_ud(0, NULL, static_cast<H5L_type_t>(0), NULL, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Lregister(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Lunregister(static_cast<H5L_type_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Lis_registered(static_cast<H5L_type_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Lunpack_elink_val(NULL, 0, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Lcreate_external(NULL, NULL, 0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Oopen(0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Oopen_by_addr(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Oopen_by_idx(0, NULL, static_cast<H5_index_t>(0),
                 static_cast<H5_iter_order_t>(0), 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Oexists_by_name(0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5Oget_info(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5Oget_info_by_name(0, NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5Oget_info_by_idx(0, NULL, static_cast<H5_index_t>(0),
                     static_cast<H5_iter_order_t>(0), 0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Olink(0, 0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Oincr_refcount(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Odecr_refcount(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Ocopy(0, NULL, 0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Oset_comment(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Oset_comment_by_name(0, NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Oget_comment(0, const_cast<char*>(""), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Oget_comment_by_name(0, NULL, const_cast<char*>(""), 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5Ovisit(0, static_cast<H5_index_t>(0), static_cast<H5_iter_order_t>(0), NULL,
           NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5Ovisit_by_name(0, NULL, static_cast<H5_index_t>(0),
                   static_cast<H5_iter_order_t>(0), NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Oclose(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Aclose(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Acreate2(0, NULL, 0, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Acreate_by_name(0, NULL, NULL, 0, 0, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Adelete(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Adelete_by_idx(0, NULL, static_cast<H5_index_t>(0),
                   static_cast<H5_iter_order_t>(0), 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Adelete_by_name(0, NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Aexists(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Aexists_by_name(0, NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Aget_create_plist(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Aget_info(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Aget_info_by_idx(0, NULL, static_cast<H5_index_t>(0),
                     static_cast<H5_iter_order_t>(0), 0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Aget_info_by_name(0, NULL, NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Aget_name(0, 0, const_cast<char*>(""));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Aget_name_by_idx(0, NULL, static_cast<H5_index_t>(0),
                     static_cast<H5_iter_order_t>(0), 0, const_cast<char*>(""),
                     0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Aget_space(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Aget_storage_size(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Aget_type(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Aiterate2(0, static_cast<H5_index_t>(0), static_cast<H5_iter_order_t>(0),
              NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Aiterate_by_name(0, NULL, static_cast<H5_index_t>(0),
                     static_cast<H5_iter_order_t>(0), NULL, NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Aopen(0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Aopen_by_idx(0, NULL, static_cast<H5_index_t>(0),
                 static_cast<H5_iter_order_t>(0), 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Aopen_by_name(0, NULL, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Aread(0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Arename(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Awrite(0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Arename_by_name(0, NULL, NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Acreate1(0, NULL, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Aget_num_attrs(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Aiterate1(0, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Aopen_idx(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Aopen_name(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Dcreate2(0, NULL, 0, 0, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Dcreate_anon(0, 0, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Dopen2(0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Dget_space(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Dget_space_status(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Dget_type(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Dget_create_plist(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Dget_access_plist(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Dget_storage_size(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Dget_chunk_storage_size(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Dget_offset(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Dread(0, 0, 0, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Dwrite(0, 0, 0, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Diterate(NULL, 0, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Dvlen_reclaim(0, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Dvlen_get_buf_size(0, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Dfill(NULL, 0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Dset_extent(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Dscatter(NULL, NULL, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Dgather(0, NULL, 0, 0, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Dclose(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Ddebug(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Dcreate1(0, NULL, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Dopen1(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Dextend(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Eregister_class(NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Eunregister_class(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Eclose_msg(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Ecreate_msg(0, static_cast<H5E_type_t>(0), NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Ecreate_stack();
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Eget_current_stack();
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Eclose_stack(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Eget_class_name(0, const_cast<char*>(""), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Eset_current_stack(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Epush2(0, NULL, NULL, 0, 0, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Epop(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Eprint2(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Ewalk2(0, static_cast<H5E_direction_t>(0), NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Eget_auto2(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Eset_auto2(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Eclear2(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Eauto_is_v2(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Eget_msg(0, NULL, const_cast<char*>(""), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Eget_num(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Eclear1();
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Eget_auto1(NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Epush1(NULL, NULL, 0, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Eprint1(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Eset_auto1(NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Ewalk1(static_cast<H5E_direction_t>(0), NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Eget_major(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Eget_minor(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5Fis_hdf5(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Fcreate(NULL, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Fopen(NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Freopen(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Fflush(0, static_cast<H5F_scope_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Fclose(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Fget_create_plist(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Fget_access_plist(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Fget_intent(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Fget_obj_count(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Fget_obj_ids(0, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Fget_vfd_handle(0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Fmount(0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Funmount(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Fget_freespace(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Fget_filesize(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Fget_file_image(0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Fget_mdc_config(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101200
  H5Fset_mdc_config(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Fget_mdc_hit_rate(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Fget_mdc_size(0, NULL, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Freset_mdc_hit_rate_stats(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Fget_name(0, const_cast<char*>(""), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5Fget_info(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Fclear_elink_file_cache(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Fset_mpi_atomicity(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Fget_mpi_atomicity(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5FDregister(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5FDunregister(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5FDopen(NULL, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5FDclose(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5FDcmp(NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5FDquery(NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5FDalloc(NULL, static_cast<H5FD_mem_t>(0), 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5FDfree(NULL, static_cast<H5FD_mem_t>(0), 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5FDget_eoa(NULL, static_cast<H5FD_mem_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5FDset_eoa(NULL, static_cast<H5FD_mem_t>(0), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5FDget_eof(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5FDget_vfd_handle(NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5FDread(NULL, static_cast<H5FD_mem_t>(0), 0, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5FDwrite(NULL, static_cast<H5FD_mem_t>(0), 0, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5FDflush(NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5FDtruncate(NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5FDdriver_query(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Gcreate2(0, NULL, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Gcreate_anon(0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Gopen2(0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Gget_create_plist(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Gget_info(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Gget_info_by_name(0, NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Gget_info_by_idx(0, NULL, static_cast<H5_index_t>(0),
                     static_cast<H5_iter_order_t>(0), 0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Gflush(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Grefresh(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Gclose(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Gcreate1(0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Gopen1(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Glink(0, static_cast<H5L_type_t>(0), NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Glink2(0, NULL, static_cast<H5L_type_t>(0), 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Gmove(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Gmove2(0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Gunlink(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Gget_linkval(0, NULL, 0, const_cast<char*>(""));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Gset_comment(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Gget_comment(0, NULL, 0, const_cast<char*>(""));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Giterate(0, NULL, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Gget_num_objs(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Gget_objinfo(0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Gget_objname_by_idx(0, 0, const_cast<char*>(""), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Gget_objtype_by_idx(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Zregister(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Zunregister(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Zfilter_avail(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Zget_filter_info(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pclose(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pclose_class(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pcopy(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pcopy_prop(0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pcreate(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pcreate_class(0, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pequal(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pexist(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_class(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_class_name(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_class_parent(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_nprops(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_size(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pinsert2(0, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pisa_class(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Piterate(0, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pregister2(0, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Premove(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5Pset(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Punregister(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pall_filters_avail(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_attr_creation_order(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_attr_phase_change(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_filter2(0, 0, NULL, NULL, 0, 0, const_cast<char*>(""), NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_filter_by_id2(0, 0, NULL, NULL, 0, 0, const_cast<char*>(""), NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_nfilters(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_obj_track_times(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pmodify_filter(0, 0, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Premove_filter(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_attr_creation_order(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_attr_phase_change(0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_deflate(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_filter(0, 0, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_fletcher32(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_obj_track_times(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_istore_k(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_shared_mesg_index(0, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_shared_mesg_nindexes(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_shared_mesg_phase_change(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_sizes(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_sym_k(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_userblock(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_version(0, NULL, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_istore_k(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_shared_mesg_index(0, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_shared_mesg_nindexes(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_shared_mesg_phase_change(0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_sizes(0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_sym_k(0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_userblock(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_alignment(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_cache(0, NULL, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_core_write_tracking(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_driver(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5Pget_driver_info(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_elink_file_cache_size(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_family_offset(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_fclose_degree(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_file_image(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_file_image_callbacks(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_gc_references(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_libver_bounds(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_mdc_config(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_meta_block_size(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_multi_type(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_sieve_buf_size(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_small_data_block_size(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_alignment(0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_cache(0, 0, 0, 0, 0.0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_core_write_tracking(0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_driver(0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_elink_file_cache_size(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_family_offset(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_fclose_degree(0, static_cast<H5F_close_degree_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_file_image(0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_file_image_callbacks(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_gc_references(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_libver_bounds(0, static_cast<H5F_libver_t>(0),
                       static_cast<H5F_libver_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_mdc_config(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_meta_block_size(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_multi_type(0, static_cast<H5FD_mem_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_sieve_buf_size(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_small_data_block_size(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pfill_value_defined(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_alloc_time(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_chunk(0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_external(0, 0, 0, const_cast<char*>(""), NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_external_count(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_fill_time(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_fill_value(0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_layout(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_alloc_time(0, static_cast<H5D_alloc_time_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_chunk(0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_external(0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_fill_time(0, static_cast<H5D_fill_time_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_fill_value(0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_shuffle(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_layout(0, static_cast<H5D_layout_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_nbit(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_scaleoffset(0, static_cast<H5Z_SO_scale_type_t>(0), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_szip(0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_chunk_cache(0, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_efile_prefix(0, const_cast<char*>(""), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_chunk_cache(0, 0, 0, 0.0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_efile_prefix(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_btree_ratios(0, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_buffer(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_data_transform(0, const_cast<char*>(""), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_edc_check(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_hyper_vector_size(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_preserve(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_type_conv_cb(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_vlen_mem_manager(0, NULL, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_btree_ratios(0, 0.0, 0.0, 0.0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_buffer(0, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_data_transform(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_edc_check(0, static_cast<H5Z_EDC_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_filter_callback(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_hyper_vector_size(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_preserve(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_type_conv_cb(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_vlen_mem_manager(0, NULL, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_mpio_actual_chunk_opt_mode(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_mpio_actual_io_mode(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_mpio_no_collective_cause(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_create_intermediate_group(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_create_intermediate_group(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_est_link_info(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_link_creation_order(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_link_phase_change(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_local_heap_size_hint(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_est_link_info(0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_link_creation_order(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_link_phase_change(0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_local_heap_size_hint(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_char_encoding(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_char_encoding(0, static_cast<H5T_cset_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_elink_acc_flags(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_elink_cb(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_elink_fapl(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_elink_prefix(0, const_cast<char*>(""), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_nlinks(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_elink_acc_flags(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_elink_cb(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_elink_fapl(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_elink_prefix(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_nlinks(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Padd_merge_committed_dtype_path(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pfree_merge_committed_dtype_paths(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_copy_object(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_mcdt_search_cb(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_copy_object(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_mcdt_search_cb(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pregister1(0, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pinsert1(0, NULL, 0, NULL, NULL, NULL, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_filter1(0, 0, NULL, NULL, 0, 0, const_cast<char*>(""));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_filter_by_id1(0, 0, NULL, NULL, 0, 0, const_cast<char*>(""));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5PLset_loading_state(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5PLget_loading_state(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5PLappend(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5PLprepend(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5PLreplace(NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5PLinsert(NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5PLremove(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5PLget(0, const_cast<char*>(""), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5PLsize(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Rcreate(NULL, 0, NULL, static_cast<H5R_type_t>(0), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5Rdereference(0, static_cast<H5R_type_t>(0), NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Rget_region(0, static_cast<H5R_type_t>(0), NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5Rget_obj_type2(0, static_cast<H5R_type_t>(0), NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Rget_name(0, static_cast<H5R_type_t>(0), NULL, const_cast<char*>(""), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Rget_obj_type1(0, static_cast<H5R_type_t>(0), NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Sclose(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Scopy(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Screate(static_cast<H5S_class_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Screate_simple(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Sdecode(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5Sencode(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Sextent_copy(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Sextent_equal(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Sget_simple_extent_dims(0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Sget_simple_extent_ndims(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Sget_simple_extent_npoints(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Sget_simple_extent_type(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Sis_simple(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Sset_extent_none(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Sset_extent_simple(0, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Sget_select_bounds(0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Sget_select_elem_npoints(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Sget_select_elem_pointlist(0, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Sget_select_hyper_blocklist(0, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Sget_select_hyper_nblocks(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Sget_select_npoints(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Sget_select_type(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Soffset_simple(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Sselect_all(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Sselect_elements(0, static_cast<H5S_seloper_t>(0), 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Sselect_hyperslab(0, static_cast<H5S_seloper_t>(0), NULL, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Sselect_none(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Sselect_valid(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5FD_core_init();
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5FD_core_term();
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_fapl_core(0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_fapl_core(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5FD_family_init();
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5FD_family_term();
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_fapl_family(0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_fapl_family(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101200
  H5FD_hdfs_init();
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5FD_hdfs_term();
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101200
  H5Pget_fapl_hdfs(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101200
  H5Pset_fapl_hdfs(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5FD_log_init();
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5FD_log_term();
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_fapl_log(0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5FD_mpio_init();
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5FD_mpio_term();
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_fapl_mpio(0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_fapl_mpio(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_dxpl_mpio(0, static_cast<H5FD_mpio_xfer_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_dxpl_mpio(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_dxpl_mpio_collective_opt(0,
                                  static_cast<H5FD_mpio_collective_opt_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_dxpl_mpio_chunk_opt(0, static_cast<H5FD_mpio_chunk_opt_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_dxpl_mpio_chunk_opt_num(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_dxpl_mpio_chunk_opt_ratio(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5FD_multi_init();
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5FD_multi_term();
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_fapl_multi(0, NULL, NULL, NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_fapl_multi(0, NULL, NULL, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_fapl_split(0, NULL, 0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5FD_sec2_init();
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5FD_sec2_term();
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_fapl_sec2(0);
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5FD_stdio_init();
#endif

#if BRAHMA_HDF5_VERSION >= 100800
  H5FD_stdio_term();
#endif

#if BRAHMA_HDF5_VERSION >= 100800 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_fapl_stdio(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5get_free_list_sizes(NULL, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5get_alloc_stats(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Iiterate(static_cast<H5I_type_t>(0), NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Tflush(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Trefresh(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Treclaim(0, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Lget_info2(0, NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Lget_info_by_idx2(0, NULL, static_cast<H5_index_t>(0),
                      static_cast<H5_iter_order_t>(0), 0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Literate2(0, static_cast<H5_index_t>(0), static_cast<H5_iter_order_t>(0),
              NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Literate_by_name2(0, NULL, static_cast<H5_index_t>(0),
                      static_cast<H5_iter_order_t>(0), NULL, NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Lvisit2(0, static_cast<H5_index_t>(0), static_cast<H5_iter_order_t>(0),
            NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Lvisit_by_name2(0, NULL, static_cast<H5_index_t>(0),
                    static_cast<H5_iter_order_t>(0), NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Lget_info1(0, NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Lget_info_by_idx1(0, NULL, static_cast<H5_index_t>(0),
                      static_cast<H5_iter_order_t>(0), 0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Literate1(0, static_cast<H5_index_t>(0), static_cast<H5_iter_order_t>(0),
              NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Literate_by_name1(0, NULL, static_cast<H5_index_t>(0),
                      static_cast<H5_iter_order_t>(0), NULL, NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Lvisit1(0, static_cast<H5_index_t>(0), static_cast<H5_iter_order_t>(0),
            NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Lvisit_by_name1(0, NULL, static_cast<H5_index_t>(0),
                    static_cast<H5_iter_order_t>(0), NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Oopen_by_token(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Oget_info3(0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Oget_info_by_name3(0, NULL, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Oget_info_by_idx3(0, NULL, static_cast<H5_index_t>(0),
                      static_cast<H5_iter_order_t>(0), 0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Oget_native_info(0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Oget_native_info_by_name(0, NULL, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Oget_native_info_by_idx(0, NULL, static_cast<H5_index_t>(0),
                            static_cast<H5_iter_order_t>(0), 0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Ovisit3(0, static_cast<H5_index_t>(0), static_cast<H5_iter_order_t>(0),
            NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Ovisit_by_name3(0, NULL, static_cast<H5_index_t>(0),
                    static_cast<H5_iter_order_t>(0), NULL, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Oflush(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Orefresh(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Odisable_mdc_flushes(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Oenable_mdc_flushes(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Oare_mdc_flushes_disabled(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Otoken_cmp(0, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Otoken_to_str(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Otoken_from_str(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Oget_info1(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Oget_info_by_name1(0, NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Oget_info_by_idx1(0, NULL, static_cast<H5_index_t>(0),
                      static_cast<H5_iter_order_t>(0), 0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Oget_info2(0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Oget_info_by_name2(0, NULL, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Oget_info_by_idx2(0, NULL, static_cast<H5_index_t>(0),
                      static_cast<H5_iter_order_t>(0), 0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Ovisit1(0, static_cast<H5_index_t>(0), static_cast<H5_iter_order_t>(0),
            NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Ovisit_by_name1(0, NULL, static_cast<H5_index_t>(0),
                    static_cast<H5_iter_order_t>(0), NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Ovisit2(0, static_cast<H5_index_t>(0), static_cast<H5_iter_order_t>(0),
            NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Ovisit_by_name2(0, NULL, static_cast<H5_index_t>(0),
                    static_cast<H5_iter_order_t>(0), NULL, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Dget_num_chunks(0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Dget_chunk_info_by_coord(0, NULL, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Dget_chunk_info(0, 0, 0, NULL, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Dwrite_chunk(0, 0, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Dread_chunk(0, 0, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Dflush(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Drefresh(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Dformat_convert(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Dget_chunk_index_type(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Eappend_stack(0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Fis_accessible(NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Fdelete(NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Fget_fileno(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Fget_eoa(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Fincrement_filesize(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Fget_info2(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Fget_metadata_read_retry_info(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Fstart_swmr_write(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Fget_free_sections(0, static_cast<H5F_mem_t>(0), 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Fset_libver_bounds(0, static_cast<H5F_libver_t>(0),
                       static_cast<H5F_libver_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Fstart_mdc_logging(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Fstop_mdc_logging(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Fget_mdc_logging_status(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Fformat_convert(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Freset_page_buffering_stats(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Fget_page_buffering_stats(0, 0, 0, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Fget_mdc_image_info(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Fget_dset_no_attrs_hint(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Fset_dset_no_attrs_hint(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Fget_info1(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Fset_latest_format(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Fis_hdf5(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5FDget_eof(NULL, static_cast<H5FD_mem_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5FDflush(NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5FDlock(NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5FDunlock(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Scombine_hyperslab(0, static_cast<H5S_seloper_t>(0), NULL, NULL, NULL,
                       NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Scombine_select(0, static_cast<H5S_seloper_t>(0), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Sencode2(0, NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Sget_regular_hyperslab(0, 0, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Sis_regular_hyperslab(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Smodify_select(0, static_cast<H5S_seloper_t>(0), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Ssel_iter_close(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Ssel_iter_create(0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5Ssel_iter_get_seq_list(0, 0, 0, NULL, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Ssel_iter_reset(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Sselect_adjust(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Sselect_copy(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Sselect_intersect_block(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Sselect_project_intersection(0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Sselect_shape_same(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Sencode1(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pdecode(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pencode2(0, NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_file_space_page_size(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_file_space_strategy(0, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_file_space_page_size(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_file_space_strategy(0, static_cast<H5F_fspace_strategy_t>(0), 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_driver_info(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_evict_on_close(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_file_locking(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_mdc_image_config(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_mdc_log_options(0, NULL, const_cast<char*>(""), NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_metadata_read_attempts(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_object_flush_cb(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_page_buffer_size(0, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_vol_id(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_vol_info(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_evict_on_close(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_file_locking(0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_mdc_log_options(0, 0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_metadata_read_attempts(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_object_flush_cb(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_vol(0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_all_coll_metadata_ops(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_all_coll_metadata_ops(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_coll_metadata_write(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_coll_metadata_write(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_mpi_params(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_mpi_params(0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_mdc_image_config(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_page_buffer_size(0, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_chunk_opts(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_dset_no_attrs_hint(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_virtual_count(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_virtual_dsetname(0, 0, const_cast<char*>(""), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_virtual_filename(0, 0, const_cast<char*>(""), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_virtual_srcspace(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_virtual_vspace(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_chunk_opts(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_dset_no_attrs_hint(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_virtual(0, 0, NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_append_flush(0, 0, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_virtual_prefix(0, const_cast<char*>(""), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_virtual_printf_gap(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_virtual_view(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_append_flush(0, 0, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_virtual_prefix(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_virtual_printf_gap(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_virtual_view(0, static_cast<H5D_vds_view_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pencode1(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_file_space(0, static_cast<H5F_file_space_type_t>(0), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_file_space(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Rcreate_object(0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Rcreate_region(0, NULL, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Rcreate_attr(0, NULL, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Rdestroy(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Rget_type(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Requal(NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Rcopy(NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Ropen_object(NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Ropen_region(NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Ropen_attr(NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Rget_obj_type3(NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Rget_file_name(NULL, const_cast<char*>(""), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Rget_obj_name(NULL, 0, const_cast<char*>(""), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Rget_attr_name(NULL, const_cast<char*>(""), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Rdereference1(0, static_cast<H5R_type_t>(0), NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Rget_obj_type2(0, static_cast<H5R_type_t>(0), NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Rdereference2(0, 0, static_cast<H5R_type_t>(0), NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLregister_connector_by_name(NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLregister_connector_by_value(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLis_connector_registered_by_name(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLis_connector_registered_by_value(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLget_connector_id(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLget_connector_id_by_name(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLget_connector_id_by_value(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLget_connector_name(0, const_cast<char*>(""), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLclose(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLunregister_connector(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLquery_optional(0, static_cast<H5VL_subclass_t>(0), 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLobject_is_native(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLregister_connector(NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLobject(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLget_file_type(NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLpeek_connector_id_by_name(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLpeek_connector_id_by_value(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLcmp_connector_cls(NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLwrap_register(NULL, static_cast<H5I_type_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLretrieve_lib_state(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLrestore_lib_state(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLreset_lib_state();
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLfree_lib_state(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLget_object(NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLget_wrap_ctx(NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLwrap_object(NULL, static_cast<H5I_type_t>(0), 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLunwrap_object(NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLfree_wrap_ctx(NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLinitialize(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLterminate(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLget_cap_flags(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLget_value(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLcopy_connector_info(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLcmp_connector_info(NULL, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLfree_connector_info(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLconnector_info_to_str(NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLconnector_str_to_info(NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLattr_create(NULL, NULL, 0, NULL, 0, 0, 0, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLattr_open(NULL, NULL, 0, NULL, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLattr_read(NULL, 0, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLattr_write(NULL, 0, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLattr_get(NULL, 0, static_cast<H5VL_attr_get_t>(0), 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLattr_specific(NULL, NULL, 0, static_cast<H5VL_attr_specific_t>(0), 0,
                    NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLattr_optional(NULL, 0, 0, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLattr_close(NULL, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLdataset_create(NULL, NULL, 0, NULL, 0, 0, 0, 0, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLdataset_open(NULL, NULL, 0, NULL, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLdataset_read(NULL, 0, 0, 0, 0, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLdataset_write(NULL, 0, 0, 0, 0, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLdataset_get(NULL, 0, static_cast<H5VL_dataset_get_t>(0), 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLdataset_specific(NULL, 0, static_cast<H5VL_dataset_specific_t>(0), 0,
                       NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLdataset_optional(NULL, 0, 0, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLdataset_close(NULL, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLdatatype_commit(NULL, NULL, 0, NULL, 0, 0, 0, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLdatatype_open(NULL, NULL, 0, NULL, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLdatatype_get(NULL, 0, static_cast<H5VL_datatype_get_t>(0), 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLdatatype_specific(NULL, 0, static_cast<H5VL_datatype_specific_t>(0), 0,
                        NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLdatatype_optional(NULL, 0, 0, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLdatatype_close(NULL, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLfile_create(NULL, 0, 0, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLfile_open(NULL, 0, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLfile_get(NULL, 0, static_cast<H5VL_file_get_t>(0), 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLfile_specific(NULL, 0, static_cast<H5VL_file_specific_t>(0), 0, NULL,
                    NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLfile_optional(NULL, 0, 0, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLfile_close(NULL, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLgroup_create(NULL, NULL, 0, NULL, 0, 0, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLgroup_open(NULL, NULL, 0, NULL, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLgroup_get(NULL, 0, static_cast<H5VL_group_get_t>(0), 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLgroup_specific(NULL, 0, static_cast<H5VL_group_specific_t>(0), 0, NULL,
                     NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLgroup_optional(NULL, 0, 0, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLgroup_close(NULL, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLlink_create(static_cast<H5VL_link_create_type_t>(0), NULL, NULL, 0, 0, 0,
                  0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLlink_copy(NULL, NULL, NULL, NULL, 0, 0, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLlink_move(NULL, NULL, NULL, NULL, 0, 0, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLlink_get(NULL, NULL, 0, static_cast<H5VL_link_get_t>(0), 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLlink_specific(NULL, NULL, 0, static_cast<H5VL_link_specific_t>(0), 0,
                    NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLlink_optional(NULL, 0, 0, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLobject_open(NULL, NULL, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLobject_copy(NULL, NULL, NULL, NULL, NULL, NULL, 0, 0, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLobject_get(NULL, NULL, 0, static_cast<H5VL_object_get_t>(0), 0, NULL,
                 NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLobject_specific(NULL, NULL, 0, static_cast<H5VL_object_specific_t>(0), 0,
                      NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLobject_optional(NULL, 0, 0, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLintrospect_get_conn_cls(NULL, 0, static_cast<H5VL_get_conn_lvl_t>(0),
                              NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLintrospect_opt_query(NULL, 0, static_cast<H5VL_subclass_t>(0), 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLrequest_wait(NULL, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLrequest_notify(NULL, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLrequest_cancel(NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLrequest_specific(NULL, 0, static_cast<H5VL_request_specific_t>(0), NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLrequest_optional(NULL, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLrequest_free(NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLblob_put(NULL, 0, NULL, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLblob_get(NULL, 0, NULL, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLblob_specific(NULL, 0, NULL, static_cast<H5VL_blob_specific_t>(0), NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLblob_optional(NULL, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLtoken_cmp(NULL, 0, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLtoken_to_str(NULL, static_cast<H5I_type_t>(0), 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLtoken_from_str(NULL, static_cast<H5I_type_t>(0), 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200
  H5VLoptional(NULL, 0, 0, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLnative_addr_to_token(0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VLnative_token_to_addr(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VL_native_register();
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5FD_splitter_init();
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pset_fapl_splitter(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5Pget_fapl_splitter(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101200 && BRAHMA_HDF5_VERSION <= 101400
  H5VL_pass_through_register();
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5atclose(NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5is_library_terminating(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Oopen_async(NULL, NULL, 0, 0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Oopen_by_idx_async(NULL, NULL, 0, 0, NULL, static_cast<H5_index_t>(0),
                       static_cast<H5_iter_order_t>(0), 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Oget_info_by_name_async(NULL, NULL, 0, 0, NULL, NULL, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Ocopy_async(NULL, NULL, 0, 0, NULL, 0, NULL, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Oclose_async(NULL, NULL, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Oflush_async(NULL, NULL, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Orefresh_async(NULL, NULL, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Tclose_async(NULL, NULL, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Tcommit_async(NULL, NULL, 0, 0, NULL, 0, 0, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Topen_async(NULL, NULL, 0, 0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Aclose_async(NULL, NULL, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Acreate_async(NULL, NULL, 0, 0, NULL, 0, 0, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Acreate_by_name_async(NULL, NULL, 0, 0, NULL, NULL, 0, 0, 0, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Aexists_async(NULL, NULL, 0, 0, NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Aexists_by_name_async(NULL, NULL, 0, 0, NULL, NULL, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Aopen_async(NULL, NULL, 0, 0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Aopen_by_idx_async(NULL, NULL, 0, 0, NULL, static_cast<H5_index_t>(0),
                       static_cast<H5_iter_order_t>(0), 0, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Aopen_by_name_async(NULL, NULL, 0, 0, NULL, NULL, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Aread_async(NULL, NULL, 0, 0, 0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Arename_async(NULL, NULL, 0, 0, NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Arename_by_name_async(NULL, NULL, 0, 0, NULL, NULL, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Awrite_async(NULL, NULL, 0, 0, 0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Dcreate_async(NULL, NULL, 0, 0, NULL, 0, 0, 0, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Dopen_async(NULL, NULL, 0, 0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Dget_space_async(NULL, NULL, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Dchunk_iter(0, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Dread_multi(0, 0, 0, 0, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Dread_async(NULL, NULL, 0, 0, 0, 0, 0, 0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Dread_multi_async(NULL, NULL, 0, 0, 0, 0, 0, 0, 0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Dwrite_multi(0, 0, 0, 0, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Dwrite_async(NULL, NULL, 0, 0, 0, 0, 0, 0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Dwrite_multi_async(NULL, NULL, 0, 0, 0, 0, 0, 0, 0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Dset_extent_async(NULL, NULL, 0, 0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Dclose_async(NULL, NULL, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5EScreate();
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5ESwait(0, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5EScancel(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5ESget_count(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5ESget_op_counter(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5ESget_err_status(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5ESget_err_count(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5ESget_err_info(0, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5ESfree_err_info(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5ESregister_insert_func(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5ESregister_complete_func(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5ESclose(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Fcreate_async(NULL, NULL, 0, NULL, 0, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Fopen_async(NULL, NULL, 0, NULL, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Freopen_async(NULL, NULL, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Fflush_async(NULL, NULL, 0, 0, static_cast<H5F_scope_t>(0), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Fclose_async(NULL, NULL, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Fset_mdc_config(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Lcreate_hard_async(NULL, NULL, 0, 0, NULL, 0, NULL, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Lcreate_soft_async(NULL, NULL, 0, NULL, 0, NULL, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Ldelete_async(NULL, NULL, 0, 0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Ldelete_by_idx_async(NULL, NULL, 0, 0, NULL, static_cast<H5_index_t>(0),
                         static_cast<H5_iter_order_t>(0), 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Lexists_async(NULL, NULL, 0, 0, NULL, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Literate_async(NULL, NULL, 0, 0, static_cast<H5_index_t>(0),
                   static_cast<H5_iter_order_t>(0), NULL, NULL, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Gcreate_async(NULL, NULL, 0, 0, NULL, 0, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Gopen_async(NULL, NULL, 0, 0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Gget_info_async(NULL, NULL, 0, 0, NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Gget_info_by_name_async(NULL, NULL, 0, 0, NULL, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Gget_info_by_idx_async(NULL, NULL, 0, 0, NULL, static_cast<H5_index_t>(0),
                           static_cast<H5_iter_order_t>(0), 0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Gclose_async(NULL, NULL, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLquery_optional(0, static_cast<H5VL_subclass_t>(0), 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Ropen_object_async(NULL, NULL, 0, NULL, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Ropen_region_async(NULL, NULL, 0, NULL, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Ropen_attr_async(NULL, NULL, 0, NULL, 0, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLregister_opt_operation(static_cast<H5VL_subclass_t>(0), NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLfind_opt_operation(static_cast<H5VL_subclass_t>(0), NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLunregister_opt_operation(static_cast<H5VL_subclass_t>(0), NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLattr_optional_op(NULL, NULL, 0, 0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLdataset_optional_op(NULL, NULL, 0, 0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLdatatype_optional_op(NULL, NULL, 0, 0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLfile_optional_op(NULL, NULL, 0, 0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLgroup_optional_op(NULL, NULL, 0, 0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLlink_optional_op(NULL, NULL, 0, 0, NULL, 0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLobject_optional_op(NULL, NULL, 0, 0, NULL, 0, NULL, 0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLrequest_optional_op(NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Ssel_iter_get_seq_list(0, 0, 0, NULL, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Pget_driver_config_str(0, const_cast<char*>(""), 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Pset_driver_by_name(0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Pset_driver_by_value(0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Pget_vol_cap_flags(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Pset_dataset_io_hyperslab_selection(0, 0, static_cast<H5S_seloper_t>(0),
                                        NULL, NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Pset_selection_io(0, static_cast<H5D_selection_io_mode_t>(0));
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Pget_selection_io(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Pget_no_selection_io_cause(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Pget_actual_selection_io_mode(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Pset_modify_write_buf(0, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Pget_modify_write_buf(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5ESinsert_request(0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5ESget_requests(0, static_cast<H5_iter_order_t>(0), NULL, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5FDperform_init(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5FDis_driver_registered_by_name(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5FDis_driver_registered_by_value(0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5FDread_vector(NULL, 0, 0, static_cast<H5FD_mem_t>(0), 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5FDwrite_vector(NULL, 0, 0, static_cast<H5FD_mem_t>(0), 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5FDread_selection(NULL, static_cast<H5FD_mem_t>(0), 0, 0, 0, 0, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5FDwrite_selection(NULL, static_cast<H5FD_mem_t>(0), 0, 0, 0, 0, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5FDread_vector_from_selection(NULL, static_cast<H5FD_mem_t>(0), 0, 0, 0, 0,
                                 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5FDwrite_vector_from_selection(NULL, static_cast<H5FD_mem_t>(0), 0, 0, 0, 0,
                                  0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5FDread_from_selection(NULL, static_cast<H5FD_mem_t>(0), 0, 0, 0, 0, 0, 0,
                          NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5FDwrite_from_selection(NULL, static_cast<H5FD_mem_t>(0), 0, 0, 0, 0, 0, 0,
                           NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5FDdelete(NULL, 0);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5FDctl(NULL, 0, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Iregister_future(static_cast<H5I_type_t>(0), NULL, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5TSmutex_acquire(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5TSmutex_release(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5TSmutex_get_attempt_count(NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLstart_lib_state();
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLfinish_lib_state();
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLget_cap_flags(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLattr_get(NULL, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLattr_specific(NULL, NULL, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLattr_optional(NULL, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLdataset_read(0, NULL, 0, 0, 0, 0, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLdataset_write(0, NULL, 0, 0, 0, 0, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLdataset_get(NULL, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLdataset_specific(NULL, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLdataset_optional(NULL, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLdatatype_get(NULL, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLdatatype_specific(NULL, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLdatatype_optional(NULL, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLfile_get(NULL, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLfile_specific(NULL, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLfile_optional(NULL, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLgroup_get(NULL, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLgroup_specific(NULL, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLgroup_optional(NULL, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLlink_create(NULL, NULL, NULL, 0, 0, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLlink_get(NULL, NULL, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLlink_specific(NULL, NULL, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLlink_optional(NULL, NULL, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLobject_get(NULL, NULL, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLobject_specific(NULL, NULL, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLobject_optional(NULL, NULL, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLintrospect_get_cap_flags(NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLintrospect_opt_query(NULL, 0, static_cast<H5VL_subclass_t>(0), 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLrequest_wait(NULL, 0, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLrequest_cancel(NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLrequest_specific(NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLrequest_optional(NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLblob_specific(NULL, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLblob_optional(NULL, 0, NULL, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5VLoptional(NULL, 0, NULL, 0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5FD_onion_init();
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Pget_fapl_onion(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5Pset_fapl_onion(0, NULL);
#endif

#if BRAHMA_HDF5_VERSION >= 101400
  H5FDonion_get_revision_count(NULL, 0, NULL);
#endif

#endif

  exit(0);
  return 0;
}
